{
  "api/HeyBox.ApplicationCommandType.html": {
    "href": "api/HeyBox.ApplicationCommandType.html",
    "title": "Enum ApplicationCommandType | HeyBox.Net 文档",
    "keywords": "Enum ApplicationCommandType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示应用命令的类型。 public enum ApplicationCommandType Fields Slash = 0 斜线命令。"
  },
  "api/HeyBox.AttachmentType.html": {
    "href": "api/HeyBox.AttachmentType.html",
    "title": "Enum AttachmentType | HeyBox.Net 文档",
    "keywords": "Enum AttachmentType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示附件的类型。 public enum AttachmentType Fields Image = 0 附件是一张图片。"
  },
  "api/HeyBox.CacheMode.html": {
    "href": "api/HeyBox.CacheMode.html",
    "title": "Enum CacheMode | HeyBox.Net 文档",
    "keywords": "Enum CacheMode Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示应该使用的缓存模式。 public enum CacheMode Fields AllowDownload = 0 允许在实体不存在于现有缓存中时下载对象。 CacheOnly = 1 仅允许从现有缓存中提取对象。"
  },
  "api/HeyBox.Cacheable-2.html": {
    "href": "api/HeyBox.Cacheable-2.html",
    "title": "Struct Cacheable<TEntity, TId> | HeyBox.Net 文档",
    "keywords": "Struct Cacheable<TEntity, TId> Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个可延迟加载的缓存实体。 public readonly struct Cacheable<TEntity, TId> where TEntity : IEntity<TId> where TId : IEquatable<TId> Type Parameters TEntity 可延迟加载的缓存实体的类型。 TId 可延迟加载的缓存实体的 ID 的类型。 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasValue 获取此实体是否已缓存。 public bool HasValue { get; } Property Value bool Id 获取此实体的唯一标识符。 public TId Id { get; } Property Value TId Value 如果可以从缓存中获取实体，则获取该实体。 public TEntity? Value { get; } Property Value TEntity Remarks 此属性不保证非空；在无法从缓存中拉取实体的情况下，此属性返回 null。 Methods DownloadAsync() 将此实体下载到缓存中。 public Task<TEntity?> DownloadAsync() Returns Task<TEntity> 一个表示异步下载操作的任务。任务结果包含下载的实体；如果无法通过 API 请求下载实体，或下载的实体无法转换为 TEntity，则为 null。 GetOrDownloadAsync() 如果实体已存在于缓存中，则返回该实体；否则下载该实体并返回。 public Task<TEntity?> GetOrDownloadAsync() Returns Task<TEntity> 一个表示异步获取或下载操作的任务。任务结果包含所获取或下载的实体；如果无法通过 API 请求下载实体，或下载的实体无法转换为 TEntity，则为 null。"
  },
  "api/HeyBox.Cacheable-4.html": {
    "href": "api/HeyBox.Cacheable-4.html",
    "title": "Struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> | HeyBox.Net 文档",
    "keywords": "Struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个可延迟加载的缓存实体。 public readonly struct Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> where TCachedEntity : IEntity<TId>, TRelationship where TDownloadableEntity : IEntity<TId>, TRelationship where TId : IEquatable<TId> Type Parameters TCachedEntity 可延迟加载的缓存实体的类型。 TDownloadableEntity 可从 API 请求下载的实体的类型。 TRelationship 由 TCachedEntity 和 TDownloadableEntity 共同继承或实现的类型。 TId 可延迟加载的缓存实体的 ID 的类型。 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties HasValue 获取此实体是否已缓存。 public bool HasValue { get; } Property Value bool Id 获取此实体的唯一标识符。 public TId Id { get; } Property Value TId Value 如果可以从缓存中获取实体，则获取该实体。 public TCachedEntity? Value { get; } Property Value TCachedEntity Remarks 此属性不保证非空；在无法从缓存中拉取实体的情况下，此属性返回 null。 Methods DownloadAsync() 将此实体下载到缓存中。 public Task<TDownloadableEntity?> DownloadAsync() Returns Task<TDownloadableEntity> 一个表示异步下载操作的任务。任务结果包含下载的实体；如果无法通过 API 请求下载实体，或下载的实体无法转换为 TDownloadableEntity，则为 null。 GetOrDownloadAsync() 如果实体已存在于缓存中，则返回该实体；否则下载该实体并返回。 public Task<TRelationship?> GetOrDownloadAsync() Returns Task<TRelationship> 一个表示异步获取或下载操作的任务。任务结果包含所获取或下载的实体；如果无法通过 API 请求下载实体，或下载的实体无法转换为 TDownloadableEntity，则为 null。"
  },
  "api/HeyBox.ChannelExtensions.html": {
    "href": "api/HeyBox.ChannelExtensions.html",
    "title": "Class ChannelExtensions | HeyBox.Net 文档",
    "keywords": "Class ChannelExtensions Namespace HeyBox Assembly HeyBox.Net.Core.dll 提供用于各种频道实体的扩展方法。 public static class ChannelExtensions Inheritance object ChannelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetChannelType(IChannel) 尝试基于频道所实现的接口类型获取频道的实际类型。 public static ChannelType? GetChannelType(this IChannel channel) Parameters channel IChannel 要获取其类型的频道。 Returns ChannelType? 如果此频道的实际类型已知，则返回其类型；否则，返回 null。"
  },
  "api/HeyBox.ChannelType.html": {
    "href": "api/HeyBox.ChannelType.html",
    "title": "Enum ChannelType | HeyBox.Net 文档",
    "keywords": "Enum ChannelType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示频道的类型。 public enum ChannelType Fields Announcement = 2 表示一个公告频道。 Category = 3 表示一个分组频道。 Temporary = 4 表示一个临时频道。 TemporaryManager = 5 表示一个临时频道管理器。 Text = 1 表示一个文本频道。 Unspecified = -1 频道类型未指定。 Voice = 0 表示一个语音频道。"
  },
  "api/HeyBox.ConnectionState.html": {
    "href": "api/HeyBox.ConnectionState.html",
    "title": "Enum ConnectionState | HeyBox.Net 文档",
    "keywords": "Enum ConnectionState Namespace HeyBox Assembly HeyBox.Net.Core.dll 指定客户端的连接状态。 public enum ConnectionState : byte Fields Connected = 2 客户端已连接到黑盒语音。 Connecting = 1 客户端正在连接到黑盒语音。 Disconnected = 0 客户端已断开与黑盒语音的连接。 Disconnecting = 3 客户端正在断开与黑盒语音的连接。"
  },
  "api/HeyBox.CreateAttachmentMode.html": {
    "href": "api/HeyBox.CreateAttachmentMode.html",
    "title": "Enum CreateAttachmentMode | HeyBox.Net 文档",
    "keywords": "Enum CreateAttachmentMode Namespace HeyBox Assembly HeyBox.Net.Core.dll 指示 FileAttachment 如何创建附件。 public enum CreateAttachmentMode Fields AssetUri = 2 通过指向 HeyBox 服务器上的文件的 Uri 创建附件。 FilePath = 0 通过本地文件路径创建附件。 Stream = 1 通过 Stream 流的实例创建附件。"
  },
  "api/HeyBox.FileAttachment.html": {
    "href": "api/HeyBox.FileAttachment.html",
    "title": "Struct FileAttachment | HeyBox.Net 文档",
    "keywords": "Struct FileAttachment Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个文件附件。 public struct FileAttachment : IDisposable Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors FileAttachment(Stream, string, AttachmentType, Size?) 通过流创建附件。 public FileAttachment(Stream stream, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null) Parameters stream Stream 创建附件所使用的流。 filename string 文件名。 type AttachmentType 附件的类型。 imageSize Size? 图片附件的图像尺寸。 FileAttachment(string, string?, AttachmentType, Size?) 通过文件路径创建附件。 public FileAttachment(string path, string? filename = null, AttachmentType type = AttachmentType.Image, Size? imageSize = null) Parameters path string 文件的路径。 filename string 文件名。 type AttachmentType 附件的类型。 imageSize Size? 图片附件的图像尺寸。 Remarks 此构造函数不会校验文件路径的格式，path 的值将会直接传递给 OpenRead(string) 方法。 See Also OpenRead(string) FileAttachment(Uri, string, AttachmentType, Size?) 通过 URL 创建附件。 public FileAttachment(Uri uri, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null) Parameters uri Uri 文件的 URL。 filename string 文件名。 type AttachmentType 附件的类型。 imageSize Size? 图片附件的图像尺寸。 Remarks URL 应该是指向 HeyBox 服务器上的资源的 URL。如果传入的网络地址不是指向 HeyBox 服务器上的资源的 URL， 虽然此构造函数不会引发异常，但在发送消息时可能会引发异常。此时，网络资源应先通过转存至 HeyBox 服务器上，再使用此构造函数。 See Also ValidateHeyBoxAssetUrl(string) Properties FileName 获取此附件的文件名。 public readonly string FileName { get; } Property Value string ImageSize 获取或设置图片附件的图像尺寸。 public Size? ImageSize { readonly get; set; } Property Value Size? Mode 获取创建此文件附件的方式。 public readonly CreateAttachmentMode Mode { get; } Property Value CreateAttachmentMode Stream 获取包含文件内容的流。 public readonly Stream? Stream { get; } Property Value Stream Type 获取此附件的类型。 public readonly AttachmentType Type { get; } Property Value AttachmentType Uri 获取指向文件的 URL。 public readonly Uri? Uri { get; } Property Value Uri Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/HeyBox.Format.html": {
    "href": "api/HeyBox.Format.html",
    "title": "Class Format | HeyBox.Net 文档",
    "keywords": "Class Format Namespace HeyBox Assembly HeyBox.Net.Core.dll 提供用于格式化字符的帮助类。 public static class Format Inheritance object Format Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Image(FileAttachment) 获取一个 Markdown 格式的图片。 public static string Image(FileAttachment attachment) Parameters attachment FileAttachment 图片的附件信息。 Returns string Image(string, string?) 获取一个 Markdown 格式的图片。 public static string Image(string url, string? alternative = null) Parameters url string 图片的 URL。 alternative string 图片的替代文本。 Returns string Image(Uri, string?) 获取一个 Markdown 格式的图片。 public static string Image(Uri uri, string? alternative = null) Parameters uri Uri 图片的 URL。 alternative string 图片的替代文本。 Returns string StripMarkdown(string) 移除文本中的 Markdown 格式字符。 public static string StripMarkdown(string text) Parameters text string 要移除 Markdown 格式字符的文本。 Returns string 获取移除 Markdown 格式字符后的文本。 Remarks 此方法不会过多地分析 Markdown 的复杂格式，只会简单地移除 KMarkdown 中的以下字符： *、`、~、>、</code>。"
  },
  "api/HeyBox.HeyBoxConfig.html": {
    "href": "api/HeyBox.HeyBoxConfig.html",
    "title": "Class HeyBoxConfig | HeyBox.Net 文档",
    "keywords": "Class HeyBoxConfig Namespace HeyBox Assembly HeyBox.Net.Core.dll 定义 HeyBox.Net 各种基础行为的配置项。 public class HeyBoxConfig Inheritance object HeyBoxConfig Derived HeyBoxRestConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIUrl 获取黑盒语音 API 请求的根 URL。 public const string APIUrl = \"https://chat.xiaoheihe.cn/\" Field Value string APIVersion 获取 HeyBox.Net 使用的 API 版本。 public const int APIVersion = 2 Field Value int ChatVersion 获取黑盒语音的版本号。 public const string ChatVersion = \"1.27.2\" Field Value string CreateAssetAPIUrl 获取黑盒语音上传媒体文件 API 请求的根 URL。 public const string CreateAssetAPIUrl = \"https://chat-upload.xiaoheihe.cn/\" Field Value string DefaultRequestTimeout 获取请求超时的默认时间，以毫秒为单位。 public const int DefaultRequestTimeout = 6000 Field Value int Properties CommonQueryParameters 获取用于 API 请求的公共查询参数。 public static NameValueCollection CommonQueryParameters { get; } Property Value NameValueCollection CommonQueryString 获取用于 API 请求的公共查询参数的字符串表示形式。 public static string CommonQueryString { get; } Property Value string DefaultRatelimitCallback 获取或设置默认的速率限制回调委托。 public Func<IRateLimitInfo, Task>? DefaultRatelimitCallback { get; set; } Property Value Func<IRateLimitInfo, Task> Remarks 若同时设置了此属性与用于各个请求的 RatelimitCallback，则将优先使用 RatelimitCallback。 DefaultRetryMode 获取或设置请求在出现错误时的默认行为。 public RetryMode DefaultRetryMode { get; set; } Property Value RetryMode See Also RetryMode LogLevel 获取或设置将发送到日志事件的最低日志严重性级别。 public LogSeverity LogLevel { get; set; } Property Value LogSeverity UserAgent 获取 HeyBox.Net 在每个请求中使用的用户代理。 public static string UserAgent { get; } Property Value string Version 获取 HeyBox.Net 使用的默认请求超时时间。 public static string Version { get; } Property Value string 一个包含详细版本信息的字符串，包括构建号；当无法获取构建版本时为 Unknown。"
  },
  "api/HeyBox.HeyBoxError.html": {
    "href": "api/HeyBox.HeyBoxError.html",
    "title": "Struct HeyBoxError | HeyBox.Net 文档",
    "keywords": "Struct HeyBoxError Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个 HeyBox 返回的错误。 public struct HeyBoxError Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Code 获取错误的代码。 public readonly string Code { get; } Property Value string Message 获取错误的原因。 public readonly string Message { get; } Property Value string"
  },
  "api/HeyBox.HeyBoxErrorCode.html": {
    "href": "api/HeyBox.HeyBoxErrorCode.html",
    "title": "Struct HeyBoxErrorCode | HeyBox.Net 文档",
    "keywords": "Struct HeyBoxErrorCode Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示从 HeyBox 接收到的错误代码。 public readonly record struct HeyBoxErrorCode : IEquatable<HeyBoxErrorCode> Implements IEquatable<HeyBoxErrorCode> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields OK 获取表示操作成功的代码。 public static readonly HeyBoxErrorCode OK Field Value HeyBoxErrorCode Properties RawCode 获取错误代码。 public string RawCode { get; init; } Property Value string"
  },
  "api/HeyBox.HeyBoxJsonError.html": {
    "href": "api/HeyBox.HeyBoxJsonError.html",
    "title": "Struct HeyBoxJsonError | HeyBox.Net 文档",
    "keywords": "Struct HeyBoxJsonError Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个在执行 API 请求后从 HeyBox 接收到的 JSON 数据中解析出的错误。 public struct HeyBoxJsonError Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Errors 获取与路径上的特定属性关联的错误集合。 public readonly IReadOnlyCollection<HeyBoxError> Errors { get; } Property Value IReadOnlyCollection<HeyBoxError> Path 获取错误的 JSON 路径。 public readonly string Path { get; } Property Value string"
  },
  "api/HeyBox.IChannel.html": {
    "href": "api/HeyBox.IChannel.html",
    "title": "Interface IChannel | HeyBox.Net 文档",
    "keywords": "Interface IChannel Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的频道。 public interface IChannel : IEntity<ulong> Inherited Members IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Name 获取此频道的名称。 string? Name { get; } Property Value string"
  },
  "api/HeyBox.IEntity-1.html": {
    "href": "api/HeyBox.IEntity-1.html",
    "title": "Interface IEntity<TId> | HeyBox.Net 文档",
    "keywords": "Interface IEntity<TId> Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的具有唯一标识符的实体。 public interface IEntity<TId> where TId : IEquatable<TId> Type Parameters TId 唯一标识符的类型。 Properties Id 获取此实体的唯一标识符。 TId Id { get; } Property Value TId IsPopulated 获取此实体是否填充了真实数据。 bool IsPopulated { get; } Property Value bool Remarks 由于黑盒语音的 Bot 能力仍处于初步阶段，HeyBox.Net 无法从网关或 API 获取所有必要数据。当此实体的数据来源于网关或 API 时，此属性值为 true。当 HeyBox.Net 需要创建实体但无法从网关或 API 获取数据时，HeyBox.Net 会创建一个仅包含 ID 的实体，此时，此属性值为 false。"
  },
  "api/HeyBox.IHeyBoxClient.html": {
    "href": "api/HeyBox.IHeyBoxClient.html",
    "title": "Interface IHeyBoxClient | HeyBox.Net 文档",
    "keywords": "Interface IHeyBoxClient Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的黑盒语音 Bot 客户端。 public interface IHeyBoxClient : IDisposable Inherited Members IDisposable.Dispose() Properties ConnectionState 获取当前连接的状态。 ConnectionState ConnectionState { get; } Property Value ConnectionState TokenType 获取已登录用户的令牌类型。 TokenType TokenType { get; } Property Value TokenType Methods GetChannelAsync(ulong, CacheMode, RequestOptions?) 获取一个频道。 Task<IChannel?> GetChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions? options = null) Parameters id ulong 频道的 ID。 mode CacheMode 指示当前方法是否应该仅从缓存中获取结果，还是可以通过 API 请求获取数据。 options RequestOptions 发送请求时要使用的选项。 Returns Task<IChannel> 一个表示异步获取操作的任务。任务的结果是具有指定 ID 的频道；若指定 ID 的频道不存在，则为 null。 GetRoomAsync(ulong, CacheMode, RequestOptions?) 获取一个房间。 Task<IRoom?> GetRoomAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions? options = null) Parameters id ulong 房间的 ID。 mode CacheMode 指示当前方法是否应该仅从缓存中获取结果，还是可以通过 API 请求获取数据。 options RequestOptions 发送请求时要使用的选项。 Returns Task<IRoom> 一个表示异步获取操作的任务。任务的结果是具有指定 ID 的房间；若指定 ID 的房间不存在，则为 null。 GetUserAsync(uint, CacheMode, RequestOptions?) 获取一个用户。 Task<IUser?> GetUserAsync(uint id, CacheMode mode = CacheMode.AllowDownload, RequestOptions? options = null) Parameters id uint 用户的 ID。 mode CacheMode 指示当前方法是否应该仅从缓存中获取结果，还是可以通过 API 请求获取数据。 options RequestOptions 发送请求时要使用的选项。 Returns Task<IUser> 一个表示异步获取操作的任务。任务的结果是具有指定 ID 的用户；若指定 ID 的用户不存在，则为 null。 LoginAsync(TokenType, string, bool) 登录到黑盒语音 API。 Task LoginAsync(TokenType tokenType, string token, bool validateToken = true) Parameters tokenType TokenType 要使用的令牌类型。 token string 要使用的令牌。 validateToken bool 是否验证令牌。 Returns Task 一个表示异步登录操作的任务。 Remarks 验证令牌的操作是通过 ValidateToken(TokenType, string) 方法完成的。 此方法用于向当前客户端设置后续 API 请求的身份验证信息，获取并设置当前所登录用户的信息。 LogoutAsync() 从黑盒语音 API 退出登录。 Task LogoutAsync() Returns Task 一个表示异步退出登录操作的任务。 Remarks 此方法用于清除当前客户端的身份验证信息及所缓存的当前所登录的用户信息。 StartAsync() 启动客户端与黑盒语音之间的连接。 Task StartAsync() Returns Task 一个表示异步启动操作的任务。 Remarks 当前方法会初始化客户端与黑盒语音之间的连接。 important 此方法会在调用后立即返回，因为它会在另一个线程上初始化连接。 StopAsync() 停止客户端与黑盒语音之间的连接。 Task StopAsync() Returns Task 一个表示异步停止操作的任务。"
  },
  "api/HeyBox.IHeyBoxInteraction.html": {
    "href": "api/HeyBox.IHeyBoxInteraction.html",
    "title": "Interface IHeyBoxInteraction | HeyBox.Net 文档",
    "keywords": "Interface IHeyBoxInteraction Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的 HeyBox 交互实体。 public interface IHeyBoxInteraction : IEntity<ulong> Inherited Members IEntity<ulong>.Id IEntity<ulong>.IsPopulated Properties ChannelId 获取执行此交互所在的频道的 ID。 ulong ChannelId { get; } Property Value ulong Data 获取此交互的数据。 IHeyBoxInteractionData Data { get; } Property Value IHeyBoxInteractionData MessageId 获取此交互来源的消息的 ID。 ulong MessageId { get; } Property Value ulong RoomId 获取执行此交互所在的房间的 ID。 ulong? RoomId { get; } Property Value ulong? Type 获取此交互的类型。 InteractionType Type { get; } Property Value InteractionType User 获取执行此交互的用户。 IUser? User { get; } Property Value IUser UserId 获取执行此交互的用户的 ID。 uint UserId { get; } Property Value uint"
  },
  "api/HeyBox.IHeyBoxInteractionData.html": {
    "href": "api/HeyBox.IHeyBoxInteractionData.html",
    "title": "Interface IHeyBoxInteractionData | HeyBox.Net 文档",
    "keywords": "Interface IHeyBoxInteractionData Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的 HeyBox 交互数据。 public interface IHeyBoxInteractionData"
  },
  "api/HeyBox.IInteractionContext.html": {
    "href": "api/HeyBox.IInteractionContext.html",
    "title": "Interface IInteractionContext | HeyBox.Net 文档",
    "keywords": "Interface IInteractionContext Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents the context of an Interaction. public interface IInteractionContext Properties Channel Gets the channel the interaction originated from. IMessageChannel Channel { get; } Property Value IMessageChannel Client Gets the client that will be used to handle this interaction. IHeyBoxClient Client { get; } Property Value IHeyBoxClient Interaction Gets the underlying interaction. IHeyBoxInteraction Interaction { get; } Property Value IHeyBoxInteraction MessageId Gets the message ID the interaction originated from. ulong MessageId { get; } Property Value ulong Room Gets the guild the interaction originated from. IRoom? Room { get; } Property Value IRoom Remarks Will be null if the interaction originated from a DM channel or the interaction was a Context Command interaction. RoomId Gets the application command info that was used to handle this interaction. ulong? RoomId { get; } Property Value ulong? User Gets the user who invoked the interaction event. IUser? User { get; } Property Value IUser UserId Gets the user ID who invoked the interaction. uint UserId { get; } Property Value uint"
  },
  "api/HeyBox.IMentionable.html": {
    "href": "api/HeyBox.IMentionable.html",
    "title": "Interface IMentionable | HeyBox.Net 文档",
    "keywords": "Interface IMentionable Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个可以被提及的实体对象。 public interface IMentionable Properties Mention 获取一个用于提及此对象的格式化字符串。 string Mention { get; } Property Value string"
  },
  "api/HeyBox.IMessage.html": {
    "href": "api/HeyBox.IMessage.html",
    "title": "Interface IMessage | HeyBox.Net 文档",
    "keywords": "Interface IMessage Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的消息。 public interface IMessage : IEntity<ulong> Inherited Members IEntity<ulong>.Id IEntity<ulong>.IsPopulated Properties Author 获取此消息的作者。 IUser Author { get; } Property Value IUser Channel 获取此消息的来源频道。 IMessageChannel Channel { get; } Property Value IMessageChannel CleanContent 获取此消息的纯净内容。 string CleanContent { get; } Property Value string 此属性会对 Content 的内容进行两步操作： 使用 Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) 方法解析所有标签的完整名称； 使用 StripMarkdown(string) 清理所有 KMarkdown 格式字符。 See Also Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) StripMarkdown(string) Content 获取此消息的内容。 string Content { get; } Property Value string Remarks 如果消息不是文本消息，则此属性可能为空或包含原始代码。 Source 获取此消息的来源。 MessageSource Source { get; } Property Value MessageSource Tags 获取此消息中解析出的所有标签。 IReadOnlyCollection<ITag> Tags { get; } Property Value IReadOnlyCollection<ITag> Type 获取此消息的类型。 MessageType Type { get; } Property Value MessageType"
  },
  "api/HeyBox.IMessageChannel.html": {
    "href": "api/HeyBox.IMessageChannel.html",
    "title": "Interface IMessageChannel | HeyBox.Net 文档",
    "keywords": "Interface IMessageChannel Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的消息频道，可以用来发送和接收消息。 public interface IMessageChannel : IChannel, IEntity<ulong> Inherited Members IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel) Methods SendFileAsync(FileAttachment, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 Task<Cacheable<IUserMessage, ulong>> SendFileAsync(FileAttachment attachment, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters attachment FileAttachment 文件的附件信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 Task<Cacheable<IUserMessage, ulong>> SendFileAsync(Stream stream, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters stream Stream 文件的流。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(string, string?, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 Task<Cacheable<IUserMessage, ulong>> SendFileAsync(string path, string? filename = null, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters path string 文件的路径。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendTextAsync(string, IEnumerable<FileAttachment>?, IMessageReference?, RequestOptions?) 发送文本消息到此消息频道。 Task<Cacheable<IUserMessage, ulong>> SendTextAsync(string text, IEnumerable<FileAttachment>? imageFileInfos = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters text string 要发送的文本。 imageFileInfos IEnumerable<FileAttachment> 图片文件的信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。"
  },
  "api/HeyBox.IMessageReference.html": {
    "href": "api/HeyBox.IMessageReference.html",
    "title": "Interface IMessageReference | HeyBox.Net 文档",
    "keywords": "Interface IMessageReference Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的消息引用。 public interface IMessageReference Properties MessageId 获取此引用所指向的消息的 ID。 ulong MessageId { get; } Property Value ulong"
  },
  "api/HeyBox.INestedChannel.html": {
    "href": "api/HeyBox.INestedChannel.html",
    "title": "Interface INestedChannel | HeyBox.Net 文档",
    "keywords": "Interface INestedChannel Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的嵌套频道，即可以嵌套在分组频道中的房间频道。 public interface INestedChannel : IRoomChannel, IChannel, IEntity<ulong> Inherited Members IRoomChannel.Room IRoomChannel.RoomId IRoomChannel.Type IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.IRateLimitInfo.html": {
    "href": "api/HeyBox.IRateLimitInfo.html",
    "title": "Interface IRateLimitInfo | HeyBox.Net 文档",
    "keywords": "Interface IRateLimitInfo Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的限速信息。 public interface IRateLimitInfo Properties Bucket 获取一个唯一的字符串，表示所遇到的限速桶（不包括路由路径中的主要参数）。 string? Bucket { get; } Property Value string Endpoint 获取此限速信息所属的终结点。 string Endpoint { get; } Property Value string IsGlobal 获取此限速信息是否为全局限速。 bool IsGlobal { get; } Property Value bool Lag 获取请求的延迟，用于支持计算限速重置的精确时间。 TimeSpan? Lag { get; } Property Value TimeSpan? Limit 获取在更新时限内可以进行的请求数量。 int? Limit { get; } Property Value int? Remaining 获取目前可以立即进行的请求数量。 int? Remaining { get; } Property Value int? ResetAfter 获取相对于此刻此限速重置的相对时间间隔。 TimeSpan? ResetAfter { get; } Property Value TimeSpan?"
  },
  "api/HeyBox.IRole.html": {
    "href": "api/HeyBox.IRole.html",
    "title": "Interface IRole | HeyBox.Net 文档",
    "keywords": "Interface IRole Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的身份组。 public interface IRole : IEntity<ulong>, IMentionable Inherited Members IEntity<ulong>.Id IEntity<ulong>.IsPopulated IMentionable.Mention Properties Room 获取拥有此角色的房间。 IRoom Room { get; } Property Value IRoom"
  },
  "api/HeyBox.IRoom.html": {
    "href": "api/HeyBox.IRoom.html",
    "title": "Interface IRoom | HeyBox.Net 文档",
    "keywords": "Interface IRoom Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的房间。 public interface IRoom : IEntity<ulong> Inherited Members IEntity<ulong>.Id IEntity<ulong>.IsPopulated Properties EveryoneRole 获取此房间中的 @全体成员 全体成员角色。 IRole EveryoneRole { get; } Property Value IRole Icon 获取此房间图标的 URL。 string? Icon { get; } Property Value string Name 获取此房间的名称。 string? Name { get; } Property Value string Methods GetRole(ulong) 获取此房间内的角色。 IRole? GetRole(ulong id) Parameters id ulong 要获取的角色的 ID。 Returns IRole 一个表示异步获取操作的任务。任务的结果包含与指定的 id 关联的角色；如果未找到，则返回 null。 GetTextChannelAsync(ulong, CacheMode, RequestOptions?) 获取此房间内指定具有文字聊天能力的频道。 Task<ITextChannel?> GetTextChannelAsync(ulong id, CacheMode mode = CacheMode.AllowDownload, RequestOptions? options = null) Parameters id ulong 要获取的频道的 ID。 mode CacheMode 指示当前方法是否应该仅从缓存中获取结果，还是可以通过 API 请求获取数据。 options RequestOptions 发送请求时要使用的选项。 Returns Task<ITextChannel> 一个表示异步获取操作的任务。任务的结果包含与指定的 id 关联的频道；如果未找到，则返回 null。 Remarks 语音频道也是一种文字频道，此方法本意用于获取具有文字聊天能力的频道。如果通过此方法传入的 ID 对应的频道是语音频道，那么也会返回对应的语音频道实体。 如需获取频道的实际类型，请参考 GetChannelType(IChannel)。"
  },
  "api/HeyBox.IRoomChannel.html": {
    "href": "api/HeyBox.IRoomChannel.html",
    "title": "Interface IRoomChannel | HeyBox.Net 文档",
    "keywords": "Interface IRoomChannel Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的房间频道。 public interface IRoomChannel : IChannel, IEntity<ulong> Inherited Members IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Room 获取此频道所属的房间。 IRoom Room { get; } Property Value IRoom RoomId 获取此频道所属的房间的 ID。 ulong RoomId { get; } Property Value ulong Type 获取此频道的类型。 ChannelType Type { get; } Property Value ChannelType"
  },
  "api/HeyBox.IRoomUser.html": {
    "href": "api/HeyBox.IRoomUser.html",
    "title": "Interface IRoomUser | HeyBox.Net 文档",
    "keywords": "Interface IRoomUser Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的房间用户。 public interface IRoomUser : IUser, IEntity<uint>, IMentionable Inherited Members IUser.Username IUser.IsBot IUser.Avatar IUser.AvatarDecorationType IUser.AvatarDecorationUrl IUser.Level IEntity<uint>.Id IEntity<uint>.IsPopulated IMentionable.Mention Properties DisplayName 获取此用户的显示名称。 string? DisplayName { get; } Property Value string Remarks 如果此用户在该房间内设置了昵称，则此属性返回昵称；否则返回用户名。 Nickname 获取此用户在该房间内的昵称。 string? Nickname { get; } Property Value string Remarks 如果此用户在该房间内没有设置昵称，则此属性返回 null。 RoleIds 获取此用户在该房间内拥有的所有角色的 ID。 IReadOnlyCollection<ulong> RoleIds { get; } Property Value IReadOnlyCollection<ulong> Room 获取此房间用户所属的房间。 IRoom Room { get; } Property Value IRoom RoomId 获取此用户所属房间的 ID。 ulong RoomId { get; } Property Value ulong"
  },
  "api/HeyBox.IRouteMatchContainer.html": {
    "href": "api/HeyBox.IRouteMatchContainer.html",
    "title": "Interface IRouteMatchContainer | HeyBox.Net 文档",
    "keywords": "Interface IRouteMatchContainer Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents a container for temporarily storing CustomId wild card matches of a component. public interface IRouteMatchContainer Properties SegmentMatches Gets the collection of captured route segments in this container. IEnumerable<IRouteSegmentMatch> SegmentMatches { get; } Property Value IEnumerable<IRouteSegmentMatch> A collection of captured route segments. Methods SetSegmentMatches(IEnumerable<IRouteSegmentMatch>) Sets the SegmentMatches property of this container. void SetSegmentMatches(IEnumerable<IRouteSegmentMatch> segmentMatches) Parameters segmentMatches IEnumerable<IRouteSegmentMatch> The collection of captured route segments."
  },
  "api/HeyBox.IRouteSegmentMatch.html": {
    "href": "api/HeyBox.IRouteSegmentMatch.html",
    "title": "Interface IRouteSegmentMatch | HeyBox.Net 文档",
    "keywords": "Interface IRouteSegmentMatch Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents an object for storing a CustomId wild card match. public interface IRouteSegmentMatch Properties Value Gets the captured value of this wild card match. string Value { get; } Property Value string The value of this wild card."
  },
  "api/HeyBox.ISelfUser.html": {
    "href": "api/HeyBox.ISelfUser.html",
    "title": "Interface ISelfUser | HeyBox.Net 文档",
    "keywords": "Interface ISelfUser Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的当前登录的用户信息。 public interface ISelfUser : IUser, IEntity<uint>, IMentionable Inherited Members IUser.Username IUser.IsBot IUser.Avatar IUser.AvatarDecorationType IUser.AvatarDecorationUrl IUser.Level IEntity<uint>.Id IEntity<uint>.IsPopulated IMentionable.Mention"
  },
  "api/HeyBox.ISlashCommandInteraction.html": {
    "href": "api/HeyBox.ISlashCommandInteraction.html",
    "title": "Interface ISlashCommandInteraction | HeyBox.Net 文档",
    "keywords": "Interface ISlashCommandInteraction Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的 HeyBox 斜线命令交互实体。 public interface ISlashCommandInteraction : IHeyBoxInteraction, IEntity<ulong> Inherited Members IHeyBoxInteraction.Type IHeyBoxInteraction.UserId IHeyBoxInteraction.User IHeyBoxInteraction.ChannelId IHeyBoxInteraction.RoomId IHeyBoxInteraction.MessageId IEntity<ulong>.Id IEntity<ulong>.IsPopulated Properties Data 获取此交互的数据。 ISlashCommandInteractionData Data { get; } Property Value ISlashCommandInteractionData"
  },
  "api/HeyBox.ISlashCommandInteractionData.html": {
    "href": "api/HeyBox.ISlashCommandInteractionData.html",
    "title": "Interface ISlashCommandInteractionData | HeyBox.Net 文档",
    "keywords": "Interface ISlashCommandInteractionData Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个斜线命令交互的数据。 public interface ISlashCommandInteractionData : IHeyBoxInteractionData Properties Id 获取命令的唯一标识符。 ulong Id { get; } Property Value ulong Name 获取命令的名称。 string Name { get; } Property Value string Options 获取用户提供的选项。 IReadOnlyCollection<ISlashCommandInteractionDataOption> Options { get; } Property Value IReadOnlyCollection<ISlashCommandInteractionDataOption>"
  },
  "api/HeyBox.ISlashCommandInteractionDataOption.html": {
    "href": "api/HeyBox.ISlashCommandInteractionDataOption.html",
    "title": "Interface ISlashCommandInteractionDataOption | HeyBox.Net 文档",
    "keywords": "Interface ISlashCommandInteractionDataOption Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个斜线命令交互的选项。 public interface ISlashCommandInteractionDataOption Properties Name 获取此选项的名称。 string Name { get; } Property Value string RawValue 获取此选项的原始值。 string RawValue { get; } Property Value string Type 获取此选项的类型。 SlashCommandOptionType Type { get; } Property Value SlashCommandOptionType Value 获取此选项的值。 note 此对象类型可能是 SlashCommandOptionType 中的任意一个选项类型。 object? Value { get; } Property Value object"
  },
  "api/HeyBox.ITag.html": {
    "href": "api/HeyBox.ITag.html",
    "title": "Interface ITag | HeyBox.Net 文档",
    "keywords": "Interface ITag Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个消息中通用的标签。 public interface ITag Properties Index 获取消息中标签的位置。 int Index { get; } Property Value int Key 获取标签的键。 object Key { get; } Property Value object Length 获取标签的长度。 int Length { get; } Property Value int Type 获取标签的类型。 TagType Type { get; } Property Value TagType Value 获取标签的值。 object? Value { get; } Property Value object Remarks 当 Type 为 HereMention，此属性应返回表示提及在线成员的实体，但这样的实体不存在。 为了便利，此属性返回与 EveryoneRole 相同的实体，但并不表示此标签提及的是所有人，而仍表示提及的是在线成员。"
  },
  "api/HeyBox.ITextChannel.html": {
    "href": "api/HeyBox.ITextChannel.html",
    "title": "Interface ITextChannel | HeyBox.Net 文档",
    "keywords": "Interface ITextChannel Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示房间中一个通用的具有文字聊天能力的频道，可以发送和接收消息。 public interface ITextChannel : INestedChannel, IRoomChannel, IMentionable, IMessageChannel, IChannel, IEntity<ulong> Inherited Members IRoomChannel.Room IRoomChannel.RoomId IRoomChannel.Type IMentionable.Mention IMessageChannel.SendFileAsync(string, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(FileAttachment, IMessageReference, RequestOptions) IMessageChannel.SendTextAsync(string, IEnumerable<FileAttachment>, IMessageReference, RequestOptions) IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.IUser.html": {
    "href": "api/HeyBox.IUser.html",
    "title": "Interface IUser | HeyBox.Net 文档",
    "keywords": "Interface IUser Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的用户。 public interface IUser : IEntity<uint>, IMentionable Inherited Members IEntity<uint>.Id IEntity<uint>.IsPopulated IMentionable.Mention Properties Avatar 获取此用户的头像图像的 URL。 string? Avatar { get; } Property Value string AvatarDecorationType 获取用户头像装饰类型。 string? AvatarDecorationType { get; } Property Value string AvatarDecorationUrl 获取此用户的头像装饰图像的 URL。 string? AvatarDecorationUrl { get; } Property Value string IsBot 获取此用户是否为 Bot。 bool? IsBot { get; } Property Value bool? Level 获取此用户的等级。 int? Level { get; } Property Value int? Username 获取此用户的用户名。 string? Username { get; } Property Value string"
  },
  "api/HeyBox.IUserMessage.html": {
    "href": "api/HeyBox.IUserMessage.html",
    "title": "Interface IUserMessage | HeyBox.Net 文档",
    "keywords": "Interface IUserMessage Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个通用的用户消息。 public interface IUserMessage : IMessage, IEntity<ulong> Inherited Members IMessage.Type IMessage.Source IMessage.Channel IMessage.Author IMessage.Content IMessage.CleanContent IMessage.Tags IEntity<ulong>.Id IEntity<ulong>.IsPopulated Methods Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling) 转换消息文本中的提及与表情符号为可读形式。 string Resolve(TagHandling userHandling = TagHandling.Name, TagHandling channelHandling = TagHandling.Name, TagHandling roleHandling = TagHandling.Name, TagHandling everyoneHandling = TagHandling.Name, TagHandling emojiHandling = TagHandling.Name) Parameters userHandling TagHandling 指定用户提及标签的处理方式。 channelHandling TagHandling 指定频道提及标签的处理方式。 roleHandling TagHandling 指定角色提及标签的处理方式。 everyoneHandling TagHandling 指定全体成员与在线成员提及标签的处理方式。 emojiHandling TagHandling 指定表情符号标签的处理方式。 Returns string 转换后的消息文本。"
  },
  "api/HeyBox.InteractionContextType.html": {
    "href": "api/HeyBox.InteractionContextType.html",
    "title": "Enum InteractionContextType | HeyBox.Net 文档",
    "keywords": "Enum InteractionContextType Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents a context in HeyBox where an interaction can be used. public enum InteractionContextType Fields Guild = 0 The command can be used in guilds."
  },
  "api/HeyBox.InteractionType.html": {
    "href": "api/HeyBox.InteractionType.html",
    "title": "Enum InteractionType | HeyBox.Net 文档",
    "keywords": "Enum InteractionType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示 HeyBox 交互的类型。 public enum InteractionType Fields SlashCommand = 50 斜线命令。"
  },
  "api/HeyBox.Interactions.Builders.CommandBuilder-3.html": {
    "href": "api/HeyBox.Interactions.Builders.CommandBuilder-3.html",
    "title": "Class CommandBuilder<TInfo, TBuilder, TParamBuilder> | HeyBox.Net 文档",
    "keywords": "Class CommandBuilder<TInfo, TBuilder, TParamBuilder> Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents the base builder class for creating CommandInfo<TParameter>. public abstract class CommandBuilder<TInfo, TBuilder, TParamBuilder> : ICommandBuilder where TInfo : class, ICommandInfo where TBuilder : CommandBuilder<TInfo, TBuilder, TParamBuilder> where TParamBuilder : class, IParameterBuilder Type Parameters TInfo The CommandInfo<TParameter> this builder yields when built. TBuilder Inherited CommandBuilder<TInfo, TBuilder, TParamBuilder> type. TParamBuilder Builder type for this commands parameters. Inheritance object CommandBuilder<TInfo, TBuilder, TParamBuilder> Implements ICommandBuilder Derived SlashCommandBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandBuilder(ModuleBuilder, string, ExecuteCallback) Initializes a new CommandBuilder<TInfo, TBuilder, TParamBuilder> with the provided ModuleBuilder. protected CommandBuilder(ModuleBuilder module, string name, ExecuteCallback callback) Parameters module ModuleBuilder The ModuleBuilder this command belongs to. name string The name of the command. callback ExecuteCallback The callback to be executed when the command is triggered. Properties Attributes Gets a collection of the attributes of this command. public IReadOnlyList<Attribute> Attributes { get; } Property Value IReadOnlyList<Attribute> Callback Gets the execution delegate of this command. public ExecuteCallback? Callback { get; } Property Value ExecuteCallback Instance Gets the builder instance. protected abstract TBuilder Instance { get; } Property Value TBuilder MethodName Gets or sets the method name of this command. public string? MethodName { get; set; } Property Value string Module Gets the parent module of this command. public ModuleBuilder Module { get; } Property Value ModuleBuilder Name Gets the name of this command. public string? Name { get; } Property Value string Parameters public IReadOnlyList<TParamBuilder> Parameters { get; } Property Value IReadOnlyList<TParamBuilder> Preconditions Gets a collection of the preconditions of this command. public IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyList<PreconditionAttribute> RunMode Gets or sets the run mode this command gets executed with. public RunMode RunMode { get; set; } Property Value RunMode TreatNameAsRegex Gets or sets whether the Name should be directly used as a Regex pattern. public bool TreatNameAsRegex { get; set; } Property Value bool Methods AddParameter(Action<TParamBuilder>) Adds a parameter to the command. public abstract TBuilder AddParameter(Action<TParamBuilder> configure) Parameters configure Action<TParamBuilder> A delegate that configures the parameter. Returns TBuilder The builder instance. AddParameters(params TParamBuilder[]) Adds parameter builders to Parameters. public TBuilder AddParameters(params TParamBuilder[] parameters) Parameters parameters TParamBuilder[] New parameter builders to be added to Parameters. Returns TBuilder The builder instance. SetRunMode(RunMode) Sets RunMode. public TBuilder SetRunMode(RunMode runMode) Parameters runMode RunMode New value of the RunMode. Returns TBuilder The builder instance. WithAttributes(params Attribute[]) Adds attributes to Attributes. public TBuilder WithAttributes(params Attribute[] attributes) Parameters attributes Attribute[] New attributes to be added to Attributes. Returns TBuilder The builder instance. WithMethodName(string) Sets MethodName. public TBuilder WithMethodName(string name) Parameters name string New value of the MethodName. Returns TBuilder The builder instance. WithName(string) Sets Name. public TBuilder WithName(string name) Parameters name string New value of the Name. Returns TBuilder The builder instance. WithNameAsRegex(bool) Sets TreatNameAsRegex. public TBuilder WithNameAsRegex(bool value) Parameters value bool New value of the TreatNameAsRegex. Returns TBuilder The builder instance. WithPreconditions(params PreconditionAttribute[]) Adds preconditions to Preconditions. public TBuilder WithPreconditions(params PreconditionAttribute[] preconditions) Parameters preconditions PreconditionAttribute[] New preconditions to be added to Preconditions. Returns TBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.CommandParameterBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.CommandParameterBuilder.html",
    "title": "Class CommandParameterBuilder | HeyBox.Net 文档",
    "keywords": "Class CommandParameterBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents a builder for creating CommandParameterInfo. public sealed class CommandParameterBuilder : ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>, IParameterBuilder Inheritance object ParameterBuilder<CommandParameterInfo, CommandParameterBuilder> CommandParameterBuilder Implements IParameterBuilder Inherited Members ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.Command ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.Name ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.ParameterType ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.IsRequired ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.IsParameterArray ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.DefaultValue ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.Attributes ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.Preconditions ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.WithName(string) ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.SetParameterType(Type) ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.SetRequired(bool) ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.SetDefaultValue(object) ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.AddAttributes(params Attribute[]) ParameterBuilder<CommandParameterInfo, CommandParameterBuilder>.AddPreconditions(params ParameterPreconditionAttribute[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors CommandParameterBuilder(ICommandBuilder, string, Type) Initializes a new CommandParameterInfo. public CommandParameterBuilder(ICommandBuilder command, string name, Type type) Parameters command ICommandBuilder Parent command of this parameter. name string Name of this command. type Type Type of this parameter. Properties Instance Gets the builder instance. protected override CommandParameterBuilder Instance { get; } Property Value CommandParameterBuilder"
  },
  "api/HeyBox.Interactions.Builders.ICommandBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.ICommandBuilder.html",
    "title": "Interface ICommandBuilder | HeyBox.Net 文档",
    "keywords": "Interface ICommandBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represent a command builder for creating ICommandInfo. public interface ICommandBuilder Properties Attributes Gets a collection of the attributes of this command. IReadOnlyList<Attribute> Attributes { get; } Property Value IReadOnlyList<Attribute> Callback Gets the execution delegate of this command. ExecuteCallback? Callback { get; } Property Value ExecuteCallback MethodName Gets or sets the method name of this command. string? MethodName { get; set; } Property Value string Module Gets the parent module of this command. ModuleBuilder Module { get; } Property Value ModuleBuilder Name Gets the name of this command. string? Name { get; } Property Value string Parameters Gets a collection of the parameters of this command. IReadOnlyList<IParameterBuilder> Parameters { get; } Property Value IReadOnlyList<IParameterBuilder> Preconditions Gets a collection of the preconditions of this command. IReadOnlyList<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyList<PreconditionAttribute> RunMode Gets or sets the run mode this command gets executed with. RunMode RunMode { get; set; } Property Value RunMode TreatNameAsRegex Gets or sets whether the Name should be directly used as a Regex pattern. bool TreatNameAsRegex { get; set; } Property Value bool Methods AddParameters(params IParameterBuilder[]) Adds parameter builders to Parameters. ICommandBuilder AddParameters(params IParameterBuilder[] parameters) Parameters parameters IParameterBuilder[] New parameter builders to be added to Parameters. Returns ICommandBuilder The builder instance. SetRunMode(RunMode) Sets RunMode. ICommandBuilder SetRunMode(RunMode runMode) Parameters runMode RunMode New value of the RunMode. Returns ICommandBuilder The builder instance. WithAttributes(params Attribute[]) Adds attributes to Attributes. ICommandBuilder WithAttributes(params Attribute[] attributes) Parameters attributes Attribute[] New attributes to be added to Attributes. Returns ICommandBuilder The builder instance. WithMethodName(string) Sets MethodName. ICommandBuilder WithMethodName(string name) Parameters name string New value of the MethodName. Returns ICommandBuilder The builder instance. WithName(string) Sets Name. ICommandBuilder WithName(string name) Parameters name string New value of the Name. Returns ICommandBuilder The builder instance. WithNameAsRegex(bool) Sets TreatNameAsRegex. ICommandBuilder WithNameAsRegex(bool value) Parameters value bool New value of the TreatNameAsRegex. Returns ICommandBuilder The builder instance. WithPreconditions(params PreconditionAttribute[]) Adds preconditions to Preconditions. ICommandBuilder WithPreconditions(params PreconditionAttribute[] preconditions) Parameters preconditions PreconditionAttribute[] New preconditions to be added to Preconditions. Returns ICommandBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.IParameterBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.IParameterBuilder.html",
    "title": "Interface IParameterBuilder | HeyBox.Net 文档",
    "keywords": "Interface IParameterBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represent a command builder for creating IParameterInfo. public interface IParameterBuilder Properties Attributes Gets a collection of the attributes of this command. IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> Command Gets the parent command of this parameter. ICommandBuilder Command { get; } Property Value ICommandBuilder DefaultValue Gets the default value of this parameter. object? DefaultValue { get; } Property Value object IsParameterArray Gets whether this parameter is params. bool IsParameterArray { get; } Property Value bool IsRequired Gets whether this parameter is required. bool IsRequired { get; } Property Value bool Name Gets the name of this parameter. string? Name { get; } Property Value string ParameterType Gets the type of this parameter. Type? ParameterType { get; } Property Value Type Preconditions Gets a collection of the preconditions of this command. IReadOnlyCollection<ParameterPreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<ParameterPreconditionAttribute> Methods AddAttributes(params Attribute[]) Adds attributes to Attributes. IParameterBuilder AddAttributes(params Attribute[] attributes) Parameters attributes Attribute[] New attributes to be added to Attributes. Returns IParameterBuilder The builder instance. AddPreconditions(params ParameterPreconditionAttribute[]) Adds preconditions to Preconditions. IParameterBuilder AddPreconditions(params ParameterPreconditionAttribute[] preconditions) Parameters preconditions ParameterPreconditionAttribute[] New attributes to be added to Preconditions. Returns IParameterBuilder The builder instance. SetDefaultValue(object) Sets DefaultValue. IParameterBuilder SetDefaultValue(object defaultValue) Parameters defaultValue object New value of the DefaultValue. Returns IParameterBuilder The builder instance. SetParameterType(Type) Sets ParameterType. IParameterBuilder SetParameterType(Type type) Parameters type Type New value of the ParameterType. Returns IParameterBuilder The builder instance. SetRequired(bool) Sets IsRequired. IParameterBuilder SetRequired(bool isRequired) Parameters isRequired bool New value of the IsRequired. Returns IParameterBuilder The builder instance. WithName(string) Sets Name. IParameterBuilder WithName(string name) Parameters name string New value of the Name. Returns IParameterBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.ModuleBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.ModuleBuilder.html",
    "title": "Class ModuleBuilder | HeyBox.Net 文档",
    "keywords": "Class ModuleBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents a builder for creating ModuleInfo. public class ModuleBuilder Inheritance object ModuleBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ModuleBuilder(InteractionService, string) Initializes a new ModuleBuilder. public ModuleBuilder(InteractionService interactionService, string name) Parameters interactionService InteractionService The underlying Interaction Service. name string Name of this module. Properties Attributes Gets a collection of the attributes of this module. public IReadOnlyList<Attribute> Attributes { get; } Property Value IReadOnlyList<Attribute> ContextTypes Gets or sets the context types this command can be executed in. public HashSet<InteractionContextType> ContextTypes { get; set; } Property Value HashSet<InteractionContextType> Description Gets and sets the description of this module. public string? Description { get; set; } Property Value string InteractionService Gets the underlying Interaction Service. public InteractionService InteractionService { get; } Property Value InteractionService Name Gets the name of this module. public string? Name { get; } Property Value string Preconditions Gets a collection of the preconditions of this module. public IReadOnlyCollection<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<PreconditionAttribute> SlashCommands Gets a collection of the Slash Commands of this module. public IReadOnlyList<SlashCommandBuilder> SlashCommands { get; } Property Value IReadOnlyList<SlashCommandBuilder> Methods AddAttributes(params Attribute[]) Adds attributes to Attributes. public ModuleBuilder AddAttributes(params Attribute[] attributes) Parameters attributes Attribute[] New attributes to be added to Attributes. Returns ModuleBuilder The builder instance. AddPreconditions(params PreconditionAttribute[]) Adds preconditions to Preconditions. public ModuleBuilder AddPreconditions(params PreconditionAttribute[] preconditions) Parameters preconditions PreconditionAttribute[] New preconditions to be added to Preconditions. Returns ModuleBuilder The builder instance. AddSlashCommand(Action<SlashCommandBuilder>) Adds slash command builder to SlashCommands. public ModuleBuilder AddSlashCommand(Action<SlashCommandBuilder> configure) Parameters configure Action<SlashCommandBuilder> SlashCommandBuilder factory. Returns ModuleBuilder The builder instance. AddSlashCommand(string, ExecuteCallback, Action<SlashCommandBuilder>) Adds slash command builder to SlashCommands. public ModuleBuilder AddSlashCommand(string name, ExecuteCallback callback, Action<SlashCommandBuilder> configure) Parameters name string Name of the command. callback ExecuteCallback Command callback to be executed. configure Action<SlashCommandBuilder> SlashCommandBuilder factory. Returns ModuleBuilder The builder instance. WithContextTypes(params InteractionContextType[]) Sets the ContextTypes on this ModuleBuilder. public ModuleBuilder WithContextTypes(params InteractionContextType[] contextTypes) Parameters contextTypes InteractionContextType[] Context types the command can be executed in. Returns ModuleBuilder The builder instance. WithDescription(string) Sets Description. public ModuleBuilder WithDescription(string description) Parameters description string New value of the Description. Returns ModuleBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.ParameterBuilder-2.html": {
    "href": "api/HeyBox.Interactions.Builders.ParameterBuilder-2.html",
    "title": "Class ParameterBuilder<TInfo, TBuilder> | HeyBox.Net 文档",
    "keywords": "Class ParameterBuilder<TInfo, TBuilder> Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents the base builder class for creating IParameterInfo. public abstract class ParameterBuilder<TInfo, TBuilder> : IParameterBuilder where TInfo : class, IParameterInfo where TBuilder : ParameterBuilder<TInfo, TBuilder> Type Parameters TInfo The IParameterInfo this builder yields when built. TBuilder Inherited ParameterBuilder<TInfo, TBuilder> type. Inheritance object ParameterBuilder<TInfo, TBuilder> Implements IParameterBuilder Derived CommandParameterBuilder SlashCommandParameterBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ParameterBuilder(ICommandBuilder, string, Type) Initializes a new instance of ParameterBuilder<TInfo, TBuilder>. protected ParameterBuilder(ICommandBuilder command, string name, Type type) Parameters command ICommandBuilder The command this parameter belongs to. name string The name of the parameter. type Type The type of the parameter. Properties Attributes Gets a collection of the attributes of this command. public IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> Command Gets the parent command of this parameter. public ICommandBuilder Command { get; } Property Value ICommandBuilder DefaultValue Gets the default value of this parameter. public object? DefaultValue { get; set; } Property Value object Instance Gets the builder instance. protected abstract TBuilder Instance { get; } Property Value TBuilder IsParameterArray Gets whether this parameter is params. public bool IsParameterArray { get; set; } Property Value bool IsRequired Gets whether this parameter is required. public bool IsRequired { get; set; } Property Value bool Name Gets the name of this parameter. public string? Name { get; } Property Value string ParameterType Gets the type of this parameter. public Type? ParameterType { get; } Property Value Type Preconditions Gets a collection of the preconditions of this command. public IReadOnlyCollection<ParameterPreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<ParameterPreconditionAttribute> Methods AddAttributes(params Attribute[]) Adds attributes to Attributes public virtual TBuilder AddAttributes(params Attribute[] attributes) Parameters attributes Attribute[] New attributes to be added to Attributes. Returns TBuilder The builder instance. AddPreconditions(params ParameterPreconditionAttribute[]) Adds preconditions to Preconditions public virtual TBuilder AddPreconditions(params ParameterPreconditionAttribute[] attributes) Parameters attributes ParameterPreconditionAttribute[] New attributes to be added to Preconditions. Returns TBuilder The builder instance. SetDefaultValue(object) Sets DefaultValue. public virtual TBuilder SetDefaultValue(object defaultValue) Parameters defaultValue object New value of the DefaultValue. Returns TBuilder The builder instance. SetParameterType(Type) Sets ParameterType. public virtual TBuilder SetParameterType(Type type) Parameters type Type New value of the ParameterType. Returns TBuilder The builder instance. SetRequired(bool) Sets IsRequired. public virtual TBuilder SetRequired(bool isRequired) Parameters isRequired bool New value of the IsRequired. Returns TBuilder The builder instance. WithName(string) Sets Name. public virtual TBuilder WithName(string name) Parameters name string New value of the Name. Returns TBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.SlashCommandBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.SlashCommandBuilder.html",
    "title": "Class SlashCommandBuilder | HeyBox.Net 文档",
    "keywords": "Class SlashCommandBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents a builder for creating SlashCommandInfo. public sealed class SlashCommandBuilder : CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>, ICommandBuilder Inheritance object CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder> SlashCommandBuilder Implements ICommandBuilder Inherited Members CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Module CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Callback CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Name CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.MethodName CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.TreatNameAsRegex CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.RunMode CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Attributes CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Parameters CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.Preconditions CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.WithName(string) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.WithMethodName(string) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.WithAttributes(params Attribute[]) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.SetRunMode(RunMode) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.WithNameAsRegex(bool) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.AddParameters(params SlashCommandParameterBuilder[]) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.WithPreconditions(params PreconditionAttribute[]) CommandBuilder<SlashCommandInfo, SlashCommandBuilder, SlashCommandParameterBuilder>.AddParameter(Action<SlashCommandParameterBuilder>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SlashCommandBuilder(ModuleBuilder, string, ExecuteCallback) Initializes a new SlashCommandBuilder. public SlashCommandBuilder(ModuleBuilder module, string name, ExecuteCallback callback) Parameters module ModuleBuilder Parent module of this command. name string Name of this command. callback ExecuteCallback Execution callback of this command. Properties ContextTypes Gets or sets the context types this command can be executed in. public HashSet<InteractionContextType>? ContextTypes { get; set; } Property Value HashSet<InteractionContextType> Description Gets and sets the description of this command. public string? Description { get; set; } Property Value string Instance Gets the builder instance. protected override SlashCommandBuilder Instance { get; } Property Value SlashCommandBuilder Methods AddParameter(Action<SlashCommandParameterBuilder>) Adds a command parameter to the parameters collection. public override SlashCommandBuilder AddParameter(Action<SlashCommandParameterBuilder> configure) Parameters configure Action<SlashCommandParameterBuilder> SlashCommandParameterBuilder factory. Returns SlashCommandBuilder The builder instance. WithContextTypes(params InteractionContextType[]) Sets the ContextTypes on this SlashCommandBuilder. public SlashCommandBuilder WithContextTypes(params InteractionContextType[] contextTypes) Parameters contextTypes InteractionContextType[] Context types the command can be executed in. Returns SlashCommandBuilder The builder instance. WithDescription(string) Sets Description. public SlashCommandBuilder WithDescription(string description) Parameters description string New value of the Description. Returns SlashCommandBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.SlashCommandParameterBuilder.html": {
    "href": "api/HeyBox.Interactions.Builders.SlashCommandParameterBuilder.html",
    "title": "Class SlashCommandParameterBuilder | HeyBox.Net 文档",
    "keywords": "Class SlashCommandParameterBuilder Namespace HeyBox.Interactions.Builders Assembly HeyBox.Net.Interactions.dll Represents a builder for creating SlashCommandParameterInfo. public sealed class SlashCommandParameterBuilder : ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>, IParameterBuilder Inheritance object ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder> SlashCommandParameterBuilder Implements IParameterBuilder Inherited Members ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.Command ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.Name ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.ParameterType ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.IsRequired ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.IsParameterArray ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.DefaultValue ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.Attributes ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.Preconditions ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.WithName(string) ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.SetParameterType(Type) ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.SetRequired(bool) ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.SetDefaultValue(object) ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.AddAttributes(params Attribute[]) ParameterBuilder<SlashCommandParameterInfo, SlashCommandParameterBuilder>.AddPreconditions(params ParameterPreconditionAttribute[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors SlashCommandParameterBuilder(ICommandBuilder, string, Type, ComplexParameterInitializer?) Initializes a new SlashCommandParameterBuilder. public SlashCommandParameterBuilder(ICommandBuilder command, string name, Type type, ComplexParameterInitializer? complexParameterInitializer = null) Parameters command ICommandBuilder Parent command of this parameter. name string Name of this command. type Type Type of this parameter. complexParameterInitializer ComplexParameterInitializer Initializer delegate for this parameter. Properties Autocomplete Gets or sets whether this parameter should be configured for Autocomplete Interactions. public bool Autocomplete { get; set; } Property Value bool ChannelTypes Gets a collection of the channel types of this command. public IReadOnlyCollection<ChannelType> ChannelTypes { get; } Property Value IReadOnlyCollection<ChannelType> Choices Gets a collection of the choices of this command. public IReadOnlyCollection<ParameterChoice> Choices { get; } Property Value IReadOnlyCollection<ParameterChoice> ComplexParameterFields Gets the constructor parameters of this parameter, if IsComplexParameter is true. public IReadOnlyCollection<SlashCommandParameterBuilder> ComplexParameterFields { get; } Property Value IReadOnlyCollection<SlashCommandParameterBuilder> ComplexParameterInitializer Gets the initializer delegate for this parameter, if IsComplexParameter is true. public ComplexParameterInitializer? ComplexParameterInitializer { get; } Property Value ComplexParameterInitializer Description Gets or sets the description of this parameter. public string? Description { get; set; } Property Value string Instance Gets the builder instance. protected override SlashCommandParameterBuilder Instance { get; } Property Value SlashCommandParameterBuilder IsComplexParameter Gets whether this type should be treated as a complex parameter. public bool IsComplexParameter { get; } Property Value bool MaxLength Gets or sets the maximum length allowed for a string type parameter. public int? MaxLength { get; set; } Property Value int? MaxValue Gets or sets the max value of this parameter. public double? MaxValue { get; set; } Property Value double? MinLength Gets or sets the minimum length allowed for a string type parameter. public int? MinLength { get; set; } Property Value int? MinValue Gets or sets the min value of this parameter. public double? MinValue { get; set; } Property Value double? TypeConverter Gets or sets the TypeConverter of this parameter. public TypeConverter? TypeConverter { get; } Property Value TypeConverter Methods AddComplexParameterField(Action<SlashCommandParameterBuilder>) Adds a parameter builders to ComplexParameterFields. public SlashCommandParameterBuilder AddComplexParameterField(Action<SlashCommandParameterBuilder> configure) Parameters configure Action<SlashCommandParameterBuilder> SlashCommandParameterBuilder factory. Returns SlashCommandParameterBuilder The builder instance. Exceptions InvalidOperationException Thrown if the added field has a ComplexParameterAttribute. AddComplexParameterFields(params SlashCommandParameterBuilder[]) Adds parameter builders to ComplexParameterFields. public SlashCommandParameterBuilder AddComplexParameterFields(params SlashCommandParameterBuilder[] fields) Parameters fields SlashCommandParameterBuilder[] New parameter builders to be added to ComplexParameterFields. Returns SlashCommandParameterBuilder The builder instance. Exceptions InvalidOperationException Thrown if the added field has a ComplexParameterAttribute. SetParameterType(Type) Sets ParameterType. public override SlashCommandParameterBuilder SetParameterType(Type type) Parameters type Type New value of the ParameterType. Returns SlashCommandParameterBuilder The builder instance. SetParameterType(Type, IServiceProvider?) Sets ParameterType. public SlashCommandParameterBuilder SetParameterType(Type type, IServiceProvider? services) Parameters type Type New value of the ParameterType. services IServiceProvider Service container to be used to resolve the dependencies of this parameters TypeConverter. Returns SlashCommandParameterBuilder The builder instance. WithChannelTypes(params ChannelType[]) Adds channel types to ChannelTypes. public SlashCommandParameterBuilder WithChannelTypes(params ChannelType[] channelTypes) Parameters channelTypes ChannelType[] New channel types to be added to ChannelTypes. Returns SlashCommandParameterBuilder The builder instance. WithChannelTypes(IEnumerable<ChannelType>) Adds channel types to ChannelTypes. public SlashCommandParameterBuilder WithChannelTypes(IEnumerable<ChannelType> channelTypes) Parameters channelTypes IEnumerable<ChannelType> New channel types to be added to ChannelTypes. Returns SlashCommandParameterBuilder The builder instance. WithChoices(params ParameterChoice[]) Adds parameter choices to Choices. public SlashCommandParameterBuilder WithChoices(params ParameterChoice[] options) Parameters options ParameterChoice[] New choices to be added to Choices. Returns SlashCommandParameterBuilder The builder instance. WithDescription(string) Sets Description. public SlashCommandParameterBuilder WithDescription(string description) Parameters description string New value of the Description. Returns SlashCommandParameterBuilder The builder instance. WithMaxLength(int) Sets MaxLength. public SlashCommandParameterBuilder WithMaxLength(int length) Parameters length int New value of the MaxLength. Returns SlashCommandParameterBuilder The builder instance. WithMaxValue(double) Sets MaxValue. public SlashCommandParameterBuilder WithMaxValue(double value) Parameters value double New value of the MaxValue. Returns SlashCommandParameterBuilder The builder instance. WithMinLength(int) Sets MinLength. public SlashCommandParameterBuilder WithMinLength(int length) Parameters length int New value of the MinLength. Returns SlashCommandParameterBuilder The builder instance. WithMinValue(double) Sets MinValue. public SlashCommandParameterBuilder WithMinValue(double value) Parameters value double New value of the MinValue. Returns SlashCommandParameterBuilder The builder instance."
  },
  "api/HeyBox.Interactions.Builders.html": {
    "href": "api/HeyBox.Interactions.Builders.html",
    "title": "Namespace HeyBox.Interactions.Builders | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Interactions.Builders Classes CommandBuilder<TInfo, TBuilder, TParamBuilder> Represents the base builder class for creating CommandInfo<TParameter>. CommandParameterBuilder Represents a builder for creating CommandParameterInfo. ModuleBuilder Represents a builder for creating ModuleInfo. ParameterBuilder<TInfo, TBuilder> Represents the base builder class for creating IParameterInfo. SlashCommandBuilder Represents a builder for creating SlashCommandInfo. SlashCommandParameterBuilder Represents a builder for creating SlashCommandParameterInfo. Interfaces ICommandBuilder Represent a command builder for creating ICommandInfo. IParameterBuilder Represent a command builder for creating IParameterInfo."
  },
  "api/HeyBox.Interactions.ChannelTypesAttribute.html": {
    "href": "api/HeyBox.Interactions.ChannelTypesAttribute.html",
    "title": "Class ChannelTypesAttribute | HeyBox.Net 文档",
    "keywords": "Class ChannelTypesAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Specify the target channel types for a Channel option. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class ChannelTypesAttribute : Attribute Inheritance object Attribute ChannelTypesAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors ChannelTypesAttribute(params ChannelType[]) Specify the target channel types for a Channel option. public ChannelTypesAttribute(params ChannelType[] channelTypes) Parameters channelTypes ChannelType[] The allowed channel types for this option. Properties ChannelTypes Gets the allowed channel types for this option. public IReadOnlyCollection<ChannelType> ChannelTypes { get; } Property Value IReadOnlyCollection<ChannelType>"
  },
  "api/HeyBox.Interactions.ChoiceAttribute.html": {
    "href": "api/HeyBox.Interactions.ChoiceAttribute.html",
    "title": "Class ChoiceAttribute | HeyBox.Net 文档",
    "keywords": "Class ChoiceAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Add a pre-determined argument value to a command parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = true, Inherited = true)] public class ChoiceAttribute : Attribute Inheritance object Attribute ChoiceAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChoiceAttribute(string, double) Create a parameter choice with type Number. public ChoiceAttribute(string name, double value) Parameters name string Name of the choice. value double Predefined value of the choice. ChoiceAttribute(string, int) Create a parameter choice with type Integer. public ChoiceAttribute(string name, int value) Parameters name string Name of the choice. value int Predefined value of the choice. ChoiceAttribute(string, string) Create a parameter choice with type String. public ChoiceAttribute(string name, string value) Parameters name string Name of the choice. value string Predefined value of the choice. Properties Name Gets the name of the choice. public string Name { get; } Property Value string Type Gets the type of this choice. public SlashCommandChoiceType Type { get; } Property Value SlashCommandChoiceType Value Gets the value that will be used whenever this choice is selected. public object? Value { get; } Property Value object"
  },
  "api/HeyBox.Interactions.ChoiceDisplayAttribute.html": {
    "href": "api/HeyBox.Interactions.ChoiceDisplayAttribute.html",
    "title": "Class ChoiceDisplayAttribute | HeyBox.Net 文档",
    "keywords": "Class ChoiceDisplayAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Customize the displayed value of a slash command choice enum. Only works with the default enum type converter. [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = true)] public class ChoiceDisplayAttribute : Attribute Inheritance object Attribute ChoiceDisplayAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChoiceDisplayAttribute(string) Modify the default name and description values of a Slash Command parameter. public ChoiceDisplayAttribute(string name) Parameters name string Name of the parameter. Properties Name Gets the name of the parameter. public string Name { get; } Property Value string"
  },
  "api/HeyBox.Interactions.ChoiceValueAttribute.html": {
    "href": "api/HeyBox.Interactions.ChoiceValueAttribute.html",
    "title": "Class ChoiceValueAttribute | HeyBox.Net 文档",
    "keywords": "Class ChoiceValueAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Customize the displayed value of a slash command choice enum. Only works with the default enum type converter. [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = true)] public class ChoiceValueAttribute : Attribute Inheritance object Attribute ChoiceValueAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChoiceValueAttribute(string) Modify the default value of a Slash Command parameter. public ChoiceValueAttribute(string value) Parameters value string Value of the parameter. Properties Value Gets the name of the parameter. public string Value { get; } Property Value string"
  },
  "api/HeyBox.Interactions.CommandContextTypeAttribute.html": {
    "href": "api/HeyBox.Interactions.CommandContextTypeAttribute.html",
    "title": "Class CommandContextTypeAttribute | HeyBox.Net 文档",
    "keywords": "Class CommandContextTypeAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Specifies context types this command can be executed in. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class CommandContextTypeAttribute : Attribute Inheritance object Attribute CommandContextTypeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandContextTypeAttribute(params InteractionContextType[]) Sets the ContextTypes property of an application command or module. public CommandContextTypeAttribute(params InteractionContextType[] contextTypes) Parameters contextTypes InteractionContextType[] Context types set for the command. Properties ContextTypes Gets context types this command can be executed in. public IReadOnlyCollection<InteractionContextType> ContextTypes { get; } Property Value IReadOnlyCollection<InteractionContextType>"
  },
  "api/HeyBox.Interactions.CommandInfo-1.html": {
    "href": "api/HeyBox.Interactions.CommandInfo-1.html",
    "title": "Class CommandInfo<TParameter> | HeyBox.Net 文档",
    "keywords": "Class CommandInfo<TParameter> Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll The base information class for InteractionService commands. public abstract class CommandInfo<TParameter> : ICommandInfo where TParameter : class, IParameterInfo Type Parameters TParameter The type of IParameterInfo that is used by this command type. Inheritance object CommandInfo<TParameter> Implements ICommandInfo Derived SlashCommandInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Attributes Gets a collection of the attributes of this command. public IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> CommandService Gets the the underlying command service. public InteractionService CommandService { get; } Property Value InteractionService MethodName Gets the name of the command handler method. public string MethodName { get; } Property Value string Module Gets the module that the method belongs to. public ModuleInfo Module { get; } Property Value ModuleInfo Name Gets the name of the command. public string Name { get; } Property Value string Parameters Gets a collection of the parameters of this command. public abstract IReadOnlyList<TParameter> Parameters { get; } Property Value IReadOnlyList<TParameter> Preconditions Gets a collection of the preconditions of this command. public IReadOnlyCollection<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<PreconditionAttribute> RunMode Get the run mode this command gets executed with. public RunMode RunMode { get; } Property Value RunMode TreatNameAsRegex Gets whether the command name should be treated as a regular expression. public bool TreatNameAsRegex { get; } Property Value bool Methods CheckPreconditionsAsync(IInteractionContext, IServiceProvider?) Check if an execution context meets the command precondition requirements. public Task<PreconditionResult> CheckPreconditionsAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext services IServiceProvider Returns Task<PreconditionResult> ExecuteAsync(IInteractionContext, IServiceProvider?) Executes the command with the provided context. public virtual Task<IResult> ExecuteAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext The execution context. services IServiceProvider Dependencies that will be used to create the module instance. Returns Task<IResult> A task representing the execution process. The task result contains the execution result. GetLogString(IInteractionContext) Gets the log string for this command. protected abstract string GetLogString(IInteractionContext context) Parameters context IInteractionContext The context of the command. Returns string The log string for this command. InvokeEventAndReturn<T>(IInteractionContext, T) Invokes the module event for this command and returns the result. protected Task<T> InvokeEventAndReturn<T>(IInteractionContext context, T result) where T : IResult Parameters context IInteractionContext The context of the command. result T The result of the command. Returns Task<T> The result of the command. Type Parameters T The type of the result. InvokeModuleEvent(IInteractionContext, IResult) Invokes the module event for this command. protected abstract Task InvokeModuleEvent(IInteractionContext context, IResult result) Parameters context IInteractionContext The context of the command. result IResult The result of the command. Returns Task A task that represents the asynchronous invocation operation. ParseArgumentsAsync(IInteractionContext, IServiceProvider?) Parses the arguments for this command. protected abstract Task<IResult> ParseArgumentsAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext The context of the command. services IServiceProvider The service collection used for dependency injection. Returns Task<IResult> A task that represents the asynchronous parsing operation. The task result contains the parsed arguments. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/HeyBox.Interactions.CommandParameterInfo.html": {
    "href": "api/HeyBox.Interactions.CommandParameterInfo.html",
    "title": "Class CommandParameterInfo | HeyBox.Net 文档",
    "keywords": "Class CommandParameterInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents the base parameter info class for InteractionService commands. public class CommandParameterInfo : IParameterInfo Inheritance object CommandParameterInfo Implements IParameterInfo Derived SlashCommandParameterInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Attributes Gets a list of the attributes this parameter has. public IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> Command Gets the command that this parameter belongs to. public ICommandInfo Command { get; } Property Value ICommandInfo DefaultValue Gets the default value of this parameter if the parameter is optional. public object? DefaultValue { get; } Property Value object IsParameterArray Gets whether this parameter is marked with a params keyword. public bool IsParameterArray { get; } Property Value bool IsRequired Gets whether this parameter is required. public bool IsRequired { get; } Property Value bool Name Gets the name of this parameter. public string Name { get; } Property Value string ParameterType Gets the type of this parameter. public Type ParameterType { get; } Property Value Type Preconditions Gets a list of the preconditions this parameter has. public IReadOnlyCollection<ParameterPreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<ParameterPreconditionAttribute> Methods CheckPreconditionsAsync(IInteractionContext, object?, IServiceProvider?) Check if an execution context meets the parameter precondition requirements. public Task<PreconditionResult> CheckPreconditionsAsync(IInteractionContext context, object? value, IServiceProvider? services) Parameters context IInteractionContext value object services IServiceProvider Returns Task<PreconditionResult>"
  },
  "api/HeyBox.Interactions.ComplexParameterAttribute.html": {
    "href": "api/HeyBox.Interactions.ComplexParameterAttribute.html",
    "title": "Class ComplexParameterAttribute | HeyBox.Net 文档",
    "keywords": "Class ComplexParameterAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Registers a parameter as a complex parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public class ComplexParameterAttribute : Attribute Inheritance object Attribute ComplexParameterAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ComplexParameterAttribute() Registers a slash command parameter as a complex parameter. public ComplexParameterAttribute() ComplexParameterAttribute(Type[]) Registers a slash command parameter as a complex parameter with a specified constructor signature. public ComplexParameterAttribute(Type[] types) Parameters types Type[] Type array of the preferred constructor parameters. Properties PrioritizedCtorSignature Gets the parameter array of the constructor method that should be prioritized. public Type[]? PrioritizedCtorSignature { get; } Property Value Type[]"
  },
  "api/HeyBox.Interactions.ComplexParameterCtorAttribute.html": {
    "href": "api/HeyBox.Interactions.ComplexParameterCtorAttribute.html",
    "title": "Class ComplexParameterCtorAttribute | HeyBox.Net 文档",
    "keywords": "Class ComplexParameterCtorAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Tag a type constructor as the preferred Complex command constructor. [AttributeUsage(AttributeTargets.Constructor, AllowMultiple = false, Inherited = true)] public class ComplexParameterCtorAttribute : Attribute Inheritance object Attribute ComplexParameterCtorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/HeyBox.Interactions.ComplexParameterInitializer.html": {
    "href": "api/HeyBox.Interactions.ComplexParameterInitializer.html",
    "title": "Delegate ComplexParameterInitializer | HeyBox.Net 文档",
    "keywords": "Delegate ComplexParameterInitializer Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a cached argument constructor delegate. public delegate object ComplexParameterInitializer(object?[] args) Parameters args object[] Method arguments array. Returns object Returns the constructed object."
  },
  "api/HeyBox.Interactions.ExecuteCallback.html": {
    "href": "api/HeyBox.Interactions.ExecuteCallback.html",
    "title": "Delegate ExecuteCallback | HeyBox.Net 文档",
    "keywords": "Delegate ExecuteCallback Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a cached method execution delegate. public delegate Task ExecuteCallback(IInteractionContext context, object?[] args, IServiceProvider? serviceProvider, ICommandInfo commandInfo) Parameters context IInteractionContext Execution context that will be injected into the module class. args object[] Method arguments array. serviceProvider IServiceProvider Service collection for initializing the module. commandInfo ICommandInfo Command info class of the executed method. Returns Task A task representing the execution operation."
  },
  "api/HeyBox.Interactions.ExecuteResult.html": {
    "href": "api/HeyBox.Interactions.ExecuteResult.html",
    "title": "Struct ExecuteResult | HeyBox.Net 文档",
    "keywords": "Struct ExecuteResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Contains information of the command's overall execution result. public struct ExecuteResult : IResult Implements IResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Error Gets the error type that may have occurred during the operation. public readonly InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. public readonly string? ErrorReason { get; } Property Value string A string containing the error reason. Exception Gets the exception that may have occurred during the command execution. public readonly Exception? Exception { get; } Property Value Exception IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. Methods FromError(IResult) Initializes a new ExecuteResult with a specified result; this may or may not be an successful execution depending on the Error and ErrorReason specified. public static ExecuteResult FromError(IResult result) Parameters result IResult The result to inherit from. Returns ExecuteResult A ExecuteResult that inherits the IResult error type and reason. FromError(InteractionCommandError, string) Initializes a new ExecuteResult with a specified InteractionCommandError and its reason, indicating an unsuccessful execution. public static ExecuteResult FromError(InteractionCommandError commandError, string reason) Parameters commandError InteractionCommandError The type of error. reason string The reason behind the error. Returns ExecuteResult A ExecuteResult that contains a InteractionCommandError and reason. FromError(Exception) Initializes a new ExecuteResult with a specified exception, indicating an unsuccessful execution. public static ExecuteResult FromError(Exception exception) Parameters exception Exception The exception that caused the command execution to fail. Returns ExecuteResult A ExecuteResult that contains the exception that caused the unsuccessful execution, along with a InteractionCommandError of type Exception as well as the exception message as the reason. FromSuccess() Initializes a new ExecuteResult with no error, indicating a successful execution. public static ExecuteResult FromSuccess() Returns ExecuteResult A ExecuteResult that does not contain any errors. ToString() Gets a string that indicates the execution result. public override string ToString() Returns string Success if IsSuccess is true; otherwise \"Error: ErrorReason\"."
  },
  "api/HeyBox.Interactions.HideAttribute.html": {
    "href": "api/HeyBox.Interactions.HideAttribute.html",
    "title": "Class HideAttribute | HeyBox.Net 文档",
    "keywords": "Class HideAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Enum values tagged with this attribute will not be displayed as a parameter choice [AttributeUsage(AttributeTargets.Field, AllowMultiple = false, Inherited = true)] public sealed class HideAttribute : Attribute Inheritance object Attribute HideAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Remarks This attribute must be used along with the default EnumConverter<T>"
  },
  "api/HeyBox.Interactions.IApplicationCommandInfo.html": {
    "href": "api/HeyBox.Interactions.IApplicationCommandInfo.html",
    "title": "Interface IApplicationCommandInfo | HeyBox.Net 文档",
    "keywords": "Interface IApplicationCommandInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a InteractionService command that can be registered to HeyBox. public interface IApplicationCommandInfo Properties CommandType Gets the type of this command. ApplicationCommandType CommandType { get; } Property Value ApplicationCommandType ContextTypes Gets the context types this command can be executed in. IReadOnlyCollection<InteractionContextType> ContextTypes { get; } Property Value IReadOnlyCollection<InteractionContextType> Name Gets the name of this command. string Name { get; } Property Value string"
  },
  "api/HeyBox.Interactions.ICommandInfo.html": {
    "href": "api/HeyBox.Interactions.ICommandInfo.html",
    "title": "Interface ICommandInfo | HeyBox.Net 文档",
    "keywords": "Interface ICommandInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represent a command information object that can be executed. public interface ICommandInfo Properties Attributes Gets a collection of the attributes of this command. IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> CommandService Gets the the underlying command service. InteractionService CommandService { get; } Property Value InteractionService MethodName Gets the name of the command handler method. string MethodName { get; } Property Value string Module Gets the module that the method belongs to. ModuleInfo Module { get; } Property Value ModuleInfo Name Gets the name of the command. string Name { get; } Property Value string Parameters Gets a collection of the parameters of this command. IReadOnlyCollection<IParameterInfo> Parameters { get; } Property Value IReadOnlyCollection<IParameterInfo> Preconditions Gets a collection of the preconditions of this command. IReadOnlyCollection<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<PreconditionAttribute> RunMode Get the run mode this command gets executed with. RunMode RunMode { get; } Property Value RunMode TreatNameAsRegex Gets whether the command name should be treated as a regular expression. bool TreatNameAsRegex { get; } Property Value bool Methods CheckPreconditionsAsync(IInteractionContext, IServiceProvider) Check if an execution context meets the command precondition requirements. Task<PreconditionResult> CheckPreconditionsAsync(IInteractionContext context, IServiceProvider services) Parameters context IInteractionContext services IServiceProvider Returns Task<PreconditionResult> ExecuteAsync(IInteractionContext, IServiceProvider) Executes the command with the provided context. Task<IResult> ExecuteAsync(IInteractionContext context, IServiceProvider services) Parameters context IInteractionContext The execution context. services IServiceProvider Dependencies that will be used to create the module instance. Returns Task<IResult> A task representing the execution process. The task result contains the execution result."
  },
  "api/HeyBox.Interactions.IInteractionModuleBase.html": {
    "href": "api/HeyBox.Interactions.IInteractionModuleBase.html",
    "title": "Interface IInteractionModuleBase | HeyBox.Net 文档",
    "keywords": "Interface IInteractionModuleBase Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 表示一个通用的交互模块基类。 public interface IInteractionModuleBase Methods AfterExecute(ICommandInfo) 在应用程序命令执行后同步执行的方法。 void AfterExecute(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 AfterExecuteAsync(ICommandInfo) 在应用程序命令执行后异步执行的方法。 Task AfterExecuteAsync(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 Returns Task BeforeExecute(ICommandInfo) 在执行应用程序命令之前同步执行的方法。 void BeforeExecute(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 BeforeExecuteAsync(ICommandInfo) 在执行应用程序命令之前异步执行的方法。 Task BeforeExecuteAsync(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 Returns Task Construct(ModuleBuilder, InteractionService) 当模块创建完成后创建模块信息前执行的方法。 void Construct(ModuleBuilder builder, InteractionService commandService) Parameters builder ModuleBuilder 构建此方法的模块构建器。 commandService InteractionService 构建此方法的命令服务实例。 OnModuleBuilding(InteractionService, ModuleInfo) 当构建模块时执行的方法。 void OnModuleBuilding(InteractionService commandService, ModuleInfo module) Parameters commandService InteractionService 构建此方法的命令服务实例。 module ModuleInfo 此模块的信息。 SetContext(IInteractionContext) 设置此交互模块的上下文。 void SetContext(IInteractionContext context) Parameters context IInteractionContext 交互上下文。"
  },
  "api/HeyBox.Interactions.IParameterInfo.html": {
    "href": "api/HeyBox.Interactions.IParameterInfo.html",
    "title": "Interface IParameterInfo | HeyBox.Net 文档",
    "keywords": "Interface IParameterInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a ICommandInfo parameter. public interface IParameterInfo Properties Attributes Gets a list of the attributes this parameter has. IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> Command Gets the command that this parameter belongs to. ICommandInfo Command { get; } Property Value ICommandInfo DefaultValue Gets the default value of this parameter if the parameter is optional. object? DefaultValue { get; } Property Value object IsParameterArray Gets whether this parameter is marked with a params keyword. bool IsParameterArray { get; } Property Value bool IsRequired Gets whether this parameter is required. bool IsRequired { get; } Property Value bool Name Gets the name of this parameter. string Name { get; } Property Value string ParameterType Gets the type of this parameter. Type ParameterType { get; } Property Value Type Preconditions Gets a list of the preconditions this parameter has. IReadOnlyCollection<ParameterPreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<ParameterPreconditionAttribute> Methods CheckPreconditionsAsync(IInteractionContext, object?, IServiceProvider?) Check if an execution context meets the parameter precondition requirements. Task<PreconditionResult> CheckPreconditionsAsync(IInteractionContext context, object? value, IServiceProvider? services) Parameters context IInteractionContext value object services IServiceProvider Returns Task<PreconditionResult>"
  },
  "api/HeyBox.Interactions.IResult.html": {
    "href": "api/HeyBox.Interactions.IResult.html",
    "title": "Interface IResult | HeyBox.Net 文档",
    "keywords": "Interface IResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Contains information of the result related to a command. public interface IResult Properties Error Gets the error type that may have occurred during the operation. InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. string? ErrorReason { get; } Property Value string A string containing the error reason. IsSuccess Indicates whether the operation was successful or not. bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false."
  },
  "api/HeyBox.Interactions.InteractionCommandError.html": {
    "href": "api/HeyBox.Interactions.InteractionCommandError.html",
    "title": "Enum InteractionCommandError | HeyBox.Net 文档",
    "keywords": "Enum InteractionCommandError Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 定义命令可能抛出的错误类型。 public enum InteractionCommandError Fields BadArgs = 2 当输入文本参数过少或过多时抛出。 ConvertFailed = 1 当命令参数无法被类型读取器转换时抛出。 Exception = 3 当命令执行过程中发生异常时抛出。 ParseFailed = 6 当命令上下文无法被 ICommandInfo 解析时抛出。 UnknownCommand = 0 当命令未知时抛出。 UnmetPrecondition = 5 当命令未满足先决条件时抛出。 Unsuccessful = 4 当命令在运行时未成功执行时抛出。"
  },
  "api/HeyBox.Interactions.InteractionContext.html": {
    "href": "api/HeyBox.Interactions.InteractionContext.html",
    "title": "Class InteractionContext | HeyBox.Net 文档",
    "keywords": "Class InteractionContext Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents the context of an Interaction. public class InteractionContext : IInteractionContext, IRouteMatchContainer Inheritance object InteractionContext Implements IInteractionContext IRouteMatchContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InteractionContext(IHeyBoxClient, IHeyBoxInteraction, IMessageChannel, ulong) 初始化一个 InteractionContext 类的新实例。 public InteractionContext(IHeyBoxClient client, IHeyBoxInteraction interaction, IMessageChannel channel, ulong messageId) Parameters client IHeyBoxClient HeyBox 客户端。 interaction IHeyBoxInteraction 交互事件。 channel IMessageChannel 交互事件发生的频道。 messageId ulong 交互事件来源的消息 ID。 Properties Channel Gets the channel the interaction originated from. public IMessageChannel Channel { get; } Property Value IMessageChannel Client Gets the client that will be used to handle this interaction. public IHeyBoxClient Client { get; } Property Value IHeyBoxClient Interaction Gets the underlying interaction. public IHeyBoxInteraction Interaction { get; } Property Value IHeyBoxInteraction MessageId Gets the message ID the interaction originated from. public ulong MessageId { get; } Property Value ulong Room Gets the guild the interaction originated from. public IRoom? Room { get; } Property Value IRoom Remarks Will be null if the interaction originated from a DM channel or the interaction was a Context Command interaction. RoomId Gets the application command info that was used to handle this interaction. public ulong? RoomId { get; } Property Value ulong? SegmentMatches Gets the collection of captured route segments in this container. public IReadOnlyCollection<IRouteSegmentMatch> SegmentMatches { get; } Property Value IReadOnlyCollection<IRouteSegmentMatch> A collection of captured route segments. User Gets the user who invoked the interaction event. public IUser? User { get; } Property Value IUser UserId Gets the user ID who invoked the interaction. public uint UserId { get; } Property Value uint Methods SetSegmentMatches(IEnumerable<IRouteSegmentMatch>) Sets the SegmentMatches property of this container. public void SetSegmentMatches(IEnumerable<IRouteSegmentMatch> segmentMatches) Parameters segmentMatches IEnumerable<IRouteSegmentMatch> The collection of captured route segments."
  },
  "api/HeyBox.Interactions.InteractionException.html": {
    "href": "api/HeyBox.Interactions.InteractionException.html",
    "title": "Class InteractionException | HeyBox.Net 文档",
    "keywords": "Class InteractionException Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 表示一个交互执行过程中发生的异常。 public class InteractionException : Exception, ISerializable Inheritance object Exception InteractionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InteractionException(ICommandInfo, IInteractionContext, Exception) 初始化一个 InteractionException 类的新实例。 public InteractionException(ICommandInfo commandInfo, IInteractionContext context, Exception exception) Parameters commandInfo ICommandInfo 引发异常的命令信息。 context IInteractionContext 引发异常的交互上下文。 exception Exception 异常信息。 Properties CommandInfo 获取引发异常的命令信息。 public ICommandInfo CommandInfo { get; } Property Value ICommandInfo InteractionContext 获取引发异常的交互上下文。 public IInteractionContext InteractionContext { get; } Property Value IInteractionContext"
  },
  "api/HeyBox.Interactions.InteractionModuleBase-1.html": {
    "href": "api/HeyBox.Interactions.InteractionModuleBase-1.html",
    "title": "Class InteractionModuleBase<T> | HeyBox.Net 文档",
    "keywords": "Class InteractionModuleBase<T> Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 提供一个用于继承的命令模块基类。 public abstract class InteractionModuleBase<T> : IInteractionModuleBase where T : class, IInteractionContext Type Parameters T 命令上下文的类型。 Inheritance object InteractionModuleBase<T> Implements IInteractionModuleBase Derived InteractionModuleBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Context Gets the underlying context of the command. public T Context { get; } Property Value T Methods AfterExecute(ICommandInfo) 在应用程序命令执行后同步执行的方法。 public virtual void AfterExecute(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 AfterExecuteAsync(ICommandInfo) 在应用程序命令执行后异步执行的方法。 public virtual Task AfterExecuteAsync(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 Returns Task BeforeExecute(ICommandInfo) 在执行应用程序命令之前同步执行的方法。 public virtual void BeforeExecute(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 BeforeExecuteAsync(ICommandInfo) 在执行应用程序命令之前异步执行的方法。 public virtual Task BeforeExecuteAsync(ICommandInfo command) Parameters command ICommandInfo 相关的命令信息。 Returns Task Construct(ModuleBuilder, InteractionService) 当模块创建完成后创建模块信息前执行的方法。 public virtual void Construct(ModuleBuilder builder, InteractionService commandService) Parameters builder ModuleBuilder 构建此方法的模块构建器。 commandService InteractionService 构建此方法的命令服务实例。 OnModuleBuilding(InteractionService, ModuleInfo) 当构建模块时执行的方法。 public virtual void OnModuleBuilding(InteractionService commandService, ModuleInfo module) Parameters commandService InteractionService 构建此方法的命令服务实例。 module ModuleInfo 此模块的信息。 ReplyFileAsync(FileAttachment, bool, RequestOptions?) 回复文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> ReplyFileAsync(FileAttachment attachment, bool reply = false, RequestOptions? options = null) Parameters attachment FileAttachment 文件的附件信息。 reply bool 是否回复原消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 ReplyFileAsync(Stream, string, AttachmentType, Size?, bool, RequestOptions?) 回复文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> ReplyFileAsync(Stream stream, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null, bool reply = false, RequestOptions? options = null) Parameters stream Stream 文件的流。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 reply bool 是否回复原消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 ReplyFileAsync(string, string?, AttachmentType, Size?, bool, RequestOptions?) 回复文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> ReplyFileAsync(string path, string? filename = null, AttachmentType type = AttachmentType.Image, Size? imageSize = null, bool reply = false, RequestOptions? options = null) Parameters path string 文件的路径。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 reply bool 是否回复原消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 ReplyTextAsync(string, IEnumerable<FileAttachment>?, bool, RequestOptions?) 回复文本消息到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> ReplyTextAsync(string text, IEnumerable<FileAttachment>? imageFileInfos = null, bool reply = false, RequestOptions? options = null) Parameters text string 要发送的文本。 imageFileInfos IEnumerable<FileAttachment> 图片文件的信息。 reply bool 是否回复原消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。"
  },
  "api/HeyBox.Interactions.InteractionModuleBase.html": {
    "href": "api/HeyBox.Interactions.InteractionModuleBase.html",
    "title": "Class InteractionModuleBase | HeyBox.Net 文档",
    "keywords": "Class InteractionModuleBase Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 提供一个用于继承的命令模块基类。 public abstract class InteractionModuleBase : InteractionModuleBase<IInteractionContext>, IInteractionModuleBase Inheritance object InteractionModuleBase<IInteractionContext> InteractionModuleBase Implements IInteractionModuleBase Inherited Members InteractionModuleBase<IInteractionContext>.Context InteractionModuleBase<IInteractionContext>.AfterExecute(ICommandInfo) InteractionModuleBase<IInteractionContext>.BeforeExecute(ICommandInfo) InteractionModuleBase<IInteractionContext>.BeforeExecuteAsync(ICommandInfo) InteractionModuleBase<IInteractionContext>.AfterExecuteAsync(ICommandInfo) InteractionModuleBase<IInteractionContext>.OnModuleBuilding(InteractionService, ModuleInfo) InteractionModuleBase<IInteractionContext>.Construct(ModuleBuilder, InteractionService) InteractionModuleBase<IInteractionContext>.ReplyFileAsync(string, string, AttachmentType, Size?, bool, RequestOptions) InteractionModuleBase<IInteractionContext>.ReplyFileAsync(Stream, string, AttachmentType, Size?, bool, RequestOptions) InteractionModuleBase<IInteractionContext>.ReplyFileAsync(FileAttachment, bool, RequestOptions) InteractionModuleBase<IInteractionContext>.ReplyTextAsync(string, IEnumerable<FileAttachment>, bool, RequestOptions) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/HeyBox.Interactions.InteractionService.html": {
    "href": "api/HeyBox.Interactions.InteractionService.html",
    "title": "Class InteractionService | HeyBox.Net 文档",
    "keywords": "Class InteractionService Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 提供构建交互服务的框架。 public class InteractionService : IDisposable Inheritance object InteractionService Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InteractionService(InteractionServiceConfig) 使用指定的配置初始化一个 InteractionService 类的新实例。 public InteractionService(InteractionServiceConfig config) Parameters config InteractionServiceConfig 交互服务的配置。 Properties Modules 获取所有加载到 InteractionService 中的模块。 public IReadOnlyList<ModuleInfo> Modules { get; } Property Value IReadOnlyList<ModuleInfo> SlashCommands 获取所有加载到 InteractionService 中的斜线命令。 public IReadOnlyList<SlashCommandInfo> SlashCommands { get; } Property Value IReadOnlyList<SlashCommandInfo> Methods AddGenericTypeConverter(Type, Type) 添加一个泛型类型的类型转换器。 public void AddGenericTypeConverter(Type targetType, Type converterType) Parameters targetType Type 类型转换器所转换类型的泛型约束。 converterType Type 泛型类型转换器实例。 AddGenericTypeConverter<T>(Type) 添加一个泛型类型的类型转换器。 public void AddGenericTypeConverter<T>(Type converterType) Parameters converterType Type 泛型类型转换器实例。 Type Parameters T 类型转换器所转换类型的泛型约束。 AddGenericTypeReader(Type, Type) 添加一个泛型类型的类型读取器。 public void AddGenericTypeReader(Type targetType, Type readerType) Parameters targetType Type 类型读取器所读取类型的泛型约束。 readerType Type 泛型类型读取器实例。 AddGenericTypeReader<T>(Type) 添加一个泛型类型的类型读取器。 public void AddGenericTypeReader<T>(Type readerType) Parameters readerType Type 泛型类型读取器实例。 Type Parameters T 类型读取器所读取类型的泛型约束。 AddModuleAsync(Type, IServiceProvider) 添加指定类型的模块。 public Task<ModuleInfo> AddModuleAsync(Type type, IServiceProvider services) Parameters type Type 要添加的模块的类型。 services IServiceProvider 要使用的依赖注入服务提供程序，如果不使用依赖注入，则传入 null。 Returns Task<ModuleInfo> 一个表示异步操作的任务，任务的结果是所创建的模块信息。 Exceptions ArgumentException 当模块已经被添加时引发。 InvalidOperationException 当类型 type 不是有效的模块类型时引发。 AddModuleAsync<T>(IServiceProvider) 添加指定类型的模块。 public Task<ModuleInfo> AddModuleAsync<T>(IServiceProvider services) where T : class Parameters services IServiceProvider 要使用的依赖注入服务提供程序，如果不使用依赖注入，则传入 null。 Returns Task<ModuleInfo> 一个表示异步操作的任务，任务的结果是所创建的模块信息。 Type Parameters T 要添加的模块的类型。 Exceptions ArgumentException 当模块已经被添加时引发。 InvalidOperationException 当类型 T 不是有效的模块类型时引发。 AddModulesAsync(Assembly, IServiceProvider) 从指定的程序集中发现并加载命令模块。 public Task<IEnumerable<ModuleInfo>> AddModulesAsync(Assembly assembly, IServiceProvider services) Parameters assembly Assembly 定义命令模块的程序集。 services IServiceProvider 要使用的依赖注入服务提供程序，如果不使用依赖注入，则传入 null。 Returns Task<IEnumerable<ModuleInfo>> 一个表示异步操作的任务，任务的结果是所创建的所有模块信息。 AddTypeConverter(Type, TypeConverter) 添加一个具体类型的类型转换器。 public void AddTypeConverter(Type type, TypeConverter converter) Parameters type Type 类型转换器的主要目标类型。 converter TypeConverter 类型转换器实例。 AddTypeConverter<T>(TypeConverter) 添加一个具体类型的类型转换器。 public void AddTypeConverter<T>(TypeConverter converter) Parameters converter TypeConverter 类型转换器实例。 Type Parameters T 类型转换器的主要目标类型。 AddTypeReader(Type, TypeReader) 添加一个具体类型的类型读取器。 public void AddTypeReader(Type type, TypeReader reader) Parameters type Type 类型读取器的主要目标类型。 reader TypeReader 类型读取器实例。 AddTypeReader<T>(TypeReader) 添加一个具体类型的类型读取器。 public void AddTypeReader<T>(TypeReader reader) Parameters reader TypeReader 类型读取器实例。 Type Parameters T 类型读取器的主要目标类型。 CreateModuleAsync(string, IServiceProvider?, Action<ModuleBuilder>) 使用构建器工厂创建并加载 ModuleInfo。 public Task<ModuleInfo> CreateModuleAsync(string name, IServiceProvider? services, Action<ModuleBuilder> buildFunc) Parameters name string 模块的名称。 services IServiceProvider 要使用的依赖注入服务提供程序，如果不使用依赖注入，则传入 null。 buildFunc Action<ModuleBuilder> 构建模块的委托。 Returns Task<ModuleInfo> 一个表示异步操作的任务，任务的结果是所创建的模块信息。 Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() ExecuteCommandAsync(IInteractionContext, IServiceProvider?) 执行指定的交互。 public Task<IResult> ExecuteCommandAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext 交互的上下文。 services IServiceProvider 要使用的依赖注入服务提供程序，如果不使用依赖注入，则传入 null。 Returns Task<IResult> 一个表示异步操作的任务，任务的结果是交互的结果。 GetModuleInfo<TModule>() 获取模块的信息。 public ModuleInfo GetModuleInfo<TModule>() where TModule : class Returns ModuleInfo 模块的信息。 Type Parameters TModule 模块的类型，必需是 InteractionModuleBase<T> 的实现。 GetSlashCommandInfo<TModule>(string) 获取斜线命令的信息。 public SlashCommandInfo GetSlashCommandInfo<TModule>(string methodName) where TModule : class Parameters methodName string 斜线命令处理方法的名称，推荐使用 nameof 引用。 Returns SlashCommandInfo 斜线命令的信息。 Type Parameters TModule 声明斜线命令的模块类型，必需是 InteractionModuleBase<T> 的实现。 Exceptions InvalidOperationException 当未找到指定的斜线命令时引发。 RemoveModuleAsync(ModuleInfo) 移除指定的模块。 public Task<bool> RemoveModuleAsync(ModuleInfo module) Parameters module ModuleInfo 要移除的模块。 Returns Task<bool> 一个表示异步操作的任务，任务的结果是是否成功移除模块。 RemoveModuleAsync(Type) 移除指定类型的模块。 public Task<bool> RemoveModuleAsync(Type type) Parameters type Type 要移除的模块的类型。 Returns Task<bool> 一个表示异步操作的任务，任务的结果是是否成功移除模块。 RemoveModuleAsync<T>() 移除指定类型的模块。 public Task<bool> RemoveModuleAsync<T>() Returns Task<bool> 一个表示异步操作的任务，任务的结果是是否成功移除模块。 Type Parameters T 要移除的模块的类型。 SearchSlashCommand(ISlashCommandInteraction) 使用 ISlashCommandInteraction 搜索已注册到当前服务的斜线命令。 public SearchResult<SlashCommandInfo> SearchSlashCommand(ISlashCommandInteraction slashCommandInteraction) Parameters slashCommandInteraction ISlashCommandInteraction 要进行搜索的斜线命令交互。 Returns SearchResult<SlashCommandInfo> 搜索结果。当成功时，结果包含找到的 SlashCommandInfo。 TryRemoveGenericTypeReader(Type, out Type?) 尝试移除一个泛型类型的类型转换器。 public bool TryRemoveGenericTypeReader(Type type, out Type? readerType) Parameters type Type 类型转换器所转换类型的泛型约束。 readerType Type 被移除的泛型类型转换器实例。 Returns bool 移除操作是否成功。 Remarks 从当前交互服务中移除的类型读取器不会立即从加载的模块或命令实例中取消引用，您需要重新加载模块以使更改生效。 TryRemoveGenericTypeReader<T>(out Type?) 尝试移除一个泛型类型的类型转换器。 public bool TryRemoveGenericTypeReader<T>(out Type? readerType) Parameters readerType Type 被移除的泛型类型转换器实例。 Returns bool 移除操作是否成功。 Type Parameters T 类型转换器所转换类型的泛型约束。 Remarks 从当前交互服务中移除的类型读取器不会立即从加载的模块或命令实例中取消引用，您需要重新加载模块以使更改生效。 TryRemoveTypeReader(Type, out TypeReader?) 尝试移除一个具体类型的类型转换器。 public bool TryRemoveTypeReader(Type type, out TypeReader? reader) Parameters type Type 类型转换器的主要目标类型。 reader TypeReader 被移除的类型转换器实例。 Returns bool 移除操作是否成功。 Remarks 从当前交互服务中移除的类型读取器不会立即从加载的模块或命令实例中取消引用，您需要重新加载模块以使更改生效。 TryRemoveTypeReader<T>(out TypeReader?) 尝试移除一个具体类型的类型转换器。 public bool TryRemoveTypeReader<T>(out TypeReader? reader) Parameters reader TypeReader 被移除的类型转换器实例。 Returns bool 移除操作是否成功。 Type Parameters T 类型转换器的主要目标类型。 Remarks 从当前交互服务中移除的类型读取器不会立即从加载的模块或命令实例中取消引用，您需要重新加载模块以使更改生效。 Events InteractionExecuted 当交互执行时引发。 public event Func<ICommandInfo?, IInteractionContext, IResult, Task> InteractionExecuted Event Type Func<ICommandInfo, IInteractionContext, IResult, Task> Remarks 事件参数： ICommandInfo 参数是交互的信息。 IInteractionContext 参数是交互的上下文。 IResult 参数是交互的结果。 Log 当生成一条日志消息时引发。 public event Func<LogMessage, Task> Log Event Type Func<LogMessage, Task> Remarks 事件参数： LogMessage 参数是描述日志消息的结构。 SlashCommandExecuted 当斜线命令执行时引发。 public event Func<SlashCommandInfo?, IInteractionContext, IResult, Task> SlashCommandExecuted Event Type Func<SlashCommandInfo, IInteractionContext, IResult, Task> Remarks 事件参数： ICommandInfo 参数是交互的信息。 IInteractionContext 参数是交互的上下文。 IResult 参数是交互的结果。"
  },
  "api/HeyBox.Interactions.InteractionServiceConfig.html": {
    "href": "api/HeyBox.Interactions.InteractionServiceConfig.html",
    "title": "Class InteractionServiceConfig | HeyBox.Net 文档",
    "keywords": "Class InteractionServiceConfig Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 表示一个 InteractionService 的配置类。 public class InteractionServiceConfig Inheritance object InteractionServiceConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AutoServiceScopes 获取或设置是否在每次命令执行时解析模块依赖项时应自动创建新的服务作用域。 public bool AutoServiceScopes { get; set; } Property Value bool DefaultRunMode 获取或设置命令应具有的默认 RunMode，如果在命令的特性或生成器上未指定时，将使用此默认值。 public RunMode DefaultRunMode { get; set; } Property Value RunMode LogLevel 获取或设置将发送到 Log 事件的最低日志级别严重性。 public LogSeverity LogLevel { get; set; } Property Value LogSeverity ThrowOnError 获取或设置是否 Sync 命令应将异常传递给调用者。 public bool ThrowOnError { get; set; } Property Value bool UseCompiledLambda 获取或设置是否使用编译的 Lambda 表达式来创建模块实例和执行命令。此方法可以提高性能，但会增加内存消耗。 public bool UseCompiledLambda { get; set; } Property Value bool WildCardExpression 获取或设置将视为通配符的字符串表达式。 public string WildCardExpression { get; set; } Property Value string"
  },
  "api/HeyBox.Interactions.MaxLengthAttribute.html": {
    "href": "api/HeyBox.Interactions.MaxLengthAttribute.html",
    "title": "Class MaxLengthAttribute | HeyBox.Net 文档",
    "keywords": "Class MaxLengthAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Sets the maximum length allowed for a string type parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public class MaxLengthAttribute : Attribute Inheritance object Attribute MaxLengthAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MaxLengthAttribute(int) Sets the maximum length allowed for a string type parameter. public MaxLengthAttribute(int length) Parameters length int Maximum string length allowed. Properties Length Gets the maximum length allowed for a string type parameter. public int Length { get; } Property Value int"
  },
  "api/HeyBox.Interactions.MaxValueAttribute.html": {
    "href": "api/HeyBox.Interactions.MaxValueAttribute.html",
    "title": "Class MaxValueAttribute | HeyBox.Net 文档",
    "keywords": "Class MaxValueAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Set the maximum value permitted for a number type parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class MaxValueAttribute : Attribute Inheritance object Attribute MaxValueAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MaxValueAttribute(double) Set the maximum value permitted for a number type parameter. public MaxValueAttribute(double value) Parameters value double The maximum value permitted. Properties Value Gets the maximum value permitted. public double Value { get; } Property Value double"
  },
  "api/HeyBox.Interactions.MinLengthAttribute.html": {
    "href": "api/HeyBox.Interactions.MinLengthAttribute.html",
    "title": "Class MinLengthAttribute | HeyBox.Net 文档",
    "keywords": "Class MinLengthAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Sets the minimum length allowed for a string type parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public class MinLengthAttribute : Attribute Inheritance object Attribute MinLengthAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MinLengthAttribute(int) Sets the minimum length allowed for a string type parameter. public MinLengthAttribute(int length) Parameters length int Minimum string length allowed. Properties Length Gets the minimum length allowed for a string type parameter. public int Length { get; } Property Value int"
  },
  "api/HeyBox.Interactions.MinValueAttribute.html": {
    "href": "api/HeyBox.Interactions.MinValueAttribute.html",
    "title": "Class MinValueAttribute | HeyBox.Net 文档",
    "keywords": "Class MinValueAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Set the minimum value permitted for a number type parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public sealed class MinValueAttribute : Attribute Inheritance object Attribute MinValueAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors MinValueAttribute(double) Set the minimum value permitted for a number type parameter. public MinValueAttribute(double value) Parameters value double The minimum value permitted. Properties Value Gets the minimum value permitted. public double Value { get; } Property Value double"
  },
  "api/HeyBox.Interactions.ModuleInfo.html": {
    "href": "api/HeyBox.Interactions.ModuleInfo.html",
    "title": "Class ModuleInfo | HeyBox.Net 文档",
    "keywords": "Class ModuleInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Contains the information of a Interactions Module. public class ModuleInfo Inheritance object ModuleInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Attributes Gets a collection of the attributes of this module. public IReadOnlyCollection<Attribute> Attributes { get; } Property Value IReadOnlyCollection<Attribute> CommandService Gets the underlying command service. public InteractionService CommandService { get; } Property Value InteractionService ContextTypes Gets the context types commands in this module can be executed in. public IReadOnlyCollection<InteractionContextType> ContextTypes { get; } Property Value IReadOnlyCollection<InteractionContextType> Description Gets the description of this module. public string? Description { get; } Property Value string Name Gets the name of this module class. public string Name { get; } Property Value string Preconditions Gets a collection of the preconditions of this module. public IReadOnlyCollection<PreconditionAttribute> Preconditions { get; } Property Value IReadOnlyCollection<PreconditionAttribute> SlashCommands Gets the Slash Commands that are declared in this module. public IReadOnlyList<SlashCommandInfo> SlashCommands { get; } Property Value IReadOnlyList<SlashCommandInfo>"
  },
  "api/HeyBox.Interactions.ParameterChoice.html": {
    "href": "api/HeyBox.Interactions.ParameterChoice.html",
    "title": "Class ParameterChoice | HeyBox.Net 文档",
    "keywords": "Class ParameterChoice Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a Slash Command parameter choice. public class ParameterChoice Inheritance object ParameterChoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets the name of the choice. public string Name { get; } Property Value string Value Gets the value of the choice. public object? Value { get; } Property Value object"
  },
  "api/HeyBox.Interactions.ParameterPreconditionAttribute.html": {
    "href": "api/HeyBox.Interactions.ParameterPreconditionAttribute.html",
    "title": "Class ParameterPreconditionAttribute | HeyBox.Net 文档",
    "keywords": "Class ParameterPreconditionAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Requires the parameter to pass the specified precondition before execution can begin. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = true, Inherited = true)] public abstract class ParameterPreconditionAttribute : Attribute Inheritance object Attribute ParameterPreconditionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorMessage Gets the error message to be returned if execution context doesn't pass the precondition check. public virtual string? ErrorMessage { get; } Property Value string Remarks When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Methods CheckRequirementsAsync(IInteractionContext, IParameterInfo, object?, IServiceProvider?) Checks whether the condition is met before execution of the command. public abstract Task<PreconditionResult> CheckRequirementsAsync(IInteractionContext context, IParameterInfo parameterInfo, object? value, IServiceProvider? services) Parameters context IInteractionContext The context of the command. parameterInfo IParameterInfo The parameter of the command being checked against. value object The raw value of the parameter. services IServiceProvider The service collection used for dependency injection. Returns Task<PreconditionResult> See Also PreconditionAttribute"
  },
  "api/HeyBox.Interactions.ParseResult.html": {
    "href": "api/HeyBox.Interactions.ParseResult.html",
    "title": "Struct ParseResult | HeyBox.Net 文档",
    "keywords": "Struct ParseResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 表示一个解析结果。 public struct ParseResult : IResult Implements IResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Args 获取解析到的参数。 public readonly object?[]? Args { get; } Property Value object[] Error 获取解析的错误。 public readonly InteractionCommandError? Error { get; } Property Value InteractionCommandError? ErrorReason 获取解析错误的原因。 public readonly string? ErrorReason { get; } Property Value string IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. Methods FromError(IResult) 从一个 IResult 实例创建一个 ParseResult 实例。 public static ParseResult FromError(IResult result) Parameters result IResult 要创建的 ParseResult 实例的 IResult 实例。 Returns ParseResult 一个 ParseResult 实例。 FromError(InteractionCommandError, string) 初始化一个 ParseResult 结构体，表示一个解析失败的结果。 public static ParseResult FromError(InteractionCommandError error, string reason) Parameters error InteractionCommandError 解析失败的错误类型。 reason string 解析失败的原因。 Returns ParseResult 一个表示解析失败的结果。 FromError(Exception) 初始化一个 ParseResult 结构体，表示一个解析失败的结果。 public static ParseResult FromError(Exception exception) Parameters exception Exception 解析失败的异常。 Returns ParseResult 一个表示解析失败的结果。 FromSuccess(object?[]) 初始化一个 ParseResult 结构体，表示一个成功的解析结果。 public static ParseResult FromSuccess(object?[] args) Parameters args object[] 解析的参数。 Returns ParseResult ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/HeyBox.Interactions.PreconditionAttribute.html": {
    "href": "api/HeyBox.Interactions.PreconditionAttribute.html",
    "title": "Class PreconditionAttribute | HeyBox.Net 文档",
    "keywords": "Class PreconditionAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Requires the module or class to pass the specified precondition before execution can begin. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public abstract class PreconditionAttribute : Attribute Inheritance object Attribute PreconditionAttribute Derived RequireRoleAttribute RequireUserAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ErrorMessage Gets the error message to be returned if execution context doesn't pass the precondition check. public virtual string? ErrorMessage { get; } Property Value string Remarks When overridden in a derived class, uses the supplied string as the error message if the precondition doesn't pass. Setting this for a class that doesn't override this property is a no-op. Group Gets the group that this precondition belongs to. public string? Group { get; set; } Property Value string Remarks Preconditions of the same group require only one of the preconditions to pass in order to be successful (A || B). Specifying Group = null or not at all will require all preconditions to pass, just like normal (A && B). Methods CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider?) Checks if the commandInfo command to be executed meets the precondition requirements. public abstract Task<PreconditionResult> CheckRequirementsAsync(IInteractionContext context, ICommandInfo commandInfo, IServiceProvider? services) Parameters context IInteractionContext The context of the command. commandInfo ICommandInfo The command being executed. services IServiceProvider The service collection used for dependency injection. Returns Task<PreconditionResult> See Also ParameterPreconditionAttribute"
  },
  "api/HeyBox.Interactions.PreconditionGroupResult.html": {
    "href": "api/HeyBox.Interactions.PreconditionGroupResult.html",
    "title": "Class PreconditionGroupResult | HeyBox.Net 文档",
    "keywords": "Class PreconditionGroupResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a result type for grouped command preconditions. public class PreconditionGroupResult : PreconditionResult, IResult Inheritance object PreconditionResult PreconditionGroupResult Implements IResult Inherited Members PreconditionResult.Error PreconditionResult.ErrorReason PreconditionResult.IsSuccess PreconditionResult.FromError(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Results Gets the results of the preconditions of this group. public IReadOnlyCollection<PreconditionResult>? Results { get; } Property Value IReadOnlyCollection<PreconditionResult> Methods FromError(IResult) Returns a PreconditionGroupResult with the specified result type. public static PreconditionGroupResult FromError(IResult result) Parameters result IResult The result of failure. Returns PreconditionGroupResult FromError(Exception) Returns a PreconditionGroupResult with Exception and the Message. public static PreconditionGroupResult FromError(Exception exception) Parameters exception Exception The exception that caused the precondition check to fail. Returns PreconditionGroupResult FromError(string, IEnumerable<PreconditionResult>) Returns a PreconditionGroupResult with UnmetPrecondition and the specified reason. public static PreconditionGroupResult FromError(string reason, IEnumerable<PreconditionResult> results) Parameters reason string The reason of failure. results IEnumerable<PreconditionResult> Precondition results of this group Returns PreconditionGroupResult FromSuccess() Returns a PreconditionGroupResult with no errors. public static PreconditionGroupResult FromSuccess() Returns PreconditionGroupResult"
  },
  "api/HeyBox.Interactions.PreconditionResult.html": {
    "href": "api/HeyBox.Interactions.PreconditionResult.html",
    "title": "Class PreconditionResult | HeyBox.Net 文档",
    "keywords": "Class PreconditionResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a result type for command preconditions. public class PreconditionResult : IResult Inheritance object PreconditionResult Implements IResult Derived PreconditionGroupResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PreconditionResult(InteractionCommandError?, string?) Initializes a new PreconditionResult class with the command error type and reason. protected PreconditionResult(InteractionCommandError? error, string? reason) Parameters error InteractionCommandError? The type of failure. reason string The reason of failure. Properties Error Gets the error type that may have occurred during the operation. public InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. public string? ErrorReason { get; } Property Value string A string containing the error reason. IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. Methods FromError(IResult) 获取一个表示失败的 PreconditionResult 实例。 public static PreconditionResult FromError(IResult result) Parameters result IResult 包含错误信息的结果。 Returns PreconditionResult FromError(Exception) 获取一个表示失败的 PreconditionResult 实例。 public static PreconditionResult FromError(Exception exception) Parameters exception Exception 导致先决条件检查失败的异常。 Returns PreconditionResult FromError(string) 获取一个表示失败的 PreconditionResult 实例。 public static PreconditionResult FromError(string reason) Parameters reason string 先决条件检查失败的原因。 Returns PreconditionResult FromSuccess() 获取一个表示成功的 PreconditionResult 实例。 public static PreconditionResult FromSuccess() Returns PreconditionResult"
  },
  "api/HeyBox.Interactions.RequireRoleAttribute.html": {
    "href": "api/HeyBox.Interactions.RequireRoleAttribute.html",
    "title": "Class RequireRoleAttribute | HeyBox.Net 文档",
    "keywords": "Class RequireRoleAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Requires the user invoking the command to have a specified role. public class RequireRoleAttribute : PreconditionAttribute Inheritance object Attribute PreconditionAttribute RequireRoleAttribute Inherited Members PreconditionAttribute.Group PreconditionAttribute.ErrorMessage Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RequireRoleAttribute(ulong) Requires that the user invoking the command to have a specific Role. public RequireRoleAttribute(ulong roleId) Parameters roleId ulong Id of the role that the user must have. Properties NotAGuildErrorMessage Gets or sets the error message if the precondition fails due to being run outside of a Guild channel. public string? NotAGuildErrorMessage { get; set; } Property Value string RoleId Gets the specified Role ID of the precondition. public ulong RoleId { get; } Property Value ulong Methods CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider?) Checks if the commandInfo command to be executed meets the precondition requirements. public override Task<PreconditionResult> CheckRequirementsAsync(IInteractionContext context, ICommandInfo commandInfo, IServiceProvider? services) Parameters context IInteractionContext The context of the command. commandInfo ICommandInfo The command being executed. services IServiceProvider The service collection used for dependency injection. Returns Task<PreconditionResult>"
  },
  "api/HeyBox.Interactions.RequireUserAttribute.html": {
    "href": "api/HeyBox.Interactions.RequireUserAttribute.html",
    "title": "Class RequireUserAttribute | HeyBox.Net 文档",
    "keywords": "Class RequireUserAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Requires the user invoking the command to have a specified user. public class RequireUserAttribute : PreconditionAttribute Inheritance object Attribute PreconditionAttribute RequireUserAttribute Inherited Members PreconditionAttribute.Group PreconditionAttribute.ErrorMessage Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RequireUserAttribute(uint) Requires that the user invoking the command to have a specific Role. public RequireUserAttribute(uint userId) Parameters userId uint Id of the role that the user must have. Properties UserId Gets the specified User ID of the precondition. public uint UserId { get; } Property Value uint Methods CheckRequirementsAsync(IInteractionContext, ICommandInfo, IServiceProvider?) Checks if the commandInfo command to be executed meets the precondition requirements. public override Task<PreconditionResult> CheckRequirementsAsync(IInteractionContext context, ICommandInfo commandInfo, IServiceProvider? services) Parameters context IInteractionContext The context of the command. commandInfo ICommandInfo The command being executed. services IServiceProvider The service collection used for dependency injection. Returns Task<PreconditionResult>"
  },
  "api/HeyBox.Interactions.RunMode.html": {
    "href": "api/HeyBox.Interactions.RunMode.html",
    "title": "Enum RunMode | HeyBox.Net 文档",
    "keywords": "Enum RunMode Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 表示命令执行工作流的模式。 public enum RunMode Fields Async = 1 在与网关不同的线程上执行命令，命令在后台执行。 Default = 2 使用在 InteractionServiceConfig 中设置的默认行为。 Sync = 0 执行命令在与网关相同的线程上，命令阻塞网关线程执行直到完成。"
  },
  "api/HeyBox.Interactions.RuntimeResult.html": {
    "href": "api/HeyBox.Interactions.RuntimeResult.html",
    "title": "Class RuntimeResult | HeyBox.Net 文档",
    "keywords": "Class RuntimeResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents the base class for creating command result containers. public abstract class RuntimeResult : IResult Inheritance object RuntimeResult Implements IResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RuntimeResult(InteractionCommandError?, string?) Initializes a new RuntimeResult class with the type of error and reason. protected RuntimeResult(InteractionCommandError? error, string? reason) Parameters error InteractionCommandError? The type of failure, or null if none. reason string The reason of failure. Properties Error Gets the error type that may have occurred during the operation. public InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. public string? ErrorReason { get; } Property Value string A string containing the error reason. IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. Methods ToString() Gets a string that indicates the runtime result. public override string ToString() Returns string Success if IsSuccess is true; otherwise \"Error: ErrorReason\"."
  },
  "api/HeyBox.Interactions.SearchResult-1.html": {
    "href": "api/HeyBox.Interactions.SearchResult-1.html",
    "title": "Struct SearchResult<T> | HeyBox.Net 文档",
    "keywords": "Struct SearchResult<T> Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Contains information of a command search. public struct SearchResult<T> : IResult where T : class, ICommandInfo Type Parameters T Type of the target command type. Implements IResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Command Gets the found command, if the search was successful. public readonly T? Command { get; } Property Value T Error Gets the error type that may have occurred during the operation. public readonly InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. public readonly string? ErrorReason { get; } Property Value string A string containing the error reason. IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. RegexCaptureGroups Gets the Regex groups captured by the wild card pattern. public readonly string[]? RegexCaptureGroups { get; } Property Value string[] Text Gets the input text of the command search. public readonly string? Text { get; } Property Value string Methods FromError(IResult) Initializes a new SearchResult<T> with a specified result; this may or may not be an successful depending on the Error and ErrorReason specified. public static SearchResult<T> FromError(IResult result) Parameters result IResult The result to inherit from. Returns SearchResult<T> A SearchResult<T> that inherits the IResult error type and reason. FromError(Exception) Initializes a new SearchResult<T> with a specified exception, indicating an unsuccessful execution. public static SearchResult<T> FromError(Exception ex) Parameters ex Exception The exception that caused the command execution to fail. Returns SearchResult<T> A SearchResult<T> that contains the exception that caused the unsuccessful execution, along with a InteractionCommandError of type Exception as well as the exception message as the reason. FromError(string, InteractionCommandError, string) Initializes a new SearchResult<T> with a specified InteractionCommandError and its reason, indicating an unsuccessful execution. public static SearchResult<T> FromError(string text, InteractionCommandError error, string reason) Parameters text string The input text of the command search. error InteractionCommandError The type of error. reason string The reason behind the error. Returns SearchResult<T> A SearchResult<T> that contains a InteractionCommandError and reason. FromSuccess(string, T, string[]?) Initializes a new SearchResult<T> with no error, indicating a successful execution. public static SearchResult<T> FromSuccess(string text, T commandInfo, string[]? wildCardMatch = null) Parameters text string commandInfo T wildCardMatch string[] Returns SearchResult<T> A SearchResult<T> that does not contain any errors. ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/HeyBox.Interactions.SlashCommandAttribute.html": {
    "href": "api/HeyBox.Interactions.SlashCommandAttribute.html",
    "title": "Class SlashCommandAttribute | HeyBox.Net 文档",
    "keywords": "Class SlashCommandAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Create an Slash Application Command. [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class SlashCommandAttribute : Attribute Inheritance object Attribute SlashCommandAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SlashCommandAttribute(string, string?, RunMode) Register a method as a Slash Command. public SlashCommandAttribute(string name, string? description = null, RunMode runMode = RunMode.Default) Parameters name string Name of the command. description string Description of the command. runMode RunMode Set the run mode of the command. Properties Description Gets the description of the Slash Command. public string? Description { get; } Property Value string Name Gets the name of the Slash Command. public string Name { get; } Property Value string RunMode Gets the run mode this command gets executed with. public RunMode RunMode { get; } Property Value RunMode"
  },
  "api/HeyBox.Interactions.SlashCommandChoiceType.html": {
    "href": "api/HeyBox.Interactions.SlashCommandChoiceType.html",
    "title": "Enum SlashCommandChoiceType | HeyBox.Net 文档",
    "keywords": "Enum SlashCommandChoiceType Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Supported types of pre-defined parameter choices. public enum SlashCommandChoiceType Fields Integer = 1 HeyBox type for int. Number = 2 HeyBox type for double. String = 0 HeyBox type for string."
  },
  "api/HeyBox.Interactions.SlashCommandInfo.html": {
    "href": "api/HeyBox.Interactions.SlashCommandInfo.html",
    "title": "Class SlashCommandInfo | HeyBox.Net 文档",
    "keywords": "Class SlashCommandInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents the info class of an attribute based method for command type Slash. public class SlashCommandInfo : CommandInfo<SlashCommandParameterInfo>, ICommandInfo, IApplicationCommandInfo Inheritance object CommandInfo<SlashCommandParameterInfo> SlashCommandInfo Implements ICommandInfo IApplicationCommandInfo Inherited Members CommandInfo<SlashCommandParameterInfo>.Module CommandInfo<SlashCommandParameterInfo>.CommandService CommandInfo<SlashCommandParameterInfo>.Name CommandInfo<SlashCommandParameterInfo>.MethodName CommandInfo<SlashCommandParameterInfo>.RunMode CommandInfo<SlashCommandParameterInfo>.Attributes CommandInfo<SlashCommandParameterInfo>.Preconditions CommandInfo<SlashCommandParameterInfo>.TreatNameAsRegex CommandInfo<SlashCommandParameterInfo>.CheckPreconditionsAsync(IInteractionContext, IServiceProvider) CommandInfo<SlashCommandParameterInfo>.InvokeEventAndReturn<T>(IInteractionContext, T) CommandInfo<SlashCommandParameterInfo>.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties CommandType Gets the type of this command. public ApplicationCommandType CommandType { get; } Property Value ApplicationCommandType ContextTypes Gets the context types this command can be executed in. public IReadOnlyCollection<InteractionContextType> ContextTypes { get; } Property Value IReadOnlyCollection<InteractionContextType> Description Gets the command description that will be displayed on HeyBox. public string? Description { get; } Property Value string FlattenedParameters Gets the flattened collection of command parameters and complex parameter fields. public IReadOnlyList<SlashCommandParameterInfo> FlattenedParameters { get; } Property Value IReadOnlyList<SlashCommandParameterInfo> Parameters Gets a collection of the parameters of this command. public override IReadOnlyList<SlashCommandParameterInfo> Parameters { get; } Property Value IReadOnlyList<SlashCommandParameterInfo> Methods ExecuteAsync(IInteractionContext, IServiceProvider?) Executes the command with the provided context. public override Task<IResult> ExecuteAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext The execution context. services IServiceProvider Dependencies that will be used to create the module instance. Returns Task<IResult> A task representing the execution process. The task result contains the execution result. GetLogString(IInteractionContext) Gets the log string for this command. protected override string GetLogString(IInteractionContext context) Parameters context IInteractionContext The context of the command. Returns string The log string for this command. InvokeModuleEvent(IInteractionContext, IResult) Invokes the module event for this command. protected override Task InvokeModuleEvent(IInteractionContext context, IResult result) Parameters context IInteractionContext The context of the command. result IResult The result of the command. Returns Task A task that represents the asynchronous invocation operation. ParseArgumentsAsync(IInteractionContext, IServiceProvider?) Parses the arguments for this command. protected override Task<IResult> ParseArgumentsAsync(IInteractionContext context, IServiceProvider? services) Parameters context IInteractionContext The context of the command. services IServiceProvider The service collection used for dependency injection. Returns Task<IResult> A task that represents the asynchronous parsing operation. The task result contains the parsed arguments."
  },
  "api/HeyBox.Interactions.SlashCommandParameterInfo.html": {
    "href": "api/HeyBox.Interactions.SlashCommandParameterInfo.html",
    "title": "Class SlashCommandParameterInfo | HeyBox.Net 文档",
    "keywords": "Class SlashCommandParameterInfo Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents the parameter info class for SlashCommandInfo commands. public class SlashCommandParameterInfo : CommandParameterInfo, IParameterInfo Inheritance object CommandParameterInfo SlashCommandParameterInfo Implements IParameterInfo Inherited Members CommandParameterInfo.Name CommandParameterInfo.ParameterType CommandParameterInfo.IsRequired CommandParameterInfo.IsParameterArray CommandParameterInfo.DefaultValue CommandParameterInfo.Attributes CommandParameterInfo.Preconditions CommandParameterInfo.CheckPreconditionsAsync(IInteractionContext, object, IServiceProvider) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChannelTypes Gets the allowed channel types for this option. public IReadOnlyCollection<ChannelType> ChannelTypes { get; } Property Value IReadOnlyCollection<ChannelType> Choices Gets the parameter choices of this Slash Application Command parameter. public IReadOnlyCollection<ParameterChoice> Choices { get; } Property Value IReadOnlyCollection<ParameterChoice> Command Gets the command that this parameter belongs to. public SlashCommandInfo Command { get; } Property Value SlashCommandInfo ComplexParameterFields Gets the constructor parameters of this parameter, if IsComplexParameter is true. public IReadOnlyCollection<SlashCommandParameterInfo>? ComplexParameterFields { get; } Property Value IReadOnlyCollection<SlashCommandParameterInfo> Description Gets the description of the Slash Command Parameter. public string? Description { get; } Property Value string HeyBoxOptionType Gets the HeyBox option type this parameter represents. If the parameter is not a complex parameter. public SlashCommandOptionType? HeyBoxOptionType { get; } Property Value SlashCommandOptionType? IsComplexParameter Gets whether this type should be treated as a complex parameter. public bool IsComplexParameter { get; } Property Value bool MaxLength Gets the maximum length allowed for a string type parameter. public int? MaxLength { get; } Property Value int? MaxValue Gets the maximum value permitted for a number type parameter. public double? MaxValue { get; } Property Value double? MinLength Gets the minimum length allowed for a string type parameter. public int? MinLength { get; } Property Value int? MinValue Gets the minimum value permitted for a number type parameter. public double? MinValue { get; } Property Value double? TypeConverter Gets the TypeConverter<T> that will be used to convert the incoming IHeyBoxInteractionData into ParameterType. public TypeConverter TypeConverter { get; } Property Value TypeConverter"
  },
  "api/HeyBox.Interactions.SocketInteractionContext-1.html": {
    "href": "api/HeyBox.Interactions.SocketInteractionContext-1.html",
    "title": "Class SocketInteractionContext<TInteraction> | HeyBox.Net 文档",
    "keywords": "Class SocketInteractionContext<TInteraction> Namespace HeyBox.Interactions Assembly HeyBox.Net.WebSocket.dll Represents a Web-Socket based context of an IHeyBoxInteraction. public class SocketInteractionContext<TInteraction> : IInteractionContext, IRouteMatchContainer where TInteraction : SocketInteraction Type Parameters TInteraction Inheritance object SocketInteractionContext<TInteraction> Implements IInteractionContext IRouteMatchContainer Derived SocketInteractionContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SocketInteractionContext(HeyBoxSocketClient, TInteraction) Initializes a new SocketInteractionContext<TInteraction>. public SocketInteractionContext(HeyBoxSocketClient client, TInteraction interaction) Parameters client HeyBoxSocketClient The underlying client. interaction TInteraction The underlying interaction. Properties Channel Gets the ISocketMessageChannel the command originated from. public ISocketMessageChannel Channel { get; } Property Value ISocketMessageChannel Client Gets the HeyBoxSocketClient that the command will be executed with. public HeyBoxSocketClient Client { get; } Property Value HeyBoxSocketClient Interaction Gets the SocketInteraction the command was received with. public TInteraction Interaction { get; } Property Value TInteraction MessageId Gets the message ID the interaction originated from. public ulong MessageId { get; } Property Value ulong Room Gets the SocketRoom the command originated from. public SocketRoom? Room { get; } Property Value SocketRoom Remarks Will be null if the command is from a DM Channel. RoomId Gets the application command info that was used to handle this interaction. public ulong? RoomId { get; } Property Value ulong? SegmentMatches Gets the collection of captured route segments in this container. public IReadOnlyCollection<IRouteSegmentMatch> SegmentMatches { get; } Property Value IReadOnlyCollection<IRouteSegmentMatch> A collection of captured route segments. User Gets the SocketUser who executed the command. public SocketUser? User { get; } Property Value SocketUser UserId Gets the user ID who invoked the interaction. public uint UserId { get; } Property Value uint Methods SetSegmentMatches(IEnumerable<IRouteSegmentMatch>) Sets the SegmentMatches property of this container. public void SetSegmentMatches(IEnumerable<IRouteSegmentMatch> segmentMatches) Parameters segmentMatches IEnumerable<IRouteSegmentMatch> The collection of captured route segments."
  },
  "api/HeyBox.Interactions.SocketInteractionContext.html": {
    "href": "api/HeyBox.Interactions.SocketInteractionContext.html",
    "title": "Class SocketInteractionContext | HeyBox.Net 文档",
    "keywords": "Class SocketInteractionContext Namespace HeyBox.Interactions Assembly HeyBox.Net.WebSocket.dll Represents a Web-Socket based context of an IHeyBoxInteraction public class SocketInteractionContext : SocketInteractionContext<SocketInteraction>, IInteractionContext, IRouteMatchContainer Inheritance object SocketInteractionContext<SocketInteraction> SocketInteractionContext Implements IInteractionContext IRouteMatchContainer Inherited Members SocketInteractionContext<SocketInteraction>.Client SocketInteractionContext<SocketInteraction>.RoomId SocketInteractionContext<SocketInteraction>.Room SocketInteractionContext<SocketInteraction>.Channel SocketInteractionContext<SocketInteraction>.UserId SocketInteractionContext<SocketInteraction>.User SocketInteractionContext<SocketInteraction>.MessageId SocketInteractionContext<SocketInteraction>.Interaction SocketInteractionContext<SocketInteraction>.SegmentMatches SocketInteractionContext<SocketInteraction>.SetSegmentMatches(IEnumerable<IRouteSegmentMatch>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SocketInteractionContext(HeyBoxSocketClient, SocketInteraction) Initializes a new SocketInteractionContext public SocketInteractionContext(HeyBoxSocketClient client, SocketInteraction interaction) Parameters client HeyBoxSocketClient The underlying client interaction SocketInteraction The underlying interaction"
  },
  "api/HeyBox.Interactions.SummaryAttribute.html": {
    "href": "api/HeyBox.Interactions.SummaryAttribute.html",
    "title": "Class SummaryAttribute | HeyBox.Net 文档",
    "keywords": "Class SummaryAttribute Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Customize the name and description of a Slash Application Command parameter. [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)] public class SummaryAttribute : Attribute Inheritance object Attribute SummaryAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SummaryAttribute(string?, string?) Modify the default name and description values of a Slash Command parameter. public SummaryAttribute(string? name = null, string? description = null) Parameters name string Name of the parameter. description string Description of the parameter. Properties Description Gets the description of the parameter. public string? Description { get; } Property Value string Name Gets the name of the parameter. public string? Name { get; } Property Value string"
  },
  "api/HeyBox.Interactions.TypeConverter-1.html": {
    "href": "api/HeyBox.Interactions.TypeConverter-1.html",
    "title": "Class TypeConverter<T> | HeyBox.Net 文档",
    "keywords": "Class TypeConverter<T> Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Base class for creating TypeConverters. InteractionService uses TypeConverters to interface with Slash Command parameters. public abstract class TypeConverter<T> : TypeConverter Type Parameters T Inheritance object TypeConverter TypeConverter<T> Inherited Members TypeConverter.GetHeyBoxType() TypeConverter.ReadAsync(IInteractionContext, ISlashCommandInteractionDataOption, IServiceProvider) TypeConverter.Write(SlashCommandOptionProperties, IParameterInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertTo(Type) Will be used to search for alternative TypeConverters whenever the Command Service encounters an unknown parameter type. public override sealed bool CanConvertTo(Type type) Parameters type Type Returns bool"
  },
  "api/HeyBox.Interactions.TypeConverter.html": {
    "href": "api/HeyBox.Interactions.TypeConverter.html",
    "title": "Class TypeConverter | HeyBox.Net 文档",
    "keywords": "Class TypeConverter Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Base class for creating TypeConverters. InteractionService uses TypeConverters to interface with Slash Command parameters. public abstract class TypeConverter Inheritance object TypeConverter Derived TypeConverter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertTo(Type) Will be used to search for alternative TypeConverters whenever the Command Service encounters an unknown parameter type. public abstract bool CanConvertTo(Type type) Parameters type Type Returns bool GetHeyBoxType() Will be used to get the Application Command Option type. public abstract SlashCommandOptionType GetHeyBoxType() Returns SlashCommandOptionType The option type. ReadAsync(IInteractionContext, ISlashCommandInteractionDataOption, IServiceProvider?) Will be used to read the incoming payload before executing the method body. public abstract Task<TypeConverterResult> ReadAsync(IInteractionContext context, ISlashCommandInteractionDataOption option, IServiceProvider? services) Parameters context IInteractionContext Command execution context. option ISlashCommandInteractionDataOption Received option payload. services IServiceProvider Service provider that will be used to initialize the command module. Returns Task<TypeConverterResult> The result of the read process. Write(SlashCommandOptionProperties, IParameterInfo) Will be used to manipulate the outgoing command option, before the command gets registered to HeyBox. public virtual void Write(SlashCommandOptionProperties properties, IParameterInfo parameter) Parameters properties SlashCommandOptionProperties parameter IParameterInfo"
  },
  "api/HeyBox.Interactions.TypeConverterResult.html": {
    "href": "api/HeyBox.Interactions.TypeConverterResult.html",
    "title": "Struct TypeConverterResult | HeyBox.Net 文档",
    "keywords": "Struct TypeConverterResult Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll Represents a result type for ReadAsync(IInteractionContext, ISlashCommandInteractionDataOption, IServiceProvider?). public struct TypeConverterResult : IResult Implements IResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Error Gets the error type that may have occurred during the operation. public readonly InteractionCommandError? Error { get; } Property Value InteractionCommandError? A InteractionCommandError indicating the type of error that may have occurred during the operation; null if the operation was successful. ErrorReason Gets the reason for the error. public readonly string? ErrorReason { get; } Property Value string A string containing the error reason. IsSuccess Indicates whether the operation was successful or not. public bool IsSuccess { get; } Property Value bool true if the result is positive; otherwise false. Value Gets the result of the conversion if the operation was successful. public readonly object? Value { get; } Property Value object Methods FromError(IResult) Returns a PreconditionResult with the specified result type. public static TypeConverterResult FromError(IResult result) Parameters result IResult The result of failure. Returns TypeConverterResult FromError(InteractionCommandError, string) Returns a PreconditionResult with the specified error and the reason. public static TypeConverterResult FromError(InteractionCommandError error, string reason) Parameters error InteractionCommandError The type of error. reason string The reason of failure. Returns TypeConverterResult FromError(Exception) Returns a TypeConverterResult with Exception and the Message. public static TypeConverterResult FromError(Exception exception) Parameters exception Exception The exception that caused the type conversion to fail. Returns TypeConverterResult FromSuccess(object?) Returns a TypeConverterResult with no errors. public static TypeConverterResult FromSuccess(object? value) Parameters value object Returns TypeConverterResult ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/HeyBox.Interactions.TypeReader-1.html": {
    "href": "api/HeyBox.Interactions.TypeReader-1.html",
    "title": "Class TypeReader<T> | HeyBox.Net 文档",
    "keywords": "Class TypeReader<T> Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 用于创建类型转换器的基类。InteractionService 使用类型转换器与斜线命令参数进行交互。 public abstract class TypeReader<T> : TypeReader Type Parameters T Inheritance object TypeReader TypeReader<T> Inherited Members TypeReader.ReadAsync(IInteractionContext, string, IServiceProvider) TypeReader.SerializeAsync(object, IServiceProvider) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertTo(Type) 当命令服务遇到未知参数类型时，将使用此方法搜索替代的类型转换器。 public override sealed bool CanConvertTo(Type type) Parameters type Type 要使用的服务提供程序。 Returns bool 如果找到了替代类型转换器，则为 true；否则为 false。"
  },
  "api/HeyBox.Interactions.TypeReader.html": {
    "href": "api/HeyBox.Interactions.TypeReader.html",
    "title": "Class TypeReader | HeyBox.Net 文档",
    "keywords": "Class TypeReader Namespace HeyBox.Interactions Assembly HeyBox.Net.Interactions.dll 用于创建类型转换器的基类。InteractionService 使用类型转换器与斜线命令参数进行交互。 public abstract class TypeReader Inheritance object TypeReader Derived TypeReader<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CanConvertTo(Type) 当命令服务遇到未知参数类型时，将使用此方法搜索替代的类型转换器。 public abstract bool CanConvertTo(Type type) Parameters type Type 要使用的服务提供程序。 Returns bool 如果找到了替代类型转换器，则为 true；否则为 false。 ReadAsync(IInteractionContext, string, IServiceProvider?) 读取字符串并将其转换为指定类型。 public abstract Task<TypeConverterResult> ReadAsync(IInteractionContext context, string option, IServiceProvider? services) Parameters context IInteractionContext 交互上下文。 option string 传入的负载。 services IServiceProvider 要使用的服务提供程序。 Returns Task<TypeConverterResult> 一个表示异步读取操作的任务，任务的结果包含转换结果。 SerializeAsync(object, IServiceProvider) 将对象序列化为字符串。 public virtual Task<string?> SerializeAsync(object obj, IServiceProvider services) Parameters obj object 要序列化的对象。 services IServiceProvider 要使用的服务提供程序。 Returns Task<string> 一个表示异步序列化操作的任务，任务的结果包含序列化结果。"
  },
  "api/HeyBox.Interactions.html": {
    "href": "api/HeyBox.Interactions.html",
    "title": "Namespace HeyBox.Interactions | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Interactions Classes ChannelTypesAttribute Specify the target channel types for a Channel option. ChoiceAttribute Add a pre-determined argument value to a command parameter. ChoiceDisplayAttribute Customize the displayed value of a slash command choice enum. Only works with the default enum type converter. ChoiceValueAttribute Customize the displayed value of a slash command choice enum. Only works with the default enum type converter. CommandContextTypeAttribute Specifies context types this command can be executed in. CommandInfo<TParameter> The base information class for InteractionService commands. CommandParameterInfo Represents the base parameter info class for InteractionService commands. ComplexParameterAttribute Registers a parameter as a complex parameter. ComplexParameterCtorAttribute Tag a type constructor as the preferred Complex command constructor. HideAttribute Enum values tagged with this attribute will not be displayed as a parameter choice InteractionContext Represents the context of an Interaction. InteractionException 表示一个交互执行过程中发生的异常。 InteractionModuleBase 提供一个用于继承的命令模块基类。 InteractionModuleBase<T> 提供一个用于继承的命令模块基类。 InteractionService 提供构建交互服务的框架。 InteractionServiceConfig 表示一个 InteractionService 的配置类。 MaxLengthAttribute Sets the maximum length allowed for a string type parameter. MaxValueAttribute Set the maximum value permitted for a number type parameter. MinLengthAttribute Sets the minimum length allowed for a string type parameter. MinValueAttribute Set the minimum value permitted for a number type parameter. ModuleInfo Contains the information of a Interactions Module. ParameterChoice Represents a Slash Command parameter choice. ParameterPreconditionAttribute Requires the parameter to pass the specified precondition before execution can begin. PreconditionAttribute Requires the module or class to pass the specified precondition before execution can begin. PreconditionGroupResult Represents a result type for grouped command preconditions. PreconditionResult Represents a result type for command preconditions. RequireRoleAttribute Requires the user invoking the command to have a specified role. RequireUserAttribute Requires the user invoking the command to have a specified user. RuntimeResult Represents the base class for creating command result containers. SlashCommandAttribute Create an Slash Application Command. SlashCommandInfo Represents the info class of an attribute based method for command type Slash. SlashCommandParameterInfo Represents the parameter info class for SlashCommandInfo commands. SocketInteractionContext Represents a Web-Socket based context of an IHeyBoxInteraction SocketInteractionContext<TInteraction> Represents a Web-Socket based context of an IHeyBoxInteraction. SummaryAttribute Customize the name and description of a Slash Application Command parameter. TypeConverter Base class for creating TypeConverters. InteractionService uses TypeConverters to interface with Slash Command parameters. TypeConverter<T> Base class for creating TypeConverters. InteractionService uses TypeConverters to interface with Slash Command parameters. TypeReader 用于创建类型转换器的基类。InteractionService 使用类型转换器与斜线命令参数进行交互。 TypeReader<T> 用于创建类型转换器的基类。InteractionService 使用类型转换器与斜线命令参数进行交互。 Structs ExecuteResult Contains information of the command's overall execution result. ParseResult 表示一个解析结果。 SearchResult<T> Contains information of a command search. TypeConverterResult Represents a result type for ReadAsync(IInteractionContext, ISlashCommandInteractionDataOption, IServiceProvider?). Interfaces IApplicationCommandInfo Represents a InteractionService command that can be registered to HeyBox. ICommandInfo Represent a command information object that can be executed. IInteractionModuleBase 表示一个通用的交互模块基类。 IParameterInfo Represents a ICommandInfo parameter. IResult Contains information of the result related to a command. Enums InteractionCommandError 定义命令可能抛出的错误类型。 RunMode 表示命令执行工作流的模式。 SlashCommandChoiceType Supported types of pre-defined parameter choices. Delegates ComplexParameterInitializer Represents a cached argument constructor delegate. ExecuteCallback Represents a cached method execution delegate."
  },
  "api/HeyBox.LogMessage.html": {
    "href": "api/HeyBox.LogMessage.html",
    "title": "Struct LogMessage | HeyBox.Net 文档",
    "keywords": "Struct LogMessage Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个用于记录日志的消息对象。 public readonly struct LogMessage Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors LogMessage(LogSeverity, string, string?, Exception?) 使用事件的严重性、来源、消息和可选的异常初始化 LogMessage 结构。 public LogMessage(LogSeverity severity, string source, string? message, Exception? exception = null) Parameters severity LogSeverity 事件的严重性。 source string 事件的来源。 message string 事件的消息。 exception Exception 事件的异常。 Properties Exception 获取此日志条目的异常。 public Exception? Exception { get; } Property Value Exception Message 获取日志记录的消息。 public string? Message { get; } Property Value string Severity 获取日志记录的严重性。 public LogSeverity Severity { get; } Property Value LogSeverity Source 获取日志记录的来源。 public string Source { get; } Property Value string Methods ToString() 返回此日志消息的字符串表示形式。 public override string ToString() Returns string 此日志消息的字符串表示形式。 ToString(StringBuilder?, bool, bool, DateTimeKind, int?) 返回此日志消息的字符串表示形式。 public string ToString(StringBuilder? builder = null, bool fullException = true, bool prependTimestamp = true, DateTimeKind timestampKind = DateTimeKind.Local, int? padSource = 11) Parameters builder StringBuilder 要使用的字符串构建器。 fullException bool 是否在字符串中包含完整的异常信息。 prependTimestamp bool 是否在字符串前添加时间戳。 timestampKind DateTimeKind 要使用的时间戳类型。 padSource int? 源字符串的填充量。 Returns string 此日志消息的字符串表示形式。"
  },
  "api/HeyBox.LogSeverity.html": {
    "href": "api/HeyBox.LogSeverity.html",
    "title": "Enum LogSeverity | HeyBox.Net 文档",
    "keywords": "Enum LogSeverity Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示日志消息的严重性。 public enum LogSeverity Fields Critical = 0 记录包含最高严重级别错误的日志，这类错误可能需要立即关注。 Debug = 5 记录任何日志，包括最详细的诊断日志。 Error = 1 记录在执行流程因故障而停止时的日志。 Info = 3 记录跟踪应用程序的一般流程的日志。 Verbose = 4 记录用于在开发过程中进行交互式调查的日志。 Warning = 2 记录在执行流程中出现的异常活动。"
  },
  "api/HeyBox.LoginState.html": {
    "href": "api/HeyBox.LoginState.html",
    "title": "Enum LoginState | HeyBox.Net 文档",
    "keywords": "Enum LoginState Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示客户端的登录状态。 public enum LoginState : byte Fields LoggedIn = 2 已登录。 LoggedOut = 0 已退出登录。 LoggingIn = 1 正在登录。 LoggingOut = 3 正在退出登录。"
  },
  "api/HeyBox.MentionUtils.html": {
    "href": "api/HeyBox.MentionUtils.html",
    "title": "Class MentionUtils | HeyBox.Net 文档",
    "keywords": "Class MentionUtils Namespace HeyBox Assembly HeyBox.Net.Core.dll 提供一组用于生成与解析提及标签的辅助方法。 public static class MentionUtils Inheritance object MentionUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MentionEveryone 返回全体成员提及字符串。 public static string MentionEveryone { get; } Property Value string MentionHere 返回在线成员提及字符串。 public static string MentionHere { get; } Property Value string Remarks 黑盒语音的文档中，提及在线成员的字符串为 @{hear}。 Methods MentionChannel(ulong) 返回基于频道 ID 的格式化频道提及字符串。 public static string MentionChannel(ulong id) Parameters id ulong Returns string 频道提及字符串。 MentionRole(ulong) 返回基于角色 ID 的格式化频道提及字符串。 public static string MentionRole(ulong id) Parameters id ulong Returns string 角色提及字符串。 MentionUser(uint) 返回基于用户 ID 的格式化频道提及字符串。 public static string MentionUser(uint id) Parameters id uint Returns string 用户提及字符串。 ParseChannel(string) 解析指定的频道提及字符串。 public static ulong ParseChannel(string text) Parameters text string 要解析的频道提及字符串。 Returns ulong 解析的频道 ID。 Exceptions ArgumentException 无效的频道提及字符串格式。 ParseRole(string) 解析指定的角色提及字符串。 public static ulong ParseRole(string text) Parameters text string 要解析的角色提及字符串。 Returns ulong 解析的角色 ID。 Exceptions ArgumentException 无效的角色提及字符串格式。 ParseUser(string) 将指定的用户提及字符串解析为用户 ID。 public static uint ParseUser(string text) Parameters text string 要解析的用户提及字符串。 Returns uint 解析的用户 ID。 Exceptions ArgumentException 无效的用户提及字符串格式。 TryParseChannel(string, out ulong) 尝试解析指定的频道提及字符串。 public static bool TryParseChannel(string text, out ulong channelId) Parameters text string 要解析的频道提及字符串。 channelId ulong 如果解析成功，则为频道 ID；否则为 0。 Returns bool 如果解析成功，则为 true；否则为 false。 TryParseRole(string, out ulong) 尝试解析指定的角色提及字符串。 public static bool TryParseRole(string text, out ulong roleId) Parameters text string T 要解析的角色提及字符串。 roleId ulong 如果解析成功，则为角色 ID；否则为 0。 Returns bool 如果解析成功，则为 true；否则为 false。 TryParseUser(string, out uint) 尝试解析指定的用户提及字符串。 public static bool TryParseUser(string text, out uint userId) Parameters text string 要解析的用户提及字符串。 userId uint 如果解析成功，则为用户 ID；否则为 0。 Returns bool 如果解析成功，则为 true；否则为 false。"
  },
  "api/HeyBox.MessageReference.html": {
    "href": "api/HeyBox.MessageReference.html",
    "title": "Class MessageReference | HeyBox.Net 文档",
    "keywords": "Class MessageReference Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个消息引用。 public class MessageReference : IMessageReference Inheritance object MessageReference Implements IMessageReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MessageReference(ulong) 使用指定的消息 ID 创建一个新的 MessageReference 实例。 public MessageReference(ulong messageId) Parameters messageId ulong 要引用的消息的 ID。 Properties MessageId 获取此引用所指向的消息的 ID。 public ulong MessageId { get; } Property Value ulong"
  },
  "api/HeyBox.MessageSource.html": {
    "href": "api/HeyBox.MessageSource.html",
    "title": "Enum MessageSource | HeyBox.Net 文档",
    "keywords": "Enum MessageSource Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示消息的来源。 public enum MessageSource Fields Bot = 2 消息由 Bot 发送。 System = 0 系统消息。 User = 1 消息由用户发送。"
  },
  "api/HeyBox.MessageType.html": {
    "href": "api/HeyBox.MessageType.html",
    "title": "Enum MessageType | HeyBox.Net 文档",
    "keywords": "Enum MessageType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示消息的类型。 public enum MessageType Fields Image = 3 表示文本消息。 Markdown = 4 表示 Markdown 消息。 MarkdownWithMention = 10 表示带有提及成员的 Markdown 消息。"
  },
  "api/HeyBox.Net.BucketId.html": {
    "href": "api/HeyBox.Net.BucketId.html",
    "title": "Class BucketId | HeyBox.Net 文档",
    "keywords": "Class BucketId Namespace HeyBox.Net Assembly HeyBox.Net.Core.dll 表示一个限速桶。 public sealed class BucketId : IEquatable<BucketId> Inheritance object BucketId Implements IEquatable<BucketId> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties BucketHash 获取此桶的哈希值。 public string? BucketHash { get; } Property Value string Remarks 此哈希值由 HeyBox 提供，用于分组限速。 Endpoint 获取将要请求的终结点（如果可用）。 public string? Endpoint { get; } Property Value string HttpMethod 获取用于发起请求的 HTTP 方法（如果可用）。 public HttpMethod? HttpMethod { get; } Property Value HttpMethod IsHashBucket 获取此限速桶是否为哈希分组限速桶。 public bool IsHashBucket { get; } Property Value bool MajorParameters 获取路由的主要参数。 public IOrderedEnumerable<KeyValuePair<string, string>> MajorParameters { get; } Property Value IOrderedEnumerable<KeyValuePair<string, string>> Methods Create(HttpMethod?, string?, Dictionary<string, string>?) 基于 HttpMethod 和 Endpoint 创建一个新的 BucketId。 public static BucketId Create(HttpMethod? httpMethod, string? endpoint, Dictionary<string, string>? majorParams) Parameters httpMethod HttpMethod 用于发送请求的 HTTP 方法。 endpoint string 请求的终结点。 majorParams Dictionary<string, string> 终结点的主要路由参数。 Returns BucketId 一个基于指定的 HttpMethod 和 Endpoint 创建的 BucketId。 Create(string, BucketId) 基于 BucketHash 和之前的 BucketId 创建一个新的 BucketId。 public static BucketId Create(string hash, BucketId oldBucket) Parameters hash string 由 HeyBox 提供的分组限速哈希值。 oldBucket BucketId 要被升级为哈希分组限速桶的已有限速桶。 Returns BucketId 一个基于指定的 BucketHash 和之前的 BucketId 创建的 BucketId。 Equals(BucketId?) Indicates whether the current object is equal to another object of the same type. public bool Equals(BucketId? other) Parameters other BucketId An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetBucketHash() 获取将此桶定义为哈希分组限速桶的字符串。 public string? GetBucketHash() Returns string 如果此桶是哈希分组限速桶，则返回此桶的哈希值；否则返回 null。 GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetUniqueEndpoint() 获取将此桶定义为终结点限速桶的字符串。 public string? GetUniqueEndpoint() Returns string 如果此桶是终结点限速桶，则返回此桶的终结点；否则返回 null。 ToString() Returns a string that represents the current object. public override string? ToString() Returns string A string that represents the current object."
  },
  "api/HeyBox.Net.HttpException.html": {
    "href": "api/HeyBox.Net.HttpException.html",
    "title": "Class HttpException | HeyBox.Net 文档",
    "keywords": "Class HttpException Namespace HeyBox.Net Assembly HeyBox.Net.Core.dll 当处理 HeyBox HTTP 请求时发生错误时引发的异常。 public class HttpException : Exception, ISerializable Inheritance object Exception HttpException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HttpException(HttpStatusCode, IRequest, HeyBoxErrorCode?, string?, HeyBoxJsonError[]?) 初始化一个 HttpException 类的新实例。 public HttpException(HttpStatusCode httpCode, IRequest request, HeyBoxErrorCode? heyBoxCode = null, string? reason = null, HeyBoxJsonError[]? errors = null) Parameters httpCode HttpStatusCode 返回的 HTTP 状态码。 request IRequest 引发异常前发送的请求。 heyBoxCode HeyBoxErrorCode? 由 HeyBox 返回的 JSON 负载中解析出的状态码。 reason string 引发异常的原因。 errors HeyBoxJsonError[] 描述请求错误的所有 JSON 错误。 Properties ErrorCode 获取错误代码。 public string? ErrorCode { get; } Property Value string Errors 获取描述请求失败原因的所有 JSON 错误。 public IReadOnlyCollection<HeyBoxJsonError> Errors { get; } Property Value IReadOnlyCollection<HeyBoxJsonError> HeyBoxCode 获取由 HeyBox 返回的 JSON 负载中的错误代码；也有可能是表示操作成功的代码； 如果无法从响应中解析出错误代码，则为 null。 public HeyBoxErrorCode? HeyBoxCode { get; } Property Value HeyBoxErrorCode? HttpCode 获取 HeyBox 返回的 HTTP 状态码。 public HttpStatusCode HttpCode { get; } Property Value HttpStatusCode Reason 获取异常的原因；也有可能是表示操作成功的消息；如果无法从响应中解析出原因，则为 null。 public string? Reason { get; } Property Value string Request 获取用于发送请求的请求对象。 public IRequest Request { get; } Property Value IRequest"
  },
  "api/HeyBox.Net.IRequest.html": {
    "href": "api/HeyBox.Net.IRequest.html",
    "title": "Interface IRequest | HeyBox.Net 文档",
    "keywords": "Interface IRequest Namespace HeyBox.Net Assembly HeyBox.Net.Core.dll 表示一个要发送到 HeyBox 的通用的请求。 public interface IRequest Properties Options 获取发送请求时要使用的选项。 RequestOptions Options { get; } Property Value RequestOptions TimeoutAt 获取请求在超时之前应等待的时间。 DateTimeOffset? TimeoutAt { get; } Property Value DateTimeOffset?"
  },
  "api/HeyBox.Net.Queue.BaseMessageQueue.html": {
    "href": "api/HeyBox.Net.Queue.BaseMessageQueue.html",
    "title": "Class BaseMessageQueue | HeyBox.Net 文档",
    "keywords": "Class BaseMessageQueue Namespace HeyBox.Net.Queue Assembly HeyBox.Net.Core.dll 表示一个通用的消息队列抽象类。 public abstract class BaseMessageQueue : IMessageQueue Inheritance object BaseMessageQueue Implements IMessageQueue Derived SynchronousImmediateMessageQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseMessageQueue(Func<string, JsonElement, Task>) 初始化一个 BaseMessageQueue 类的新实例。 protected BaseMessageQueue(Func<string, JsonElement, Task> eventHandler) Parameters eventHandler Func<string, JsonElement, Task> 用于处理消息的事件处理程序。 Properties EventHandler 获取消息队列的事件处理程序。 protected Func<string, JsonElement, Task> EventHandler { get; } Property Value Func<string, JsonElement, Task> Methods EnqueueAsync(string, JsonElement, ulong, DateTimeOffset, CancellationToken) 将网关消息添加到队列中。 public abstract Task EnqueueAsync(string type, JsonElement payload, ulong sequence, DateTimeOffset timestamp, CancellationToken cancellationToken = default) Parameters type string 网关消息的类型。 payload JsonElement 网关消息的有效负载。 sequence ulong 网关消息的序号。 timestamp DateTimeOffset 网关消息的时间戳。 cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步入队操作的任务。 StartAsync(CancellationToken) 启动消息队列的处理。 public abstract Task StartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步启动操作的任务。 StopAsync(CancellationToken) 停止消息队列的处理。 public abstract Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步停止操作的任务。"
  },
  "api/HeyBox.Net.Queue.IMessageQueue.html": {
    "href": "api/HeyBox.Net.Queue.IMessageQueue.html",
    "title": "Interface IMessageQueue | HeyBox.Net 文档",
    "keywords": "Interface IMessageQueue Namespace HeyBox.Net.Queue Assembly HeyBox.Net.Core.dll 表示一个消息队列，用于从 HeyBox 网关接收并处理事件。 public interface IMessageQueue Methods EnqueueAsync(string, JsonElement, ulong, DateTimeOffset, CancellationToken) 将网关消息添加到队列中。 Task EnqueueAsync(string type, JsonElement payload, ulong sequence, DateTimeOffset timestamp, CancellationToken cancellationToken = default) Parameters type string 网关消息的类型。 payload JsonElement 网关消息的有效负载。 sequence ulong 网关消息的序号。 timestamp DateTimeOffset 网关消息的时间戳。 cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步入队操作的任务。"
  },
  "api/HeyBox.Net.Queue.MessageQueueProvider.html": {
    "href": "api/HeyBox.Net.Queue.MessageQueueProvider.html",
    "title": "Delegate MessageQueueProvider | HeyBox.Net 文档",
    "keywords": "Delegate MessageQueueProvider Namespace HeyBox.Net.Queue Assembly HeyBox.Net.Core.dll 表示一个提供新的 IMessageQueue 实例的委托。 public delegate BaseMessageQueue MessageQueueProvider(Func<string, JsonElement, Task> eventHandler) Parameters eventHandler Func<string, JsonElement, Task> 表示一个提供新的 实例的委托。 Returns BaseMessageQueue 表示一个提供新的 实例的委托。"
  },
  "api/HeyBox.Net.Queue.SynchronousImmediate.SynchronousImmediateMessageQueue.html": {
    "href": "api/HeyBox.Net.Queue.SynchronousImmediate.SynchronousImmediateMessageQueue.html",
    "title": "Class SynchronousImmediateMessageQueue | HeyBox.Net 文档",
    "keywords": "Class SynchronousImmediateMessageQueue Namespace HeyBox.Net.Queue.SynchronousImmediate Assembly HeyBox.Net.Core.dll 表示一个同步处理消息队列。 public class SynchronousImmediateMessageQueue : BaseMessageQueue, IMessageQueue Inheritance object BaseMessageQueue SynchronousImmediateMessageQueue Implements IMessageQueue Inherited Members BaseMessageQueue.EventHandler object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks 此消息队列会在接收到网关事件后调用 EnqueueAsync(string, JsonElement, ulong, DateTimeOffset, CancellationToken) 时立即使用构造函数中传入的 eventHandler 委托同步进行处理，处理完成后，该方法才会返回。 Constructors SynchronousImmediateMessageQueue(Func<string, JsonElement, Task>) 初始化一个 BaseMessageQueue 类的新实例。 public SynchronousImmediateMessageQueue(Func<string, JsonElement, Task> eventHandler) Parameters eventHandler Func<string, JsonElement, Task> 用于处理消息的事件处理程序。 Methods EnqueueAsync(string, JsonElement, ulong, DateTimeOffset, CancellationToken) 将网关消息添加到队列中。 public override Task EnqueueAsync(string type, JsonElement payload, ulong sequence, DateTimeOffset timestamp, CancellationToken cancellationToken = default) Parameters type string 网关消息的类型。 payload JsonElement 网关消息的有效负载。 sequence ulong 网关消息的序号。 timestamp DateTimeOffset 网关消息的时间戳。 cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步入队操作的任务。 StartAsync(CancellationToken) 启动消息队列的处理。 public override Task StartAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步启动操作的任务。 StopAsync(CancellationToken) 停止消息队列的处理。 public override Task StopAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken 用于取消该操作的取消令牌。 Returns Task 表示一个异步停止操作的任务。"
  },
  "api/HeyBox.Net.Queue.SynchronousImmediate.SynchronousImmediateMessageQueueProvider.html": {
    "href": "api/HeyBox.Net.Queue.SynchronousImmediate.SynchronousImmediateMessageQueueProvider.html",
    "title": "Class SynchronousImmediateMessageQueueProvider | HeyBox.Net 文档",
    "keywords": "Class SynchronousImmediateMessageQueueProvider Namespace HeyBox.Net.Queue.SynchronousImmediate Assembly HeyBox.Net.Core.dll 表示一个默认的使用同步处理机制的 MessageQueueProvider，用于创建 SynchronousImmediateMessageQueue 实例。 public static class SynchronousImmediateMessageQueueProvider Inheritance object SynchronousImmediateMessageQueueProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance 创建一个新的用于创建默认的使用同步处理机制的 SynchronousImmediateMessageQueue 实例的委托。 public static readonly MessageQueueProvider Instance Field Value MessageQueueProvider Exceptions PlatformNotSupportedException 当默认的 SynchronousImmediateMessageQueueProvider 在当前平台上不受支持时引发。"
  },
  "api/HeyBox.Net.Queue.SynchronousImmediate.html": {
    "href": "api/HeyBox.Net.Queue.SynchronousImmediate.html",
    "title": "Namespace HeyBox.Net.Queue.SynchronousImmediate | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Net.Queue.SynchronousImmediate Classes SynchronousImmediateMessageQueue 表示一个同步处理消息队列。 SynchronousImmediateMessageQueueProvider 表示一个默认的使用同步处理机制的 MessageQueueProvider，用于创建 SynchronousImmediateMessageQueue 实例。"
  },
  "api/HeyBox.Net.Queue.html": {
    "href": "api/HeyBox.Net.Queue.html",
    "title": "Namespace HeyBox.Net.Queue | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Net.Queue Classes BaseMessageQueue 表示一个通用的消息队列抽象类。 Interfaces IMessageQueue 表示一个消息队列，用于从 HeyBox 网关接收并处理事件。 Delegates MessageQueueProvider 表示一个提供新的 IMessageQueue 实例的委托。"
  },
  "api/HeyBox.Net.RateLimitInfo.html": {
    "href": "api/HeyBox.Net.RateLimitInfo.html",
    "title": "Struct RateLimitInfo | HeyBox.Net 文档",
    "keywords": "Struct RateLimitInfo Namespace HeyBox.Net Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的速率限制信息。 public struct RateLimitInfo : IRateLimitInfo Implements IRateLimitInfo Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Bucket 获取一个唯一的字符串，表示所遇到的限速桶（不包括路由路径中的主要参数）。 public readonly string? Bucket { get; } Property Value string Endpoint 获取此限速信息所属的终结点。 public readonly string Endpoint { get; } Property Value string IsGlobal 获取此限速信息是否为全局限速。 public readonly bool IsGlobal { get; } Property Value bool Lag 获取请求的延迟，用于支持计算限速重置的精确时间。 public readonly TimeSpan? Lag { get; } Property Value TimeSpan? Limit 获取在更新时限内可以进行的请求数量。 public readonly int? Limit { get; } Property Value int? Remaining 获取目前可以立即进行的请求数量。 public readonly int? Remaining { get; } Property Value int? ResetAfter 获取相对于此刻此限速重置的相对时间间隔。 public readonly TimeSpan? ResetAfter { get; } Property Value TimeSpan?"
  },
  "api/HeyBox.Net.RateLimitedException.html": {
    "href": "api/HeyBox.Net.RateLimitedException.html",
    "title": "Class RateLimitedException | HeyBox.Net 文档",
    "keywords": "Class RateLimitedException Namespace HeyBox.Net Assembly HeyBox.Net.Core.dll 表示一个由 HeyBox 限制请求频率时引发的异常。 public class RateLimitedException : TimeoutException, ISerializable Inheritance object Exception SystemException TimeoutException RateLimitedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RateLimitedException(IRequest) 使用发送的 request 初始化 RateLimitedException 类的新实例。 public RateLimitedException(IRequest request) Parameters request IRequest 引发异常的请求。 Properties Request 获取引发此异常的请求对象。 public IRequest Request { get; } Property Value IRequest"
  },
  "api/HeyBox.Net.Rest.DefaultRestClientProvider.html": {
    "href": "api/HeyBox.Net.Rest.DefaultRestClientProvider.html",
    "title": "Class DefaultRestClientProvider | HeyBox.Net 文档",
    "keywords": "Class DefaultRestClientProvider Namespace HeyBox.Net.Rest Assembly HeyBox.Net.Rest.dll 表示一个默认的 RestClientProvider，用于创建 IRestClient 的默认实现的实例。 public static class DefaultRestClientProvider Inheritance object DefaultRestClientProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance 获取一个默认的 RestClientProvider 委托，用于创建 IRestClient 的默认实现的实例。 public static readonly RestClientProvider Instance Field Value RestClientProvider Methods Create(bool, IWebProxy?) 创建一个新的 RestClientProvider 委托。 public static RestClientProvider Create(bool useProxy = false, IWebProxy? webProxy = null) Parameters useProxy bool 是否使用系统代理。 webProxy IWebProxy 代理。 Returns RestClientProvider 一个新的 RestClientProvider 委托。"
  },
  "api/HeyBox.Net.Rest.IRestClient.html": {
    "href": "api/HeyBox.Net.Rest.IRestClient.html",
    "title": "Interface IRestClient | HeyBox.Net 文档",
    "keywords": "Interface IRestClient Namespace HeyBox.Net.Rest Assembly HeyBox.Net.Core.dll 表示一个通用的基于 RESTful API 的客户端。 public interface IRestClient : IDisposable Inherited Members IDisposable.Dispose() Methods SendAsync(HttpMethod, string, IReadOnlyDictionary<string, object>, CancellationToken, string?, IEnumerable<KeyValuePair<string, IEnumerable<string>>>?) 发送一个带有多部分数据参数的 RESTful API 请求。 Task<RestResponse> SendAsync(HttpMethod method, string endpoint, IReadOnlyDictionary<string, object> multipartParams, CancellationToken cancellationToken, string? reason = null, IEnumerable<KeyValuePair<string, IEnumerable<string>>>? requestHeaders = null) Parameters method HttpMethod 用于发送此请求的方法。 endpoint string 要发送此请求的端点。 multipartParams IReadOnlyDictionary<string, object> 要发送的多部分数据参数。 cancellationToken CancellationToken 用于取消任务的取消令牌。 reason string 用于审计日志的操作原因。 requestHeaders IEnumerable<KeyValuePair<string, IEnumerable<string>>> 要随请求一起发送的附加标头。 Returns Task<RestResponse> 表示一个异步发送操作的任务。任务的结果包含请求的响应。 SendAsync(HttpMethod, string, string, CancellationToken, string?, IEnumerable<KeyValuePair<string, IEnumerable<string>>>?) 发送一个带有 JSON 请求体的 RESTful API 请求。 Task<RestResponse> SendAsync(HttpMethod method, string endpoint, string json, CancellationToken cancellationToken, string? reason = null, IEnumerable<KeyValuePair<string, IEnumerable<string>>>? requestHeaders = null) Parameters method HttpMethod 用于发送此请求的方法。 endpoint string 要发送此请求的端点。 json string 要发送的 JSON 请求体。 cancellationToken CancellationToken 用于取消任务的取消令牌。 reason string 用于审计日志的操作原因。 requestHeaders IEnumerable<KeyValuePair<string, IEnumerable<string>>> 要随请求一起发送的附加标头。 Returns Task<RestResponse> 表示一个异步发送操作的任务。任务的结果包含请求的响应。 SendAsync(HttpMethod, string, CancellationToken, string?, IEnumerable<KeyValuePair<string, IEnumerable<string>>>?) 发送一个 RESTful API 请求。 Task<RestResponse> SendAsync(HttpMethod method, string endpoint, CancellationToken cancellationToken, string? reason = null, IEnumerable<KeyValuePair<string, IEnumerable<string>>>? requestHeaders = null) Parameters method HttpMethod 用于发送此请求的方法。 endpoint string 要发送此请求的端点。 cancellationToken CancellationToken 用于取消任务的取消令牌。 reason string 用于审计日志的操作原因。 requestHeaders IEnumerable<KeyValuePair<string, IEnumerable<string>>> 要随请求一起发送的附加标头。 Returns Task<RestResponse> 表示一个异步发送操作的任务。任务的结果包含请求的响应。 SetCancellationToken(CancellationToken) 设置此客户端的取消令牌。 void SetCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken 用于取消任务的取消令牌。 SetHeader(string, string?) 设置此客户端的 HTTP 头部，这将应用于所有请求。 void SetHeader(string key, string? value) Parameters key string HTTP 头部的键。 value string HTTP 头部的值。"
  },
  "api/HeyBox.Net.Rest.RestClientProvider.html": {
    "href": "api/HeyBox.Net.Rest.RestClientProvider.html",
    "title": "Delegate RestClientProvider | HeyBox.Net 文档",
    "keywords": "Delegate RestClientProvider Namespace HeyBox.Net.Rest Assembly HeyBox.Net.Core.dll 表示一个用于创建 IRestClient 实例的委托。 public delegate IRestClient RestClientProvider(string baseUrl) Parameters baseUrl string 表示一个用于创建 实例的委托。 Returns IRestClient 表示一个用于创建 实例的委托。"
  },
  "api/HeyBox.Net.Rest.RestResponse.html": {
    "href": "api/HeyBox.Net.Rest.RestResponse.html",
    "title": "Struct RestResponse | HeyBox.Net 文档",
    "keywords": "Struct RestResponse Namespace HeyBox.Net.Rest Assembly HeyBox.Net.Core.dll 表示一个 RESTful API 请求的响应。 public struct RestResponse Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Headers 获取响应的头部。 public readonly Dictionary<string, string?> Headers { get; } Property Value Dictionary<string, string> MediaTypeHeader 获取响应的媒体类型头部。 public readonly MediaTypeHeaderValue? MediaTypeHeader { get; } Property Value MediaTypeHeaderValue StatusCode 获取响应的 HTTP 状态码。 public readonly HttpStatusCode StatusCode { get; } Property Value HttpStatusCode Stream 获取响应的流。 public readonly Stream Stream { get; } Property Value Stream"
  },
  "api/HeyBox.Net.Rest.html": {
    "href": "api/HeyBox.Net.Rest.html",
    "title": "Namespace HeyBox.Net.Rest | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Net.Rest Classes DefaultRestClientProvider 表示一个默认的 RestClientProvider，用于创建 IRestClient 的默认实现的实例。 Structs RestResponse 表示一个 RESTful API 请求的响应。 Interfaces IRestClient 表示一个通用的基于 RESTful API 的客户端。 Delegates RestClientProvider 表示一个用于创建 IRestClient 实例的委托。"
  },
  "api/HeyBox.Net.WebSocketClosedException.html": {
    "href": "api/HeyBox.Net.WebSocketClosedException.html",
    "title": "Class WebSocketClosedException | HeyBox.Net 文档",
    "keywords": "Class WebSocketClosedException Namespace HeyBox.Net Assembly HeyBox.Net.Core.dll 表示一个由 HeyBox 意外关闭 WebSocket 会话时引发的异常。 public class WebSocketClosedException : Exception, ISerializable Inheritance object Exception WebSocketClosedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WebSocketClosedException(int?, string?) 使用 HeyBox 发送的关闭代码及原因初始化一个 WebSocketClosedException 类的新实例。 public WebSocketClosedException(int? closeCode, string? reason = null) Parameters closeCode int? 由 HeyBox 发送的关闭代码。 reason string 中断的原因。 Properties CloseCode 获取由 HeyBox 发送的关闭代码。 public int? CloseCode { get; } Property Value int? Reason 获取中断的原因。 public string? Reason { get; } Property Value string"
  },
  "api/HeyBox.Net.WebSockets.DefaultWebSocketProvider.html": {
    "href": "api/HeyBox.Net.WebSockets.DefaultWebSocketProvider.html",
    "title": "Class DefaultWebSocketProvider | HeyBox.Net 文档",
    "keywords": "Class DefaultWebSocketProvider Namespace HeyBox.Net.WebSockets Assembly HeyBox.Net.WebSocket.dll 表示一个默认的 WebSocketProvider，用于创建 IWebSocketClient 的默认实现的实例。 public static class DefaultWebSocketProvider Inheritance object DefaultWebSocketProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance 获取一个默认的 WebSocketProvider 委托，用于创建 IWebSocketClient 的默认实现的实例。 public static readonly WebSocketProvider Instance Field Value WebSocketProvider Methods Create(IWebProxy?) 创建一个新的 WebSocketProvider 委托。 public static WebSocketProvider Create(IWebProxy? useProxy = null) Parameters useProxy IWebProxy 是否使用系统代理。 Returns WebSocketProvider 一个新的 WebSocketProvider 委托。"
  },
  "api/HeyBox.Net.WebSockets.IWebSocketClient.html": {
    "href": "api/HeyBox.Net.WebSockets.IWebSocketClient.html",
    "title": "Interface IWebSocketClient | HeyBox.Net 文档",
    "keywords": "Interface IWebSocketClient Namespace HeyBox.Net.WebSockets Assembly HeyBox.Net.Core.dll 表示一个通用的 WebSocket 客户端。 public interface IWebSocketClient : IDisposable Inherited Members IDisposable.Dispose() Methods ConnectAsync(string) 连接到指定的主机。 Task ConnectAsync(string host) Parameters host string 要连接的主机。 Returns Task 一个表示异步连接操作的任务。 DisconnectAsync(int) 断开与主机的连接。 Task DisconnectAsync(int closeCode = 1000) Parameters closeCode int 要发送给对方主机的关闭代码。 Returns Task 一个表示异步断开操作的任务。 SendAsync(byte[], int, int, bool) 向对方主机发送文本消息。 Task SendAsync(byte[] data, int index, int count, bool isText) Parameters data byte[] 要发送的数据。 index int 要发送的数据的起始位置。 count int 要发送的数据的长度。 isText bool 发送的是否为文本消息。 Returns Task 一个表示异步发送操作的任务。 SetCancellationToken(CancellationToken) 设置此客户端的取消令牌。 void SetCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken 用于取消任务的取消令牌。 SetHeader(string, string) 设置一个将与未来请求一起发送的标头。 void SetHeader(string key, string value) Parameters key string 标头的键。 value string 标头的值。 SetKeepAliveInterval(TimeSpan) 设置此客户端的保持活动间隔。 void SetKeepAliveInterval(TimeSpan keepAliveInterval) Parameters keepAliveInterval TimeSpan 保持活动间隔。 Remarks 如果未调用此方法，则默认的保持活动间隔是 DefaultKeepAliveInterval。 See Also KeepAliveInterval Events BinaryMessage 当接收到二进制消息时触发。 event Func<byte[], int, int, Task>? BinaryMessage Event Type Func<byte[], int, int, Task> Remarks 事件参数： byte[] 参数是接收到的二进制消息的字节数组。 int 参数是接收到的二进制消息的字节数组的起始位置。 int 参数是接收到的二进制消息的字节数组的长度。 Closed 当 WebSocket 连接关闭时触发。 event Func<Exception, Task>? Closed Event Type Func<Exception, Task> Remarks 事件参数： Exception 参数是导致连接关闭的异常。 TextMessage 当接收到文本消息时触发。 event Func<string, Task>? TextMessage Event Type Func<string, Task> Remarks 事件参数： string 参数是接收到的文本消息的字符串。"
  },
  "api/HeyBox.Net.WebSockets.WebSocketProvider.html": {
    "href": "api/HeyBox.Net.WebSockets.WebSocketProvider.html",
    "title": "Delegate WebSocketProvider | HeyBox.Net 文档",
    "keywords": "Delegate WebSocketProvider Namespace HeyBox.Net.WebSockets Assembly HeyBox.Net.Core.dll 表示一个用于创建 IWebSocketClient 实例的委托。 public delegate IWebSocketClient WebSocketProvider() Returns IWebSocketClient 表示一个用于创建 实例的委托。"
  },
  "api/HeyBox.Net.WebSockets.html": {
    "href": "api/HeyBox.Net.WebSockets.html",
    "title": "Namespace HeyBox.Net.WebSockets | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Net.WebSockets Classes DefaultWebSocketProvider 表示一个默认的 WebSocketProvider，用于创建 IWebSocketClient 的默认实现的实例。 Interfaces IWebSocketClient 表示一个通用的 WebSocket 客户端。 Delegates WebSocketProvider 表示一个用于创建 IWebSocketClient 实例的委托。"
  },
  "api/HeyBox.Net.html": {
    "href": "api/HeyBox.Net.html",
    "title": "Namespace HeyBox.Net | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Net Classes BucketId 表示一个限速桶。 HttpException 当处理 HeyBox HTTP 请求时发生错误时引发的异常。 RateLimitedException 表示一个由 HeyBox 限制请求频率时引发的异常。 WebSocketClosedException 表示一个由 HeyBox 意外关闭 WebSocket 会话时引发的异常。 Structs RateLimitInfo 表示一个基于 REST 的速率限制信息。 Interfaces IRequest 表示一个要发送到 HeyBox 的通用的请求。"
  },
  "api/HeyBox.RequestOptions.html": {
    "href": "api/HeyBox.RequestOptions.html",
    "title": "Class RequestOptions | HeyBox.Net 文档",
    "keywords": "Class RequestOptions Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示发送请求时要使用的选项。 public class RequestOptions Inheritance object RequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RequestOptions() 使用默认设置创建一个新的 RequestOptions 类的实例。 public RequestOptions() Remarks 默认的请求超时时间是 DefaultRequestTimeout。 Properties AuditLogReason 获取或设置要写入到房间的审计日志中的操作原因。 public string? AuditLogReason { get; set; } Property Value string Remarks 默认的 API 客户端不支持设置此属性。 CancellationToken 获取或设置此请求的取消令牌。 public CancellationToken CancellationToken { get; set; } Property Value CancellationToken Default 使用默认设置创建一个新的 RequestOptions 类的实例。 public static RequestOptions Default { get; } Property Value RequestOptions Remarks 默认的请求超时时间是 DefaultRequestTimeout。 RatelimitCallback 获取或设置此请求触发速率限制时要执行的回调委托。 public Func<IRateLimitInfo, Task>? RatelimitCallback { get; set; } Property Value Func<IRateLimitInfo, Task> See Also DefaultRatelimitCallback RetryMode 获取或设置请求失败时的重试行为；如果为 null，则使用配置的默认的重试行为。 public RetryMode? RetryMode { get; set; } Property Value RetryMode? See Also DefaultRetryMode Timeout 获取或设置等待此请求完成的最大时间，以毫秒为单位。 public int? Timeout { get; set; } Property Value int? Remarks 获取或设置等待此请求完成的最大时间，以毫秒为单位。如果为 null，则请求不会超时。 如果此请求的桶触发了速率限制并且在超时前不会恢复，此请求将立即失败。 Methods Clone() Creates a shallow copy of the current object. public RequestOptions Clone() Returns RequestOptions A shallow copy of the current object."
  },
  "api/HeyBox.Rest.BaseHeyBoxClient.html": {
    "href": "api/HeyBox.Rest.BaseHeyBoxClient.html",
    "title": "Class BaseHeyBoxClient | HeyBox.Net 文档",
    "keywords": "Class BaseHeyBoxClient Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个可以连接到 HeyBox API 的通用的 HeyBox Bot 客户端。 public abstract class BaseHeyBoxClient : IHeyBoxClient, IDisposable Inheritance object BaseHeyBoxClient Implements IHeyBoxClient IDisposable Derived HeyBoxRestClient BaseSocketClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConnectionState 获取当前连接的状态。 public virtual ConnectionState ConnectionState { get; } Property Value ConnectionState CurrentUser 获取登录到此客户端的当前用户；如果未登录，则为 null。 public ISelfUser? CurrentUser { get; protected set; } Property Value ISelfUser LoginState 获取此客户端的登录状态。 public LoginState LoginState { get; protected set; } Property Value LoginState TokenType 获取已登录用户的令牌类型。 public TokenType TokenType { get; } Property Value TokenType Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() LoginAsync(TokenType, string, bool) 登录到黑盒语音 API。 public Task LoginAsync(TokenType tokenType, string token, bool validateToken = true) Parameters tokenType TokenType 要使用的令牌类型。 token string 要使用的令牌。 validateToken bool 是否验证令牌。 Returns Task 一个表示异步登录操作的任务。 Remarks 验证令牌的操作是通过 ValidateToken(TokenType, string) 方法完成的。 此方法用于向当前客户端设置后续 API 请求的身份验证信息，获取并设置当前所登录用户的信息。 LogoutAsync() 从黑盒语音 API 退出登录。 public Task LogoutAsync() Returns Task 一个表示异步退出登录操作的任务。 Remarks 此方法用于清除当前客户端的身份验证信息及所缓存的当前所登录的用户信息。 Events Log 当生成一条日志消息时引发。 public event Func<LogMessage, Task> Log Event Type Func<LogMessage, Task> Remarks 事件参数： LogMessage 参数是描述日志消息的结构。 LoggedIn 当客户端登录成功时引发。 public event Func<Task> LoggedIn Event Type Func<Task> LoggedOut 当客户端退出登录时引发。 public event Func<Task> LoggedOut Event Type Func<Task> SentRequest 当向 API 发送 REST 请求时引发。 public event Func<HttpMethod, string, double, Task> SentRequest Event Type Func<HttpMethod, string, double, Task> Remarks 事件参数： HttpMethod 参数是 HTTP 方法。 string 参数是终结点。 double 参数是完成请求所花费的时间，以毫秒为单位。"
  },
  "api/HeyBox.Rest.HeyBoxRestClient.html": {
    "href": "api/HeyBox.Rest.HeyBoxRestClient.html",
    "title": "Class HeyBoxRestClient | HeyBox.Net 文档",
    "keywords": "Class HeyBoxRestClient Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的 HeyBox 客户端。 public class HeyBoxRestClient : BaseHeyBoxClient, IHeyBoxClient, IDisposable Inheritance object BaseHeyBoxClient HeyBoxRestClient Implements IHeyBoxClient IDisposable Derived HeyBoxSocketRestClient Inherited Members BaseHeyBoxClient.Log BaseHeyBoxClient.LoggedIn BaseHeyBoxClient.LoggedOut BaseHeyBoxClient.SentRequest BaseHeyBoxClient.LoginState BaseHeyBoxClient.TokenType BaseHeyBoxClient.Dispose() BaseHeyBoxClient.LoginAsync(TokenType, string, bool) BaseHeyBoxClient.LogoutAsync() BaseHeyBoxClient.ConnectionState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HeyBoxRestClient() 使用默认配置初始化一个 HeyBoxRestClient 类的新实例。 public HeyBoxRestClient() HeyBoxRestClient(HeyBoxRestConfig) 使用指定的配置初始化一个 HeyBoxRestClient 类的新实例。 public HeyBoxRestClient(HeyBoxRestConfig config) Parameters config HeyBoxRestConfig 用于初始化客户端的配置。 Properties CurrentUser 获取登录到此客户端的当前用户；如果未登录，则为 null。 public RestSelfUser? CurrentUser { get; } Property Value RestSelfUser Methods GetRoomAsync(ulong, RequestOptions?) 获取一个房间。 public Task<RestRoom> GetRoomAsync(ulong id, RequestOptions? options = null) Parameters id ulong 房间的 ID。 options RequestOptions 发送请求时要使用的选项。 Returns Task<RestRoom> 一个表示异步获取操作的任务。任务的结果是具有指定 ID 的房间；若指定 ID 的房间不存在，则为 null。"
  },
  "api/HeyBox.Rest.HeyBoxRestConfig.html": {
    "href": "api/HeyBox.Rest.HeyBoxRestConfig.html",
    "title": "Class HeyBoxRestConfig | HeyBox.Net 文档",
    "keywords": "Class HeyBoxRestConfig Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 定义 HeyBox.Net 有关 REST 各种行为的配置类。 public class HeyBoxRestConfig : HeyBoxConfig Inheritance object HeyBoxConfig HeyBoxRestConfig Derived HeyBoxSocketConfig Inherited Members HeyBoxConfig.APIVersion HeyBoxConfig.Version HeyBoxConfig.UserAgent HeyBoxConfig.APIUrl HeyBoxConfig.CreateAssetAPIUrl HeyBoxConfig.ChatVersion HeyBoxConfig.CommonQueryParameters HeyBoxConfig.CommonQueryString HeyBoxConfig.DefaultRequestTimeout HeyBoxConfig.DefaultRetryMode HeyBoxConfig.DefaultRatelimitCallback HeyBoxConfig.LogLevel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks 此配置基于 HeyBoxConfig，在基础配置的基础上，定义了有关 REST 的配置。 Properties RestClientProvider 获取或设置要用于创建 REST 客户端的 RestClientProvider 委托。 public RestClientProvider RestClientProvider { get; set; } Property Value RestClientProvider"
  },
  "api/HeyBox.Rest.IRestMessageChannel.html": {
    "href": "api/HeyBox.Rest.IRestMessageChannel.html",
    "title": "Interface IRestMessageChannel | HeyBox.Net 文档",
    "keywords": "Interface IRestMessageChannel Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的通用的消息频道，可以用来发送和接收消息。 public interface IRestMessageChannel : IMessageChannel, IChannel, IEntity<ulong> Inherited Members IMessageChannel.SendFileAsync(string, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(FileAttachment, IMessageReference, RequestOptions) IMessageChannel.SendTextAsync(string, IEnumerable<FileAttachment>, IMessageReference, RequestOptions) IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.Rest.RestChannel.html": {
    "href": "api/HeyBox.Rest.RestChannel.html",
    "title": "Class RestChannel | HeyBox.Net 文档",
    "keywords": "Class RestChannel Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的频道。 public class RestChannel : RestEntity<ulong>, IChannel, IEntity<ulong> Inheritance object RestEntity<ulong> RestChannel Implements IChannel IEntity<ulong> Derived RestRoomChannel Inherited Members RestEntity<ulong>.Id RestEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.Rest.RestEntity-1.html": {
    "href": "api/HeyBox.Rest.RestEntity-1.html",
    "title": "Class RestEntity<TId> | HeyBox.Net 文档",
    "keywords": "Class RestEntity<TId> Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的具有唯一标识符的实体。 public abstract class RestEntity<TId> : IEntity<TId> where TId : IEquatable<TId> Type Parameters TId 唯一标识符的类型。 Inheritance object RestEntity<TId> Implements IEntity<TId> Derived RestChannel RestRole RestRoom RestUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id 获取此实体的唯一标识符。 public TId Id { get; } Property Value TId IsPopulated 获取此实体是否填充了真实数据。 public bool IsPopulated { get; } Property Value bool Remarks 由于黑盒语音的 Bot 能力仍处于初步阶段，HeyBox.Net 无法从网关或 API 获取所有必要数据。当此实体的数据来源于网关或 API 时，此属性值为 true。当 HeyBox.Net 需要创建实体但无法从网关或 API 获取数据时，HeyBox.Net 会创建一个仅包含 ID 的实体，此时，此属性值为 false。"
  },
  "api/HeyBox.Rest.RestRole.html": {
    "href": "api/HeyBox.Rest.RestRole.html",
    "title": "Class RestRole | HeyBox.Net 文档",
    "keywords": "Class RestRole Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的身份组。 public class RestRole : RestEntity<ulong>, IRole, IEntity<ulong>, IMentionable Inheritance object RestEntity<ulong> RestRole Implements IRole IEntity<ulong> IMentionable Inherited Members RestEntity<ulong>.Id RestEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsEveryone 获取此角色是否为 @全体成员 全体成员角色。 public bool IsEveryone { get; } Property Value bool Mention 获取一个用于提及此对象的格式化字符串。 public string Mention { get; } Property Value string Room 获取拥有此角色的房间。 public IRoom Room { get; } Property Value IRoom"
  },
  "api/HeyBox.Rest.RestRoom.html": {
    "href": "api/HeyBox.Rest.RestRoom.html",
    "title": "Class RestRoom | HeyBox.Net 文档",
    "keywords": "Class RestRoom Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的房间。 public class RestRoom : RestEntity<ulong>, IRoom, IEntity<ulong> Inheritance object RestEntity<ulong> RestRoom Implements IRoom IEntity<ulong> Inherited Members RestEntity<ulong>.Id RestEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EveryoneRole 获取此房间中的 @全体成员 全体成员角色。 public RestRole EveryoneRole { get; } Property Value RestRole Methods GetTextChannelAsync(ulong, RequestOptions?) 获取此房间内指定具有文字聊天能力的频道。 public Task<RestTextChannel> GetTextChannelAsync(ulong id, RequestOptions? options = null) Parameters id ulong 要获取的频道的 ID。 options RequestOptions 发送请求时要使用的选项。 Returns Task<RestTextChannel> 一个表示异步获取操作的任务。任务的结果包含与指定的 id 关联的频道；如果未找到，则返回 null。 Remarks 语音频道也是一种文字频道，此方法本意用于获取具有文字聊天能力的频道。如果通过此方法传入的 ID 对应的频道是语音频道，那么也会返回对应的语音频道实体。 如需获取频道的实际类型，请参考 GetChannelType(IChannel)。"
  },
  "api/HeyBox.Rest.RestRoomChannel.html": {
    "href": "api/HeyBox.Rest.RestRoomChannel.html",
    "title": "Class RestRoomChannel | HeyBox.Net 文档",
    "keywords": "Class RestRoomChannel Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的房间频道。 public class RestRoomChannel : RestChannel, IRoomChannel, IChannel, IEntity<ulong> Inheritance object RestEntity<ulong> RestChannel RestRoomChannel Implements IRoomChannel IChannel IEntity<ulong> Derived RestTextChannel Inherited Members RestEntity<ulong>.Id RestEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Room 获取此频道所属的房间。 public IRoom Room { get; } Property Value IRoom RoomId 获取此频道所属的房间的 ID。 public ulong RoomId { get; } Property Value ulong Type 获取此频道的类型。 public ChannelType Type { get; } Property Value ChannelType"
  },
  "api/HeyBox.Rest.RestSelfUser.html": {
    "href": "api/HeyBox.Rest.RestSelfUser.html",
    "title": "Class RestSelfUser | HeyBox.Net 文档",
    "keywords": "Class RestSelfUser Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的当前登录的用户信息。 public class RestSelfUser : RestUser, ISelfUser, IUser, IEntity<uint>, IMentionable Inheritance object RestEntity<uint> RestUser RestSelfUser Implements ISelfUser IUser IEntity<uint> IMentionable Inherited Members RestEntity<uint>.Id RestEntity<uint>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/HeyBox.Rest.RestTextChannel.html": {
    "href": "api/HeyBox.Rest.RestTextChannel.html",
    "title": "Class RestTextChannel | HeyBox.Net 文档",
    "keywords": "Class RestTextChannel Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示房间中一个基于 REST 的具有文字聊天能力的频道，可以发送和接收消息。 public class RestTextChannel : RestRoomChannel, IRestMessageChannel, ITextChannel, INestedChannel, IRoomChannel, IMentionable, IMessageChannel, IChannel, IEntity<ulong> Inheritance object RestEntity<ulong> RestChannel RestRoomChannel RestTextChannel Implements IRestMessageChannel ITextChannel INestedChannel IRoomChannel IMentionable IMessageChannel IChannel IEntity<ulong> Inherited Members RestRoomChannel.Room RestRoomChannel.RoomId RestRoomChannel.Type RestEntity<ulong>.Id RestEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Mention 获取一个用于提及此对象的格式化字符串。 public string Mention { get; } Property Value string Methods SendFileAsync(FileAttachment, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(FileAttachment attachment, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters attachment FileAttachment 文件的附件信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(Stream stream, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters stream Stream 文件的流。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(string, string?, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(string path, string? filename = null, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters path string 文件的路径。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendTextAsync(string, IEnumerable<FileAttachment>?, IMessageReference?, RequestOptions?) 发送文本消息到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendTextAsync(string text, IEnumerable<FileAttachment>? imageFileInfos = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters text string 要发送的文本。 imageFileInfos IEnumerable<FileAttachment> 图片文件的信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。"
  },
  "api/HeyBox.Rest.RestUser.html": {
    "href": "api/HeyBox.Rest.RestUser.html",
    "title": "Class RestUser | HeyBox.Net 文档",
    "keywords": "Class RestUser Namespace HeyBox.Rest Assembly HeyBox.Net.Rest.dll 表示一个基于 REST 的用户。 public class RestUser : RestEntity<uint>, IUser, IEntity<uint>, IMentionable Inheritance object RestEntity<uint> RestUser Implements IUser IEntity<uint> IMentionable Derived RestSelfUser Inherited Members RestEntity<uint>.Id RestEntity<uint>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/HeyBox.Rest.html": {
    "href": "api/HeyBox.Rest.html",
    "title": "Namespace HeyBox.Rest | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.Rest Classes BaseHeyBoxClient 表示一个可以连接到 HeyBox API 的通用的 HeyBox Bot 客户端。 HeyBoxRestClient 表示一个基于 REST 的 HeyBox 客户端。 HeyBoxRestConfig 定义 HeyBox.Net 有关 REST 各种行为的配置类。 RestChannel 表示一个基于 REST 的频道。 RestEntity<TId> 表示一个基于 REST 的具有唯一标识符的实体。 RestRole 表示一个基于 REST 的身份组。 RestRoom 表示一个基于 REST 的房间。 RestRoomChannel 表示一个基于 REST 的房间频道。 RestSelfUser 表示一个基于 REST 的当前登录的用户信息。 RestTextChannel 表示房间中一个基于 REST 的具有文字聊天能力的频道，可以发送和接收消息。 RestUser 表示一个基于 REST 的用户。 Interfaces IRestMessageChannel 表示一个基于 REST 的通用的消息频道，可以用来发送和接收消息。"
  },
  "api/HeyBox.RetryMode.html": {
    "href": "api/HeyBox.RetryMode.html",
    "title": "Enum RetryMode | HeyBox.Net 文档",
    "keywords": "Enum RetryMode Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示请求在发生错误时应如何处理。 [Flags] public enum RetryMode Fields AlwaysFail = 0 如果请求失败，将立即引发异常。 AlwaysRetry = RetryTimeouts | RetryRatelimit | Retry502 总是重试失败的请求，直到超时、取消令牌被触发或服务器响应非 502 错误。 Retry502 = 8 如果请求因 HTTP 状态码 502 而失败，则重试。 RetryRatelimit = 4 如果请求因速率限制而失败，则重试。 RetryTimeouts = 1 如果请求超时，则重试。"
  },
  "api/HeyBox.SlashCommandOptionChoiceProperties.html": {
    "href": "api/HeyBox.SlashCommandOptionChoiceProperties.html",
    "title": "Class SlashCommandOptionChoiceProperties | HeyBox.Net 文档",
    "keywords": "Class SlashCommandOptionChoiceProperties Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents a choice for a ISlashCommandInteractionDataOption. This class is used when making new commands. public class SlashCommandOptionChoiceProperties Inheritance object SlashCommandOptionChoiceProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name Gets or sets the name of this choice. public string? Name { get; set; } Property Value string Value Gets the value of this choice. public object? Value { get; set; } Property Value object"
  },
  "api/HeyBox.SlashCommandOptionProperties.html": {
    "href": "api/HeyBox.SlashCommandOptionProperties.html",
    "title": "Class SlashCommandOptionProperties | HeyBox.Net 文档",
    "keywords": "Class SlashCommandOptionProperties Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents a slash commands option for making slash commands. public class SlashCommandOptionProperties Inheritance object SlashCommandOptionProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChannelTypes Gets or sets the allowed channel types for this option. public List<ChannelType> ChannelTypes { get; set; } Property Value List<ChannelType> Choices Gets or sets the choices for string and int types for the user to pick from. public List<SlashCommandOptionChoiceProperties> Choices { get; set; } Property Value List<SlashCommandOptionChoiceProperties> Description Gets or sets the description of this option. public string Description { get; set; } Property Value string IsDefault Gets or sets whether or not this options is the first required option for the user to complete. only one option can be default. public bool? IsDefault { get; set; } Property Value bool? IsRequired Gets or sets if the option is required. public bool? IsRequired { get; set; } Property Value bool? MaxLength Gets or sets the maximum allowed length for a string input. public int? MaxLength { get; set; } Property Value int? MaxValue Gets or sets the largest number value the user can input. public double? MaxValue { get; set; } Property Value double? MinLength Gets or sets the minimum allowed length for a string input. public int? MinLength { get; set; } Property Value int? MinValue Gets or sets the smallest number value the user can input. public double? MinValue { get; set; } Property Value double? Name Gets or sets the name of this option. public string Name { get; set; } Property Value string Options Gets or sets if this option is a subcommand or subcommand group type, these nested options will be the parameters. public List<SlashCommandOptionProperties> Options { get; set; } Property Value List<SlashCommandOptionProperties> Type Gets or sets the type of this option. public SlashCommandOptionType Type { get; set; } Property Value SlashCommandOptionType"
  },
  "api/HeyBox.SlashCommandOptionType.html": {
    "href": "api/HeyBox.SlashCommandOptionType.html",
    "title": "Enum SlashCommandOptionType | HeyBox.Net 文档",
    "keywords": "Enum SlashCommandOptionType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示一个斜线命令选项的类型。 public enum SlashCommandOptionType Fields Boolean = 5 布尔值。 Channel = 7 IChannel。 Integer = 4 整数。 Role = 8 IRole。 Selection = 9 选择项。 String = 3 字符串。 User = 6 IUser。"
  },
  "api/HeyBox.SlashCommandProperties.html": {
    "href": "api/HeyBox.SlashCommandProperties.html",
    "title": "Class SlashCommandProperties | HeyBox.Net 文档",
    "keywords": "Class SlashCommandProperties Namespace HeyBox Assembly HeyBox.Net.Core.dll Represents the base class to create/modify application commands. public class SlashCommandProperties Inheritance object SlashCommandProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContextTypes Gets or sets context types this command can be executed in. public HashSet<InteractionContextType>? ContextTypes { get; set; } Property Value HashSet<InteractionContextType> Description Gets or sets the description of this command. public string? Description { get; set; } Property Value string Name Gets or sets the name of this command. public string? Name { get; set; } Property Value string Options Gets or sets the options for this command. public List<SlashCommandOptionProperties>? Options { get; set; } Property Value List<SlashCommandOptionProperties>"
  },
  "api/HeyBox.Tag-2.html": {
    "href": "api/HeyBox.Tag-2.html",
    "title": "Class Tag<TKey, TValue> | HeyBox.Net 文档",
    "keywords": "Class Tag<TKey, TValue> Namespace HeyBox Assembly HeyBox.Net.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class Tag<TKey, TValue> : ITag where TKey : IEquatable<TKey> where TValue : IEntity<TKey> Type Parameters TKey TValue Inheritance object Tag<TKey, TValue> Implements ITag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Index 获取消息中标签的位置。 public int Index { get; } Property Value int Key 获取标签的键。 public TKey Key { get; } Property Value TKey Length 获取标签的长度。 public int Length { get; } Property Value int Type 获取标签的类型。 public TagType Type { get; } Property Value TagType Value 获取标签的键。 public TValue? Value { get; } Property Value TValue Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/HeyBox.TagHandling.html": {
    "href": "api/HeyBox.TagHandling.html",
    "title": "Enum TagHandling | HeyBox.Net 文档",
    "keywords": "Enum TagHandling Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示在转换标签时应进行的操作类型。 public enum TagHandling Fields FullName = 4 转换为名称，包含提及前缀。如果提及标签为用户提及，则还会包含用户的识别号。 FullNameNoPrefix = 5 转换为名称，但不包含提及前缀。如果提及标签为用户提及，则还会包含用户的识别号。 Ignore = 0 不进行任何处理。 Name = 2 转换为名称，包含提及前缀。 NameNoPrefix = 3 转换为名称，但不包含提及前缀。 Remove = 1 移除标签。 Sanitize = 6 使用 U+200B 零宽空格字符转义标签。 See Also Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)"
  },
  "api/HeyBox.TagType.html": {
    "href": "api/HeyBox.TagType.html",
    "title": "Enum TagType | HeyBox.Net 文档",
    "keywords": "Enum TagType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示标签的类型。 public enum TagType Fields ChannelMention = 1 频道提及标签。 Emoji = 5 表情符号标签。 EveryoneMention = 3 全体成员提及标签。 HereMention = 4 在线成员提及标签。 RoleMention = 2 角色提及标签。 UserMention = 0 用户提及标签。"
  },
  "api/HeyBox.TokenType.html": {
    "href": "api/HeyBox.TokenType.html",
    "title": "Enum TokenType | HeyBox.Net 文档",
    "keywords": "Enum TokenType Namespace HeyBox Assembly HeyBox.Net.Core.dll 表示客户端所使用的令牌类型。 public enum TokenType Fields BotToken = 0 机器人令牌。"
  },
  "api/HeyBox.TokenUtils.html": {
    "href": "api/HeyBox.TokenUtils.html",
    "title": "Class TokenUtils | HeyBox.Net 文档",
    "keywords": "Class TokenUtils Namespace HeyBox Assembly HeyBox.Net.Core.dll 提供一组用于处理黑盒语音登录令牌的辅助方法。 public static class TokenUtils Inheritance object TokenUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateToken(TokenType, string) 检查指定类型的令牌的有效性。 public static void ValidateToken(TokenType tokenType, string token) Parameters tokenType TokenType 令牌的类型。 token string 要校验的令牌。 Exceptions ArgumentNullException 当提供的令牌值为 null、空字符串或仅包含空白字符时引发异常。 ArgumentException 当提供的令牌类型或令牌值无效时引发异常。"
  },
  "api/HeyBox.WebSocket.BaseSocketClient.html": {
    "href": "api/HeyBox.WebSocket.BaseSocketClient.html",
    "title": "Class BaseSocketClient | HeyBox.Net 文档",
    "keywords": "Class BaseSocketClient Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的客户端的抽象基类。 public abstract class BaseSocketClient : BaseHeyBoxClient, IHeyBoxClient, IDisposable Inheritance object BaseHeyBoxClient BaseSocketClient Implements IHeyBoxClient IDisposable Derived HeyBoxSocketClient Inherited Members BaseHeyBoxClient.Log BaseHeyBoxClient.LoggedIn BaseHeyBoxClient.LoggedOut BaseHeyBoxClient.SentRequest BaseHeyBoxClient.LoginState BaseHeyBoxClient.TokenType BaseHeyBoxClient.Dispose() BaseHeyBoxClient.LoginAsync(TokenType, string, bool) BaseHeyBoxClient.LogoutAsync() BaseHeyBoxClient.ConnectionState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseConfig 获取此客户端使用的配置。 protected readonly HeyBoxSocketConfig BaseConfig Field Value HeyBoxSocketConfig Properties CurrentUser 获取登录到此客户端的当前用户；如果未登录，则为 null。 public virtual SocketSelfUser? CurrentUser { get; protected set; } Property Value SocketSelfUser Latency 获取到网关服务器的往返延迟估计值（以毫秒为单位）。 public abstract int Latency { get; protected set; } Property Value int Remarks 此往返估计值源于心跳包的延迟，不代表诸如发送消息等操作的真实延迟。 Rest 获取一个与此客户端共享状态的仅限于 REST 的客户端。 public abstract HeyBoxSocketRestClient Rest { get; } Property Value HeyBoxSocketRestClient Methods GetChannel(ulong) 获取一个服务器频道。 public abstract SocketChannel? GetChannel(ulong id) Parameters id ulong 要获取的频道的 ID。 Returns SocketChannel 与指定的 id 关联的频道；如果未找到，则返回 null。 GetRoom(ulong) 获取一个房间。 public abstract SocketRoom GetRoom(ulong id) Parameters id ulong 要获取的房间的 ID。 Returns SocketRoom 与指定的 id 关联的实体；如果缓存中不存在指定的房间，则返回一个用于后续调用但不包含其他有效信息的房间实体。 GetUser(uint) 获取用户。 public abstract SocketUser? GetUser(uint id) Parameters id uint 要获取的用户的 ID。 Returns SocketUser 与指定的 id 关联的用户；如果未找到，则返回 null。 Remarks 此方法可能返回 null，因为此方法仅会返回网关缓存中存在的用户，如果在当前 Bot 登录会话中，要获取的用户未引发过任何事件，那么该用户实体则不会存在于缓存中。 StartAsync() 启动客户端与黑盒语音之间的连接。 public abstract Task StartAsync() Returns Task 一个表示异步启动操作的任务。 Remarks 当前方法会初始化客户端与黑盒语音之间的连接。 important 此方法会在调用后立即返回，因为它会在另一个线程上初始化连接。 StopAsync() 停止客户端与黑盒语音之间的连接。 public abstract Task StopAsync() Returns Task 一个表示异步停止操作的任务。"
  },
  "api/HeyBox.WebSocket.GatewayReconnectException.html": {
    "href": "api/HeyBox.WebSocket.GatewayReconnectException.html",
    "title": "Class GatewayReconnectException | HeyBox.Net 文档",
    "keywords": "Class GatewayReconnectException Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 当网关客户端被请求重新连接时引发的异常。 public class GatewayReconnectException : Exception, ISerializable Inheritance object Exception GatewayReconnectException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GatewayReconnectException(string) 初始化一个带有重新连接消息的 GatewayReconnectException 类的新实例。 public GatewayReconnectException(string message) Parameters message string 包含要求客户端重新连接原因的消息。"
  },
  "api/HeyBox.WebSocket.HeyBoxSocketClient.html": {
    "href": "api/HeyBox.WebSocket.HeyBoxSocketClient.html",
    "title": "Class HeyBoxSocketClient | HeyBox.Net 文档",
    "keywords": "Class HeyBoxSocketClient Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的 HeyBox 客户端。 public class HeyBoxSocketClient : BaseSocketClient, IHeyBoxClient, IDisposable Inheritance object BaseHeyBoxClient BaseSocketClient HeyBoxSocketClient Implements IHeyBoxClient IDisposable Inherited Members BaseSocketClient.BaseConfig BaseSocketClient.CurrentUser BaseHeyBoxClient.Log BaseHeyBoxClient.LoggedIn BaseHeyBoxClient.LoggedOut BaseHeyBoxClient.SentRequest BaseHeyBoxClient.LoginState BaseHeyBoxClient.TokenType BaseHeyBoxClient.Dispose() BaseHeyBoxClient.LoginAsync(TokenType, string, bool) BaseHeyBoxClient.LogoutAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HeyBoxSocketClient() 初始化一个 HeyBoxSocketClient 类的新实例。 public HeyBoxSocketClient() HeyBoxSocketClient(HeyBoxSocketConfig) 初始化一个 HeyBoxSocketClient 类的新实例。 public HeyBoxSocketClient(HeyBoxSocketConfig config) Parameters config HeyBoxSocketConfig 用于配置此客户端的配置对象。 Properties ConnectionState 获取当前连接的状态。 public override ConnectionState ConnectionState { get; } Property Value ConnectionState Latency 获取到网关服务器的往返延迟估计值（以毫秒为单位）。 public override int Latency { get; protected set; } Property Value int Remarks 此往返估计值源于心跳包的延迟，不代表诸如发送消息等操作的真实延迟。 Rest 获取一个与此客户端共享状态的仅限于 REST 的客户端。 public override HeyBoxSocketRestClient Rest { get; } Property Value HeyBoxSocketRestClient Methods GetChannel(ulong) 获取一个服务器频道。 public override SocketChannel? GetChannel(ulong id) Parameters id ulong 要获取的频道的 ID。 Returns SocketChannel 与指定的 id 关联的频道；如果未找到，则返回 null。 GetRoom(ulong) 获取一个房间。 public override SocketRoom GetRoom(ulong id) Parameters id ulong 要获取的房间的 ID。 Returns SocketRoom 与指定的 id 关联的实体；如果缓存中不存在指定的房间，则返回一个用于后续调用但不包含其他有效信息的房间实体。 GetUser(uint) 获取用户。 public override SocketUser? GetUser(uint id) Parameters id uint 要获取的用户的 ID。 Returns SocketUser 与指定的 id 关联的用户；如果未找到，则返回 null。 Remarks 此方法可能返回 null，因为此方法仅会返回网关缓存中存在的用户，如果在当前 Bot 登录会话中，要获取的用户未引发过任何事件，那么该用户实体则不会存在于缓存中。 StartAsync() 启动客户端与黑盒语音之间的连接。 public override Task StartAsync() Returns Task 一个表示异步启动操作的任务。 Remarks 当前方法会初始化客户端与黑盒语音之间的连接。 important 此方法会在调用后立即返回，因为它会在另一个线程上初始化连接。 StopAsync() 停止客户端与黑盒语音之间的连接。 public override Task StopAsync() Returns Task 一个表示异步停止操作的任务。 Events Connected 当连接到黑盒语音网关时引发。 public event Func<Task> Connected Event Type Func<Task> Disconnected 当与黑盒语音网关断开连接时引发。 public event Func<Exception, Task> Disconnected Event Type Func<Exception, Task> InteractionCreated 当交互被创建时引发，此事件涵盖了所有类型的交互。 public event Func<SocketInteraction, Task> InteractionCreated Event Type Func<SocketInteraction, Task> LatencyUpdated 当网关延迟已更新时引发。 public event Func<int, int, Task> LatencyUpdated Event Type Func<int, int, Task> Remarks 事件参数： int 参数是更新前的延迟（毫秒）。 int 参数是更新后的延迟（毫秒）。 Ready 当此 Bot 准备就绪以供用户代码访问时引发。 public event Func<Task> Ready Event Type Func<Task> SlashCommandExecuted 当用户使用斜线命令时引发。 public event Func<SocketSlashCommand, Task> SlashCommandExecuted Event Type Func<SocketSlashCommand, Task>"
  },
  "api/HeyBox.WebSocket.HeyBoxSocketConfig.html": {
    "href": "api/HeyBox.WebSocket.HeyBoxSocketConfig.html",
    "title": "Class HeyBoxSocketConfig | HeyBox.Net 文档",
    "keywords": "Class HeyBoxSocketConfig Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个用于 HeyBoxSocketClient 的配置类。 public class HeyBoxSocketConfig : HeyBoxRestConfig Inheritance object HeyBoxConfig HeyBoxRestConfig HeyBoxSocketConfig Inherited Members HeyBoxRestConfig.RestClientProvider HeyBoxConfig.APIVersion HeyBoxConfig.Version HeyBoxConfig.UserAgent HeyBoxConfig.APIUrl HeyBoxConfig.CreateAssetAPIUrl HeyBoxConfig.ChatVersion HeyBoxConfig.CommonQueryParameters HeyBoxConfig.CommonQueryString HeyBoxConfig.DefaultRequestTimeout HeyBoxConfig.DefaultRetryMode HeyBoxConfig.DefaultRatelimitCallback HeyBoxConfig.LogLevel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Examples 以下代码启用了消息缓存，并配置客户端在房间可用时始终下载用户。 var config = new HeyBoxSocketConfig { AlwaysDownloadUsers = true, MessageCacheSize = 100 }; var client = new HeyBoxSocketClient(config); Remarks 此配置基于 HeyBoxRestConfig，在与 REST 有关的配置的基础上，定义了有关网关的配置。 Constructors HeyBoxSocketConfig() 初始化一个 HeyBoxSocketConfig 类的新实例。 public HeyBoxSocketConfig() Fields DefaultGatewayUrl 获取或设置要连接的网关端口。 public const string DefaultGatewayUrl = \"wss://chat.xiaoheihe.cn/chatroom/ws/connect\" Field Value string GatewayEncoding 获取网关使用的数据格式。 public const string GatewayEncoding = \"json\" Field Value string Properties ConnectionTimeout 获取或设置连接到网关时的超时时间间隔（毫秒）。 public int ConnectionTimeout { get; set; } Property Value int GatewayHost 获取或设置要连接的网关地址。 public string? GatewayHost { get; set; } Property Value string HandlerTimeout 获取或设置阻塞网关线程的事件处理程序的超时时间间隔（毫秒），超过此时间间隔的阻塞网关线程的事件处理程序会被日志记录警告。将此属性设置为 null 将禁用此检查。 public int? HandlerTimeout { get; set; } Property Value int? HeartbeatIntervalMilliseconds 获取网关发送心跳包的时间间隔（毫秒）。 public int HeartbeatIntervalMilliseconds { get; } Property Value int MessageQueueProvider 获取或设置用于创建消息队列的委托。 public MessageQueueProvider MessageQueueProvider { get; set; } Property Value MessageQueueProvider WebSocketProvider 获取或设置用于创建 WebSocket 客户端的委托。 public WebSocketProvider WebSocketProvider { get; set; } Property Value WebSocketProvider"
  },
  "api/HeyBox.WebSocket.HeyBoxSocketRestClient.html": {
    "href": "api/HeyBox.WebSocket.HeyBoxSocketRestClient.html",
    "title": "Class HeyBoxSocketRestClient | HeyBox.Net 文档",
    "keywords": "Class HeyBoxSocketRestClient Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个用于网关客户端内的 REST 客户端。 public class HeyBoxSocketRestClient : HeyBoxRestClient, IHeyBoxClient, IDisposable Inheritance object BaseHeyBoxClient HeyBoxRestClient HeyBoxSocketRestClient Implements IHeyBoxClient IDisposable Inherited Members HeyBoxRestClient.CurrentUser HeyBoxRestClient.GetRoomAsync(ulong, RequestOptions) BaseHeyBoxClient.Log BaseHeyBoxClient.LoggedIn BaseHeyBoxClient.LoggedOut BaseHeyBoxClient.SentRequest BaseHeyBoxClient.LoginState BaseHeyBoxClient.TokenType BaseHeyBoxClient.Dispose() BaseHeyBoxClient.ConnectionState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoginAsync(TokenType, string, bool) 登录到黑盒语音 API。 public Task LoginAsync(TokenType tokenType, string token, bool validateToken = true) Parameters tokenType TokenType 要使用的令牌类型。 token string 要使用的令牌。 validateToken bool 是否验证令牌。 Returns Task 一个表示异步登录操作的任务。 Remarks 验证令牌的操作是通过 ValidateToken(TokenType, string) 方法完成的。 此方法用于向当前客户端设置后续 API 请求的身份验证信息，获取并设置当前所登录用户的信息。 Exceptions NotSupportedException 网关客户端内的 REST 客户端无法进行登录或退出登录。 LogoutAsync() 从黑盒语音 API 退出登录。 public Task LogoutAsync() Returns Task 一个表示异步退出登录操作的任务。 Remarks 此方法用于清除当前客户端的身份验证信息及所缓存的当前所登录的用户信息。 Exceptions NotSupportedException 网关客户端内的 REST 客户端无法进行登录或退出登录。"
  },
  "api/HeyBox.WebSocket.ISocketMessageChannel.html": {
    "href": "api/HeyBox.WebSocket.ISocketMessageChannel.html",
    "title": "Interface ISocketMessageChannel | HeyBox.Net 文档",
    "keywords": "Interface ISocketMessageChannel Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的消息频道，可以用来发送和接收消息。 public interface ISocketMessageChannel : IMessageChannel, IChannel, IEntity<ulong> Inherited Members IMessageChannel.SendFileAsync(string, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference, RequestOptions) IMessageChannel.SendFileAsync(FileAttachment, IMessageReference, RequestOptions) IMessageChannel.SendTextAsync(string, IEnumerable<FileAttachment>, IMessageReference, RequestOptions) IChannel.Name IEntity<ulong>.Id IEntity<ulong>.IsPopulated Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.WebSocket.SocketChannel.html": {
    "href": "api/HeyBox.WebSocket.SocketChannel.html",
    "title": "Class SocketChannel | HeyBox.Net 文档",
    "keywords": "Class SocketChannel Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的频道。 public abstract class SocketChannel : SocketEntity<ulong>, IChannel, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketChannel Implements IChannel IEntity<ulong> Derived SocketRoomChannel Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel)"
  },
  "api/HeyBox.WebSocket.SocketEntity-1.html": {
    "href": "api/HeyBox.WebSocket.SocketEntity-1.html",
    "title": "Class SocketEntity<TId> | HeyBox.Net 文档",
    "keywords": "Class SocketEntity<TId> Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的具有唯一标识符的实体。 public abstract class SocketEntity<TId> : IEntity<TId> where TId : IEquatable<TId> Type Parameters TId 唯一标识符的类型。 Inheritance object SocketEntity<TId> Implements IEntity<TId> Derived SocketChannel SocketInteraction SocketRole SocketRoom SocketSlashCommandData SocketUser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id 获取此实体的唯一标识符。 public TId Id { get; } Property Value TId IsPopulated 获取此实体是否填充了真实数据。 public bool IsPopulated { get; } Property Value bool Remarks 由于黑盒语音的 Bot 能力仍处于初步阶段，HeyBox.Net 无法从网关或 API 获取所有必要数据。当此实体的数据来源于网关或 API 时，此属性值为 true。当 HeyBox.Net 需要创建实体但无法从网关或 API 获取数据时，HeyBox.Net 会创建一个仅包含 ID 的实体，此时，此属性值为 false。"
  },
  "api/HeyBox.WebSocket.SocketInteraction.html": {
    "href": "api/HeyBox.WebSocket.SocketInteraction.html",
    "title": "Class SocketInteraction | HeyBox.Net 文档",
    "keywords": "Class SocketInteraction Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个通过网关接收的交互。 public abstract class SocketInteraction : SocketEntity<ulong>, IHeyBoxInteraction, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketInteraction Implements IHeyBoxInteraction IEntity<ulong> Derived SocketSlashCommand Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Channel 获取执行此交互所在的频道。 public ISocketMessageChannel Channel { get; } Property Value ISocketMessageChannel ChannelId 获取执行此交互所在的频道的 ID。 public ulong ChannelId { get; } Property Value ulong Data 获取此交互的数据。 public IHeyBoxInteractionData Data { get; protected set; } Property Value IHeyBoxInteractionData MessageId 获取此交互来源的消息的 ID。 public ulong MessageId { get; } Property Value ulong RoomId 获取执行此交互所在的房间的 ID。 public ulong? RoomId { get; } Property Value ulong? Type 获取此交互的类型。 public InteractionType Type { get; } Property Value InteractionType User 获取执行此交互的用户。 public SocketUser? User { get; } Property Value SocketUser UserId 获取执行此交互的用户的 ID。 public uint UserId { get; } Property Value uint"
  },
  "api/HeyBox.WebSocket.SocketRole.html": {
    "href": "api/HeyBox.WebSocket.SocketRole.html",
    "title": "Class SocketRole | HeyBox.Net 文档",
    "keywords": "Class SocketRole Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的身份组。 public class SocketRole : SocketEntity<ulong>, IRole, IEntity<ulong>, IMentionable Inheritance object SocketEntity<ulong> SocketRole Implements IRole IEntity<ulong> IMentionable Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsEveryone 获取此角色是否为 @全体成员 全体成员角色。 public bool IsEveryone { get; } Property Value bool Mention 获取一个用于提及此对象的格式化字符串。 public string Mention { get; } Property Value string Room 获取拥有此角色的房间。 public IRoom Room { get; } Property Value IRoom"
  },
  "api/HeyBox.WebSocket.SocketRoom.html": {
    "href": "api/HeyBox.WebSocket.SocketRoom.html",
    "title": "Class SocketRoom | HeyBox.Net 文档",
    "keywords": "Class SocketRoom Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的房间。 public class SocketRoom : SocketEntity<ulong>, IRoom, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketRoom Implements IRoom IEntity<ulong> Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentUser 获取当前登录的用户。 public SocketRoomUser? CurrentUser { get; } Property Value SocketRoomUser DownloadedMemberCount 获取此房间内已缓存的成员数量。 public int DownloadedMemberCount { get; } Property Value int EveryoneRole 获取此房间中的 @全体成员 全体成员角色。 public SocketRole EveryoneRole { get; } Property Value SocketRole Icon 获取此房间图标的 URL。 public string? Icon { get; } Property Value string Name 获取此房间的名称。 public string? Name { get; } Property Value string Users 获取此房间内缓存的所有用户。 public IReadOnlyCollection<SocketRoomUser> Users { get; } Property Value IReadOnlyCollection<SocketRoomUser> Methods GetRole(ulong) 获取此房间内的角色。 public SocketRole? GetRole(ulong id) Parameters id ulong 要获取的角色的 ID。 Returns SocketRole 一个表示异步获取操作的任务。任务的结果包含与指定的 id 关联的角色；如果未找到，则返回 null。 GetTextChannel(ulong) 获取此房间内指定具有文字聊天能力的频道。 public SocketTextChannel GetTextChannel(ulong id) Parameters id ulong 要获取的频道的 ID。 Returns SocketTextChannel 一个表示异步获取操作的任务。任务的结果包含与指定的 id 关联的频道；如果未找到，则返回 null。 Remarks 语音频道也是一种文字频道，此方法本意用于获取具有文字聊天能力的频道。如果通过此方法传入的 ID 对应的频道是语音频道，那么也会返回对应的语音频道实体。 如需获取频道的实际类型，请参考 GetChannelType(IChannel)。 GetUser(ulong) 获取此房间内的用户。 public SocketRoomUser? GetUser(ulong id) Parameters id ulong 要获取的用户的 ID。 Returns SocketRoomUser 与指定的 id 关联的用户；如果未找到，则返回 null。 Remarks 此方法可能返回 null，因为在大型房间中，用户列表的缓存可能不完整。 PurgeUserCache() 清除此房间的用户缓存。 public void PurgeUserCache() PurgeUserCache(Predicate<SocketRoomUser>) 清除此房间的用户缓存。 public void PurgeUserCache(Predicate<SocketRoomUser> predicate) Parameters predicate Predicate<SocketRoomUser> 要清除的用户的筛选条件。"
  },
  "api/HeyBox.WebSocket.SocketRoomChannel.html": {
    "href": "api/HeyBox.WebSocket.SocketRoomChannel.html",
    "title": "Class SocketRoomChannel | HeyBox.Net 文档",
    "keywords": "Class SocketRoomChannel Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的房间频道。 public class SocketRoomChannel : SocketChannel, IRoomChannel, IChannel, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketChannel SocketRoomChannel Implements IRoomChannel IChannel IEntity<ulong> Derived SocketTextChannel Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Name 获取此频道的名称。 public string? Name { get; } Property Value string Room 获取此频道所属的房间。 public SocketRoom Room { get; } Property Value SocketRoom Type 获取此频道的类型。 public ChannelType Type { get; } Property Value ChannelType"
  },
  "api/HeyBox.WebSocket.SocketRoomUser.html": {
    "href": "api/HeyBox.WebSocket.SocketRoomUser.html",
    "title": "Class SocketRoomUser | HeyBox.Net 文档",
    "keywords": "Class SocketRoomUser Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的房间用户。 public class SocketRoomUser : SocketUser, IRoomUser, IUser, IEntity<uint>, IMentionable Inheritance object SocketEntity<uint> SocketUser SocketRoomUser Implements IRoomUser IUser IEntity<uint> IMentionable Inherited Members SocketUser.Mention SocketEntity<uint>.Id SocketEntity<uint>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Avatar 获取此用户的头像图像的 URL。 public override string? Avatar { get; } Property Value string AvatarDecorationType 获取用户头像装饰类型。 public override string? AvatarDecorationType { get; } Property Value string AvatarDecorationUrl 获取此用户的头像装饰图像的 URL。 public override string? AvatarDecorationUrl { get; } Property Value string DisplayName 获取此用户的显示名称。 public string? DisplayName { get; } Property Value string Remarks 如果此用户在该房间内设置了昵称，则此属性返回昵称；否则返回用户名。 IsBot 获取此用户是否为 Bot。 public override bool? IsBot { get; } Property Value bool? Level 获取此用户的等级。 public override int? Level { get; } Property Value int? Nickname 获取此用户在该房间内的昵称。 public string? Nickname { get; } Property Value string Remarks 如果此用户在该房间内没有设置昵称，则此属性返回 null。 Roles 获取此用户在该房间内拥有的所有角色。 public IReadOnlyCollection<SocketRole> Roles { get; } Property Value IReadOnlyCollection<SocketRole> Room 获取此房间用户所属的房间。 public SocketRoom Room { get; } Property Value SocketRoom Username 获取此用户的用户名。 public override string? Username { get; } Property Value string"
  },
  "api/HeyBox.WebSocket.SocketSelfUser.html": {
    "href": "api/HeyBox.WebSocket.SocketSelfUser.html",
    "title": "Class SocketSelfUser | HeyBox.Net 文档",
    "keywords": "Class SocketSelfUser Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的当前登录的用户信息。 public class SocketSelfUser : SocketUser, ISelfUser, IUser, IEntity<uint>, IMentionable Inheritance object SocketEntity<uint> SocketUser SocketSelfUser Implements ISelfUser IUser IEntity<uint> IMentionable Inherited Members SocketUser.Mention SocketEntity<uint>.Id SocketEntity<uint>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Avatar 获取此用户的头像图像的 URL。 public override string? Avatar { get; } Property Value string AvatarDecorationType 获取用户头像装饰类型。 public override string? AvatarDecorationType { get; } Property Value string AvatarDecorationUrl 获取此用户的头像装饰图像的 URL。 public override string? AvatarDecorationUrl { get; } Property Value string IsBot 获取此用户是否为 Bot。 public override bool? IsBot { get; } Property Value bool? Level 获取此用户的等级。 public override int? Level { get; } Property Value int? Username 获取此用户的用户名。 public override string? Username { get; } Property Value string"
  },
  "api/HeyBox.WebSocket.SocketSlashCommand.html": {
    "href": "api/HeyBox.WebSocket.SocketSlashCommand.html",
    "title": "Class SocketSlashCommand | HeyBox.Net 文档",
    "keywords": "Class SocketSlashCommand Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个通过网关接收的斜线命令。 public class SocketSlashCommand : SocketInteraction, ISlashCommandInteraction, IHeyBoxInteraction, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketInteraction SocketSlashCommand Implements ISlashCommandInteraction IHeyBoxInteraction IEntity<ulong> Inherited Members SocketInteraction.Channel SocketInteraction.ChannelId SocketInteraction.UserId SocketInteraction.User SocketInteraction.MessageId SocketInteraction.Type SocketInteraction.RoomId SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data 获取此交互的数据。 public SocketSlashCommandData Data { get; } Property Value SocketSlashCommandData"
  },
  "api/HeyBox.WebSocket.SocketSlashCommandData.html": {
    "href": "api/HeyBox.WebSocket.SocketSlashCommandData.html",
    "title": "Class SocketSlashCommandData | HeyBox.Net 文档",
    "keywords": "Class SocketSlashCommandData Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个通过网关接收的斜线命令的数据。 public class SocketSlashCommandData : SocketEntity<ulong>, IEntity<ulong>, ISlashCommandInteractionData, IHeyBoxInteractionData Inheritance object SocketEntity<ulong> SocketSlashCommandData Implements IEntity<ulong> ISlashCommandInteractionData IHeyBoxInteractionData Inherited Members SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name 获取命令的名称。 public string Name { get; } Property Value string Options 获取用户提供的选项。 public IReadOnlyCollection<SocketSlashCommandDataOption> Options { get; } Property Value IReadOnlyCollection<SocketSlashCommandDataOption>"
  },
  "api/HeyBox.WebSocket.SocketSlashCommandDataOption.html": {
    "href": "api/HeyBox.WebSocket.SocketSlashCommandDataOption.html",
    "title": "Class SocketSlashCommandDataOption | HeyBox.Net 文档",
    "keywords": "Class SocketSlashCommandDataOption Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个通过网关接收的斜线命令的数据选项。 public class SocketSlashCommandDataOption : ISlashCommandInteractionDataOption Inheritance object SocketSlashCommandDataOption Implements ISlashCommandInteractionDataOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name 获取此选项的名称。 public string Name { get; } Property Value string RawValue 获取此选项的原始值。 public string RawValue { get; } Property Value string Type 获取此选项的类型。 public SlashCommandOptionType Type { get; } Property Value SlashCommandOptionType Value 获取此选项的值。 note 此对象类型可能是 SlashCommandOptionType 中的任意一个选项类型。 public object? Value { get; } Property Value object"
  },
  "api/HeyBox.WebSocket.SocketTextChannel.html": {
    "href": "api/HeyBox.WebSocket.SocketTextChannel.html",
    "title": "Class SocketTextChannel | HeyBox.Net 文档",
    "keywords": "Class SocketTextChannel Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示房间中一个基于网关的具有文字聊天能力的频道，可以发送和接收消息。 public class SocketTextChannel : SocketRoomChannel, ITextChannel, INestedChannel, IRoomChannel, IMentionable, ISocketMessageChannel, IMessageChannel, IChannel, IEntity<ulong> Inheritance object SocketEntity<ulong> SocketChannel SocketRoomChannel SocketTextChannel Implements ITextChannel INestedChannel IRoomChannel IMentionable ISocketMessageChannel IMessageChannel IChannel IEntity<ulong> Inherited Members SocketRoomChannel.Room SocketRoomChannel.Name SocketRoomChannel.Type SocketEntity<ulong>.Id SocketEntity<ulong>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ChannelExtensions.GetChannelType(IChannel) Properties Mention 获取一个用于提及此对象的格式化字符串。 public string Mention { get; } Property Value string Methods SendFileAsync(FileAttachment, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(FileAttachment attachment, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters attachment FileAttachment 文件的附件信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(Stream, string, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(Stream stream, string filename, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters stream Stream 文件的流。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendFileAsync(string, string?, AttachmentType, Size?, IMessageReference?, RequestOptions?) 发送文件到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendFileAsync(string path, string? filename = null, AttachmentType type = AttachmentType.Image, Size? imageSize = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters path string 文件的路径。 filename string 文件名。 type AttachmentType 文件的媒体类型。 imageSize Size? 图片文件的图像尺寸。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。 SendTextAsync(string, IEnumerable<FileAttachment>?, IMessageReference?, RequestOptions?) 发送文本消息到此消息频道。 public Task<Cacheable<IUserMessage, ulong>> SendTextAsync(string text, IEnumerable<FileAttachment>? imageFileInfos = null, IMessageReference? messageReference = null, RequestOptions? options = null) Parameters text string 要发送的文本。 imageFileInfos IEnumerable<FileAttachment> 图片文件的信息。 messageReference IMessageReference 消息引用，用于回复消息。 options RequestOptions 发送请求时要使用的选项。 Returns Task<Cacheable<IUserMessage, ulong>> 一个表示异步发送操作的任务。任务的结果包含所发送消息的可延迟加载的消息对象。"
  },
  "api/HeyBox.WebSocket.SocketUser.html": {
    "href": "api/HeyBox.WebSocket.SocketUser.html",
    "title": "Class SocketUser | HeyBox.Net 文档",
    "keywords": "Class SocketUser Namespace HeyBox.WebSocket Assembly HeyBox.Net.WebSocket.dll 表示一个基于网关的用户。 public abstract class SocketUser : SocketEntity<uint>, IUser, IEntity<uint>, IMentionable Inheritance object SocketEntity<uint> SocketUser Implements IUser IEntity<uint> IMentionable Derived SocketRoomUser SocketSelfUser Inherited Members SocketEntity<uint>.Id SocketEntity<uint>.IsPopulated object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Avatar 获取此用户的头像图像的 URL。 public abstract string? Avatar { get; } Property Value string AvatarDecorationType 获取用户头像装饰类型。 public abstract string? AvatarDecorationType { get; } Property Value string AvatarDecorationUrl 获取此用户的头像装饰图像的 URL。 public abstract string? AvatarDecorationUrl { get; } Property Value string IsBot 获取此用户是否为 Bot。 public abstract bool? IsBot { get; } Property Value bool? Level 获取此用户的等级。 public abstract int? Level { get; } Property Value int? Mention 获取一个用于提及此对象的格式化字符串。 public string Mention { get; } Property Value string Username 获取此用户的用户名。 public abstract string? Username { get; } Property Value string"
  },
  "api/HeyBox.WebSocket.html": {
    "href": "api/HeyBox.WebSocket.html",
    "title": "Namespace HeyBox.WebSocket | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox.WebSocket Classes BaseSocketClient 表示一个基于网关的客户端的抽象基类。 GatewayReconnectException 当网关客户端被请求重新连接时引发的异常。 HeyBoxSocketClient 表示一个基于网关的 HeyBox 客户端。 HeyBoxSocketConfig 表示一个用于 HeyBoxSocketClient 的配置类。 HeyBoxSocketRestClient 表示一个用于网关客户端内的 REST 客户端。 SocketChannel 表示一个基于网关的频道。 SocketEntity<TId> 表示一个基于网关的具有唯一标识符的实体。 SocketInteraction 表示一个通过网关接收的交互。 SocketRole 表示一个基于网关的身份组。 SocketRoom 表示一个基于网关的房间。 SocketRoomChannel 表示一个基于网关的房间频道。 SocketRoomUser 表示一个基于网关的房间用户。 SocketSelfUser 表示一个基于网关的当前登录的用户信息。 SocketSlashCommand 表示一个通过网关接收的斜线命令。 SocketSlashCommandData 表示一个通过网关接收的斜线命令的数据。 SocketSlashCommandDataOption 表示一个通过网关接收的斜线命令的数据选项。 SocketTextChannel 表示房间中一个基于网关的具有文字聊天能力的频道，可以发送和接收消息。 SocketUser 表示一个基于网关的用户。 Interfaces ISocketMessageChannel 表示一个基于网关的消息频道，可以用来发送和接收消息。"
  },
  "api/HeyBox.html": {
    "href": "api/HeyBox.html",
    "title": "Namespace HeyBox | HeyBox.Net 文档",
    "keywords": "Namespace HeyBox Classes ChannelExtensions 提供用于各种频道实体的扩展方法。 Format 提供用于格式化字符的帮助类。 HeyBoxConfig 定义 HeyBox.Net 各种基础行为的配置项。 MentionUtils 提供一组用于生成与解析提及标签的辅助方法。 MessageReference 表示一个消息引用。 RequestOptions 表示发送请求时要使用的选项。 SlashCommandOptionChoiceProperties Represents a choice for a ISlashCommandInteractionDataOption. This class is used when making new commands. SlashCommandOptionProperties Represents a slash commands option for making slash commands. SlashCommandProperties Represents the base class to create/modify application commands. Tag<TKey, TValue> Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. TokenUtils 提供一组用于处理黑盒语音登录令牌的辅助方法。 Structs Cacheable<TEntity, TId> 表示一个可延迟加载的缓存实体。 Cacheable<TCachedEntity, TDownloadableEntity, TRelationship, TId> 表示一个可延迟加载的缓存实体。 FileAttachment 表示一个文件附件。 HeyBoxError 表示一个 HeyBox 返回的错误。 HeyBoxErrorCode 表示从 HeyBox 接收到的错误代码。 HeyBoxJsonError 表示一个在执行 API 请求后从 HeyBox 接收到的 JSON 数据中解析出的错误。 LogMessage 表示一个用于记录日志的消息对象。 Interfaces IChannel 表示一个通用的频道。 IEntity<TId> 表示一个通用的具有唯一标识符的实体。 IHeyBoxClient 表示一个通用的黑盒语音 Bot 客户端。 IHeyBoxInteraction 表示一个通用的 HeyBox 交互实体。 IHeyBoxInteractionData 表示一个通用的 HeyBox 交互数据。 IInteractionContext Represents the context of an Interaction. IMentionable 表示一个可以被提及的实体对象。 IMessage 表示一个通用的消息。 IMessageChannel 表示一个通用的消息频道，可以用来发送和接收消息。 IMessageReference 表示一个通用的消息引用。 INestedChannel 表示一个通用的嵌套频道，即可以嵌套在分组频道中的房间频道。 IRateLimitInfo 表示一个通用的限速信息。 IRole 表示一个通用的身份组。 IRoom 表示一个通用的房间。 IRoomChannel 表示一个通用的房间频道。 IRoomUser 表示一个通用的房间用户。 IRouteMatchContainer Represents a container for temporarily storing CustomId wild card matches of a component. IRouteSegmentMatch Represents an object for storing a CustomId wild card match. ISelfUser 表示一个通用的当前登录的用户信息。 ISlashCommandInteraction 表示一个通用的 HeyBox 斜线命令交互实体。 ISlashCommandInteractionData 表示一个斜线命令交互的数据。 ISlashCommandInteractionDataOption 表示一个斜线命令交互的选项。 ITag 表示一个消息中通用的标签。 ITextChannel 表示房间中一个通用的具有文字聊天能力的频道，可以发送和接收消息。 IUser 表示一个通用的用户。 IUserMessage 表示一个通用的用户消息。 Enums ApplicationCommandType 表示应用命令的类型。 AttachmentType 表示附件的类型。 CacheMode 表示应该使用的缓存模式。 ChannelType 表示频道的类型。 ConnectionState 指定客户端的连接状态。 CreateAttachmentMode 指示 FileAttachment 如何创建附件。 InteractionContextType Represents a context in HeyBox where an interaction can be used. InteractionType 表示 HeyBox 交互的类型。 LogSeverity 表示日志消息的严重性。 LoginState 表示客户端的登录状态。 MessageSource 表示消息的来源。 MessageType 表示消息的类型。 RetryMode 表示请求在发生错误时应如何处理。 SlashCommandOptionType 表示一个斜线命令选项的类型。 TagHandling 表示在转换标签时应进行的操作类型。 TagType 表示标签的类型。 TokenType 表示客户端所使用的令牌类型。"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API 文档 | HeyBox.Net 文档",
    "keywords": "API 文档 用于浏览 HeyBox.Net 的全部公开 API 信息。"
  },
  "changelog/changelog.html": {
    "href": "changelog/changelog.html",
    "title": "变更日志 | HeyBox.Net 文档",
    "keywords": "变更日志 测试版本迭代中，暂无变更日志。"
  },
  "demos/demos-community.html": {
    "href": "demos/demos-community.html",
    "title": "社区示例项目 | HeyBox.Net 文档",
    "keywords": "社区示例项目"
  },
  "demos/demos.html": {
    "href": "demos/demos.html",
    "title": "示例项目 | HeyBox.Net 文档",
    "keywords": "示例项目 基础 HeyBox.Net.Samples.SimpleBot 该项目演示了创建并启动 Bot 的基本方法，并通过交互框架实现了一个简单的回声机器人。"
  },
  "guides/introduction/intro.html": {
    "href": "guides/introduction/intro.html",
    "title": "HeyBox.Net 简介 | HeyBox.Net 文档",
    "keywords": "简介 要准备使用 HeyBox.Net？ 欢迎！在开始使用本类库前，请先确认您应了解如何开发 .NET 应用程序， 并对 C# 语言有一定的了解，包括 异步编程、多态、接口 等关键内容。 如果想与使用本类库的开发者交流、获取帮助、反馈问题，请访问我们的 黑盒语音 HeyBox.Net 社区。 Note 请注意，本文档中的代码片段仅为示例，请不要盲目地直接复制使用。 Tip 本文档仍在编写中，除了参考实例代码与求助于社区外，由于本项目与 Kook.Net 都是移植自 Discord.Net，您还可以参考 Kook.Net 与 Discord.Net 的文档。 还不熟悉 .NET 与 C#？ 本类库的样例、代码片段、文档都是以 .NET 和 C# 开发的，如有需要，可参考以下文档： C# 编程指南 C# 文档 C# 语言参考 .NET API"
  },
  "index.html": {
    "href": "index.html",
    "title": "首页 | HeyBox.Net 文档",
    "keywords": "HeyBox.Net 本文档是 HeyBox.Net 的官方文档，包含了 HeyBox.Net 的使用指南、API 文档以及其他相关信息。文档的源码托管在 GitHub 上，欢迎您为文档做出贡献。 什么是 HeyBox.Net？ HeyBox.Net 是一个对 黑盒语音 API 进行功能封装的类库，以 C# 编写，编译所采用的目标框架包括 .NET 8.0 .NET 6.0 Tip 除 .NET 8.0 外的其他目标框架未经完全测试。 我应该从哪里开始？ 如果您是初次使用 HeyBox.Net，请参考 用户指南。 如果您想浏览完整的 HeyBox.Net API，请参考 API 文档。 寻求帮助？ 如果您在开发中遇到无法解决的问题，请访问我们的 黑盒语音 HeyBox.Net 社区 寻求帮助。"
  }
}